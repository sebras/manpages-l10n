# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-08-11 05:36-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: TH
#: archlinux
#, no-wrap
msgid "libalpm_cb"
msgstr ""

#. type: TH
#: archlinux
#, no-wrap
msgid "Wed Jul 20 2022"
msgstr ""

#. type: TH
#: archlinux
#, no-wrap
msgid "libalpm"
msgstr ""

#. type: SH
#: archlinux
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: archlinux
msgid "libalpm_cb - Callbacks"
msgstr ""

#. type: Plain text
#: archlinux
#, no-wrap
msgid " - Functions and structures for libalpm's callbacks\\&.  \n"
msgstr ""

#. type: SH
#: archlinux
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: SS
#: archlinux
#, no-wrap
msgid "Data Structures"
msgstr ""

#. type: Plain text
#: archlinux
msgid "struct B<alpm_event_any_t>"
msgstr ""

#. type: Plain text
#: archlinux
msgid "An event that may represent any event\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid "struct B<alpm_event_package_operation_t>"
msgstr ""

#. type: Plain text
#: archlinux
msgid "A package operation event occurred\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid "struct B<alpm_event_optdep_removal_t>"
msgstr ""

#. type: Plain text
#: archlinux
msgid "An optional dependency was removed\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid "struct B<alpm_event_scriptlet_info_t>"
msgstr ""

#. type: Plain text
#: archlinux
msgid "A scriptlet was ran\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid "struct B<alpm_event_database_missing_t>"
msgstr ""

#. type: Plain text
#: archlinux
msgid "A database is missing\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid "struct B<alpm_event_pkgdownload_t>"
msgstr ""

#. type: Plain text
#: archlinux
msgid "A package was downloaded\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid "struct B<alpm_event_pacnew_created_t>"
msgstr ""

#. type: Plain text
#: archlinux
msgid "A pacnew file was created\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid "struct B<alpm_event_pacsave_created_t>"
msgstr ""

#. type: Plain text
#: archlinux
msgid "A pacsave file was created\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid "struct B<alpm_event_hook_t>"
msgstr ""

#. type: Plain text
#: archlinux
msgid "pre/post transaction hooks are to be ran\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid "struct B<alpm_event_hook_run_t>"
msgstr ""

#. type: Plain text
#: archlinux
msgid "A pre/post transaction hook was ran\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid "struct B<alpm_event_pkg_retrieve_t>"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Packages downloading about to start\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid "union B<alpm_event_t>"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Events\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid "struct B<alpm_question_any_t>"
msgstr ""

#. type: Plain text
#: archlinux
msgid "A question that can represent any other question\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid "struct B<alpm_question_install_ignorepkg_t>"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Should target in ignorepkg be installed anyway?"
msgstr ""

#. type: Plain text
#: archlinux
msgid "struct B<alpm_question_replace_t>"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Should a package be replaced?"
msgstr ""

#. type: Plain text
#: archlinux
msgid "struct B<alpm_question_conflict_t>"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Should a conflicting package be removed?"
msgstr ""

#. type: Plain text
#: archlinux
msgid "struct B<alpm_question_corrupted_t>"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Should a corrupted package be deleted?"
msgstr ""

#. type: Plain text
#: archlinux
msgid "struct B<alpm_question_remove_pkgs_t>"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Should unresolvable targets be removed from the transaction?"
msgstr ""

#. type: Plain text
#: archlinux
msgid "struct B<alpm_question_select_provider_t>"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Provider selection\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid "struct B<alpm_question_import_key_t>"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Should a key be imported?"
msgstr ""

#. type: Plain text
#: archlinux
msgid "union B<alpm_question_t>"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Questions\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid "struct B<alpm_download_event_init_t>"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Context struct for when a download starts\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid "struct B<alpm_download_event_progress_t>"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Context struct for when a download progresses\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid "struct B<alpm_download_event_retry_t>"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Context struct for when a download retries\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid "struct B<alpm_download_event_completed_t>"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Context struct for when a download completes\\&."
msgstr ""

#. type: SS
#: archlinux
#, no-wrap
msgid "Typedefs"
msgstr ""

#. type: Plain text
#: archlinux
msgid "typedef void(* B<alpm_cb_event>) (void *ctx, B<alpm_event_t> *)"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Event callback\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid "typedef void(* B<alpm_cb_question>) (void *ctx, B<alpm_question_t> *)"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Question callback\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"typedef void(* B<alpm_cb_progress>) (void *ctx, B<alpm_progress_t> progress, "
"const char *pkg, int percent, size_t howmany, size_t current)"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Progress callback\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"typedef void(* B<alpm_cb_download>) (void *ctx, const char *filename, "
"B<alpm_download_event_type_t> event, void *data)"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Type of download progress callbacks\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"typedef int(* B<alpm_cb_fetch>) (void *ctx, const char *url, const char "
"*localpath, int force)"
msgstr ""

#. type: Plain text
#: archlinux
msgid "A callback for downloading files\\&."
msgstr ""

#. type: SS
#: archlinux
#, no-wrap
msgid "Enumerations"
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"enum B<alpm_event_type_t> { B<ALPM_EVENT_CHECKDEPS_START> = 1, "
"B<ALPM_EVENT_CHECKDEPS_DONE>, B<ALPM_EVENT_FILECONFLICTS_START>, "
"B<ALPM_EVENT_FILECONFLICTS_DONE>, B<ALPM_EVENT_RESOLVEDEPS_START>, "
"B<ALPM_EVENT_RESOLVEDEPS_DONE>, B<ALPM_EVENT_INTERCONFLICTS_START>, "
"B<ALPM_EVENT_INTERCONFLICTS_DONE>, B<ALPM_EVENT_TRANSACTION_START>, "
"B<ALPM_EVENT_TRANSACTION_DONE>, B<ALPM_EVENT_PACKAGE_OPERATION_START>, "
"B<ALPM_EVENT_PACKAGE_OPERATION_DONE>, B<ALPM_EVENT_INTEGRITY_START>, "
"B<ALPM_EVENT_INTEGRITY_DONE>, B<ALPM_EVENT_LOAD_START>, "
"B<ALPM_EVENT_LOAD_DONE>, B<ALPM_EVENT_SCRIPTLET_INFO>, "
"B<ALPM_EVENT_DB_RETRIEVE_START>, B<ALPM_EVENT_DB_RETRIEVE_DONE>, "
"B<ALPM_EVENT_DB_RETRIEVE_FAILED>, B<ALPM_EVENT_PKG_RETRIEVE_START>, "
"B<ALPM_EVENT_PKG_RETRIEVE_DONE>, B<ALPM_EVENT_PKG_RETRIEVE_FAILED>, "
"B<ALPM_EVENT_DISKSPACE_START>, B<ALPM_EVENT_DISKSPACE_DONE>, "
"B<ALPM_EVENT_OPTDEP_REMOVAL>, B<ALPM_EVENT_DATABASE_MISSING>, "
"B<ALPM_EVENT_KEYRING_START>, B<ALPM_EVENT_KEYRING_DONE>, "
"B<ALPM_EVENT_KEY_DOWNLOAD_START>, B<ALPM_EVENT_KEY_DOWNLOAD_DONE>, "
"B<ALPM_EVENT_PACNEW_CREATED>, B<ALPM_EVENT_PACSAVE_CREATED>, "
"B<ALPM_EVENT_HOOK_START>, B<ALPM_EVENT_HOOK_DONE>, "
"B<ALPM_EVENT_HOOK_RUN_START>, B<ALPM_EVENT_HOOK_RUN_DONE> }"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Type of events\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"enum B<alpm_package_operation_t> { B<ALPM_PACKAGE_INSTALL> = 1, "
"B<ALPM_PACKAGE_UPGRADE>, B<ALPM_PACKAGE_REINSTALL>, "
"B<ALPM_PACKAGE_DOWNGRADE>, B<ALPM_PACKAGE_REMOVE> }"
msgstr ""

#. type: Plain text
#: archlinux
msgid "An enum over the kind of package operations\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"enum B<alpm_hook_when_t> { B<ALPM_HOOK_PRE_TRANSACTION> = 1, "
"B<ALPM_HOOK_POST_TRANSACTION> }"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Kind of hook\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"enum B<alpm_question_type_t> { B<ALPM_QUESTION_INSTALL_IGNOREPKG> = (1 "
"E<lt>E<lt> 0), B<ALPM_QUESTION_REPLACE_PKG> = (1 E<lt>E<lt> 1), "
"B<ALPM_QUESTION_CONFLICT_PKG> = (1 E<lt>E<lt> 2), "
"B<ALPM_QUESTION_CORRUPTED_PKG> = (1 E<lt>E<lt> 3), "
"B<ALPM_QUESTION_REMOVE_PKGS> = (1 E<lt>E<lt> 4), "
"B<ALPM_QUESTION_SELECT_PROVIDER> = (1 E<lt>E<lt> 5), "
"B<ALPM_QUESTION_IMPORT_KEY> = (1 E<lt>E<lt> 6) }"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Type of question\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"enum B<alpm_progress_t> { B<ALPM_PROGRESS_ADD_START>, "
"B<ALPM_PROGRESS_UPGRADE_START>, B<ALPM_PROGRESS_DOWNGRADE_START>, "
"B<ALPM_PROGRESS_REINSTALL_START>, B<ALPM_PROGRESS_REMOVE_START>, "
"B<ALPM_PROGRESS_CONFLICTS_START>, B<ALPM_PROGRESS_DISKSPACE_START>, "
"B<ALPM_PROGRESS_INTEGRITY_START>, B<ALPM_PROGRESS_LOAD_START>, "
"B<ALPM_PROGRESS_KEYRING_START> }"
msgstr ""

#. type: Plain text
#: archlinux
msgid "An enum over different kinds of progress alerts\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"enum B<alpm_download_event_type_t> { B<ALPM_DOWNLOAD_INIT>, "
"B<ALPM_DOWNLOAD_PROGRESS>, B<ALPM_DOWNLOAD_RETRY>, "
"B<ALPM_DOWNLOAD_COMPLETED> }"
msgstr ""

#. type: Plain text
#: archlinux
msgid "File download events\\&."
msgstr ""

#. type: SH
#: archlinux
#, no-wrap
msgid "Detailed Description"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Functions and structures for libalpm's callbacks\\&."
msgstr ""

#. type: SH
#: archlinux
#, no-wrap
msgid "Data Structure Documentation"
msgstr ""

#. type: SH
#: archlinux
#, no-wrap
msgid "struct alpm_event_any_t"
msgstr ""

#. type: Plain text
#: archlinux
msgid "B<Data Fields:>"
msgstr ""

#. type: Plain text
#: archlinux
msgid "B<alpm_event_type_t> I<type> Type of event\\&."
msgstr ""

#. type: SH
#: archlinux
#, no-wrap
msgid "struct alpm_event_package_operation_t"
msgstr ""

#. type: Plain text
#: archlinux
msgid "B<alpm_pkg_t> * I<newpkg> New package\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid "B<alpm_pkg_t> * I<oldpkg> Old package\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid "B<alpm_package_operation_t> I<operation> Type of operation\\&."
msgstr ""

#. type: SH
#: archlinux
#, no-wrap
msgid "struct alpm_event_optdep_removal_t"
msgstr ""

#. type: Plain text
#: archlinux
msgid "B<alpm_depend_t> * I<optdep> Optdep being removed\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid "B<alpm_pkg_t> * I<pkg> Package with the optdep\\&."
msgstr ""

#. type: SH
#: archlinux
#, no-wrap
msgid "struct alpm_event_scriptlet_info_t"
msgstr ""

#. type: Plain text
#: archlinux
msgid "const char * I<line> Line of scriptlet output\\&."
msgstr ""

#. type: SH
#: archlinux
#, no-wrap
msgid "struct alpm_event_database_missing_t"
msgstr ""

#. type: Plain text
#: archlinux
msgid "The database is registered but has not been downloaded"
msgstr ""

#. type: Plain text
#: archlinux
msgid "const char * I<dbname> Name of the database\\&."
msgstr ""

#. type: SH
#: archlinux
#, no-wrap
msgid "struct alpm_event_pkgdownload_t"
msgstr ""

#. type: Plain text
#: archlinux
msgid "const char * I<file> Name of the file\\&."
msgstr ""

#. type: SH
#: archlinux
#, no-wrap
msgid "struct alpm_event_pacnew_created_t"
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"const char * I<file> Filename of the file without the \\&.pacnew suffix\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"int I<from_noupgrade> Whether the creation was result of a NoUpgrade or "
"not\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid "B<alpm_pkg_t> * I<newpkg> New Package\\&."
msgstr ""

#. type: SH
#: archlinux
#, no-wrap
msgid "struct alpm_event_pacsave_created_t"
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"const char * I<file> Filename of the file without the \\&.pacsave suffix\\&."
msgstr ""

#. type: SH
#: archlinux
#, no-wrap
msgid "struct alpm_event_hook_t"
msgstr ""

#. type: Plain text
#: archlinux
msgid "B<alpm_hook_when_t> I<when> Type of hook\\&."
msgstr ""

#. type: SH
#: archlinux
#, no-wrap
msgid "struct alpm_event_hook_run_t"
msgstr ""

#. type: Plain text
#: archlinux
msgid "const char * I<desc> Description of hook to be outputted\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid "const char * I<name> Name of hook\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid "size_t I<position> position of hook being run"
msgstr ""

#. type: Plain text
#: archlinux
msgid "size_t I<total> total hooks being run"
msgstr ""

#. type: SH
#: archlinux
#, no-wrap
msgid "struct alpm_event_pkg_retrieve_t"
msgstr ""

#. type: Plain text
#: archlinux
msgid "size_t I<num> Number of packages to download\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid "off_t I<total_size> Total size of packages to download\\&."
msgstr ""

#. type: SH
#: archlinux
#, no-wrap
msgid "union alpm_event_t"
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"This is a union passed to the callback that allows the frontend to know "
"which type of event was triggered (via type)\\&. It is then possible to "
"typecast the pointer to the right structure, or use the union field, in "
"order to access event-specific data\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid "B<alpm_event_any_t> I<any> The any event type\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid "It's always safe to access this\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"B<alpm_event_database_missing_t> I<database_missing> A database is "
"missing\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"B<alpm_event_hook_t> I<hook> Pre/post transaction hooks are being ran\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid "B<alpm_event_hook_run_t> I<hook_run> A hook was ran\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"B<alpm_event_optdep_removal_t> I<optdep_removal> An optdept was remove\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"B<alpm_event_package_operation_t> I<package_operation> Package operation\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"B<alpm_event_pacnew_created_t> I<pacnew_created> A pacnew file was "
"created\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"B<alpm_event_pacsave_created_t> I<pacsave_created> A pacsave file was "
"created\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid "B<alpm_event_pkg_retrieve_t> I<pkg_retrieve> Download packages\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid "B<alpm_event_pkgdownload_t> I<pkgdownload> A package was downloaded\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"B<alpm_event_scriptlet_info_t> I<scriptlet_info> A scriptlet was ran\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"B<alpm_event_type_t> I<type> Type of event it's always safe to access "
"this\\&."
msgstr ""

#. type: SH
#: archlinux
#, no-wrap
msgid "struct alpm_question_any_t"
msgstr ""

#. type: Plain text
#: archlinux
msgid "int I<answer> Answer\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid "B<alpm_question_type_t> I<type> Type of question\\&."
msgstr ""

#. type: SH
#: archlinux
#, no-wrap
msgid "struct alpm_question_install_ignorepkg_t"
msgstr ""

#. type: Plain text
#: archlinux
msgid "int I<install> Answer: whether or not to install pkg anyway\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"B<alpm_pkg_t> * I<pkg> The ignored package that we are deciding whether to "
"install\\&."
msgstr ""

#. type: SH
#: archlinux
#, no-wrap
msgid "struct alpm_question_replace_t"
msgstr ""

#. type: Plain text
#: archlinux
msgid "B<alpm_db_t> * I<newdb> DB of newpkg\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid "B<alpm_pkg_t> * I<newpkg> Package to replace with\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid "B<alpm_pkg_t> * I<oldpkg> Package to be replaced\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid "int I<replace> Answer: whether or not to replace oldpkg with newpkg\\&."
msgstr ""

#. type: SH
#: archlinux
#, no-wrap
msgid "struct alpm_question_conflict_t"
msgstr ""

#. type: Plain text
#: archlinux
msgid "B<alpm_conflict_t> * I<conflict> Conflict info\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"int I<remove> Answer: whether or not to remove conflict-E<gt>package2\\&."
msgstr ""

#. type: SH
#: archlinux
#, no-wrap
msgid "struct alpm_question_corrupted_t"
msgstr ""

#. type: Plain text
#: archlinux
msgid "const char * I<filepath> File to remove\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"B<alpm_errno_t> I<reason> Error code indicating the reason for package "
"invalidity\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid "int I<remove> Answer: whether or not to remove filepath\\&."
msgstr ""

#. type: SH
#: archlinux
#, no-wrap
msgid "struct alpm_question_remove_pkgs_t"
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"B<alpm_list_t> * I<packages> List of alpm_pkg_t* with unresolved "
"dependencies\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid "int I<skip> Answer: whether or not to skip packages\\&."
msgstr ""

#. type: SH
#: archlinux
#, no-wrap
msgid "struct alpm_question_select_provider_t"
msgstr ""

#. type: Plain text
#: archlinux
msgid "B<alpm_depend_t> * I<depend> What providers provide for\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"B<alpm_list_t> * I<providers> List of alpm_pkg_t* as possible providers\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid "int I<use_index> Answer: which provider to use (index from providers)"
msgstr ""

#. type: SH
#: archlinux
#, no-wrap
msgid "struct alpm_question_import_key_t"
msgstr ""

#. type: Plain text
#: archlinux
msgid "int I<import> Answer: whether or not to import key\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid "B<alpm_pgpkey_t> * I<key> The key to import\\&."
msgstr ""

#. type: SH
#: archlinux
#, no-wrap
msgid "union alpm_question_t"
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"This is an union passed to the callback that allows the frontend to know "
"which type of question was triggered (via type)\\&. It is then possible to "
"typecast the pointer to the right structure, or use the union field, in "
"order to access question-specific data\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"B<alpm_question_any_t> I<any> A question that can represent any question\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"B<alpm_question_conflict_t> I<conflict> Should a conflicting package be "
"removed?"
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"B<alpm_question_corrupted_t> I<corrupted> Should a corrupted package be "
"deleted?"
msgstr ""

#. type: Plain text
#: archlinux
msgid "B<alpm_question_import_key_t> I<import_key> Should a key be imported?"
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"B<alpm_question_install_ignorepkg_t> I<install_ignorepkg> Should target in "
"ignorepkg be installed anyway?"
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"B<alpm_question_remove_pkgs_t> I<remove_pkgs> Should unresolvable targets be "
"removed from the transaction?"
msgstr ""

#. type: Plain text
#: archlinux
msgid "B<alpm_question_replace_t> I<replace> Should a package be replaced?"
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"B<alpm_question_select_provider_t> I<select_provider> Provider selection\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid "B<alpm_question_type_t> I<type> The type of question\\&."
msgstr ""

#. type: SH
#: archlinux
#, no-wrap
msgid "struct alpm_download_event_init_t"
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"int I<optional> whether this file is optional and thus the errors could be "
"ignored"
msgstr ""

#. type: SH
#: archlinux
#, no-wrap
msgid "struct alpm_download_event_progress_t"
msgstr ""

#. type: Plain text
#: archlinux
msgid "off_t I<downloaded> Amount of data downloaded\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid "off_t I<total> Total amount need to be downloaded\\&."
msgstr ""

#. type: SH
#: archlinux
#, no-wrap
msgid "struct alpm_download_event_retry_t"
msgstr ""

#. type: Plain text
#: archlinux
msgid "int I<resume> If the download will resume or start over\\&."
msgstr ""

#. type: SH
#: archlinux
#, no-wrap
msgid "struct alpm_download_event_completed_t"
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"int I<result> download result code: 0 - download completed successfully 1 - "
"the file is up-to-date -1 - error"
msgstr ""

#. type: Plain text
#: archlinux
msgid "off_t I<total> Total bytes in file\\&."
msgstr ""

#. type: SH
#: archlinux
#, no-wrap
msgid "Typedef Documentation"
msgstr ""

#. type: SS
#: archlinux
#, no-wrap
msgid "typedef void(* alpm_cb_download) (void *ctx, const char *filename, alpm_download_event_type_t event, void *data)"
msgstr ""

#. type: Plain text
#: archlinux
msgid "B<Parameters>"
msgstr ""

#. type: Plain text
#: archlinux
msgid "I<ctx> user-provided context"
msgstr ""

#. type: Plain text
#: archlinux
msgid "I<filename> the name of the file being downloaded"
msgstr ""

#. type: Plain text
#: archlinux
msgid "I<event> the event type"
msgstr ""

#. type: Plain text
#: archlinux
msgid "I<data> the event data of type alpm_download_event_*_t"
msgstr ""

#. type: SS
#: archlinux
#, no-wrap
msgid "typedef void(* alpm_cb_event) (void *ctx, alpm_event_t *)"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Event callback\\&. Called when an event occurs"
msgstr ""

#. type: Plain text
#: archlinux
msgid "I<event> the event that occurred"
msgstr ""

#. type: SS
#: archlinux
#, no-wrap
msgid "typedef int(* alpm_cb_fetch) (void *ctx, const char *url, const char *localpath, int force)"
msgstr ""

#. type: Plain text
#: archlinux
msgid "I<url> the URL of the file to be downloaded"
msgstr ""

#. type: Plain text
#: archlinux
msgid "I<localpath> the directory to which the file should be downloaded"
msgstr ""

#. type: Plain text
#: archlinux
msgid "I<force> whether to force an update, even if the file is the same"
msgstr ""

#. type: Plain text
#: archlinux
msgid "B<Returns>"
msgstr ""

#. type: Plain text
#: archlinux
msgid "0 on success, 1 if the file exists and is identical, -1 on error\\&."
msgstr ""

#. type: SS
#: archlinux
#, no-wrap
msgid "typedef void(* alpm_cb_progress) (void *ctx, alpm_progress_t progress, const char *pkg, int percent, size_t howmany, size_t current)"
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"Progress callback\\&. Alert the front end about the progress of certain "
"events\\&. Allows the implementation of loading bars for events that make "
"take a while to complete\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid "I<progress> the kind of event that is progressing"
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"I<pkg> for package operations, the name of the package being operated on"
msgstr ""

#. type: Plain text
#: archlinux
msgid "I<percent> the percent completion of the action"
msgstr ""

#. type: Plain text
#: archlinux
msgid "I<howmany> the total amount of items in the action"
msgstr ""

#. type: Plain text
#: archlinux
msgid "I<current> the current amount of items completed Progress callback"
msgstr ""

#. type: SS
#: archlinux
#, no-wrap
msgid "typedef void(* alpm_cb_question) (void *ctx, alpm_question_t *)"
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"Question callback\\&. This callback allows user to give input and decide "
"what to do during certain events"
msgstr ""

#. type: Plain text
#: archlinux
msgid "I<question> the question being asked\\&."
msgstr ""

#. type: SH
#: archlinux
#, no-wrap
msgid "Enumeration Type Documentation"
msgstr ""

#. type: SS
#: archlinux
#, no-wrap
msgid "enum alpm_download_event_type_t"
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"File download events\\&. These events are reported by ALPM via download "
"callback\\&."
msgstr ""

#. type: Plain text
#: archlinux
msgid "B<Enumerator>"
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_DOWNLOAD_INIT >"
msgstr ""

#. type: Plain text
#: archlinux
msgid "A download was started\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_DOWNLOAD_PROGRESS >"
msgstr ""

#. type: Plain text
#: archlinux
msgid "A download made progress\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_DOWNLOAD_RETRY >"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Download will be retried\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_DOWNLOAD_COMPLETED >"
msgstr ""

#. type: Plain text
#: archlinux
msgid "A download completed\\&."
msgstr ""

#. type: SS
#: archlinux
#, no-wrap
msgid "enum alpm_event_type_t"
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_EVENT_CHECKDEPS_START >"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Dependencies will be computed for a package\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_EVENT_CHECKDEPS_DONE >"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Dependencies were computed for a package\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_EVENT_FILECONFLICTS_START >"
msgstr ""

#. type: Plain text
#: archlinux
msgid "File conflicts will be computed for a package\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_EVENT_FILECONFLICTS_DONE >"
msgstr ""

#. type: Plain text
#: archlinux
msgid "File conflicts were computed for a package\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_EVENT_RESOLVEDEPS_START >"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Dependencies will be resolved for target package\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_EVENT_RESOLVEDEPS_DONE >"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Dependencies were resolved for target package\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_EVENT_INTERCONFLICTS_START >"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Inter-conflicts will be checked for target package\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_EVENT_INTERCONFLICTS_DONE >"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Inter-conflicts were checked for target package\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_EVENT_TRANSACTION_START >"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Processing the package transaction is starting\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_EVENT_TRANSACTION_DONE >"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Processing the package transaction is finished\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_EVENT_PACKAGE_OPERATION_START >"
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"Package will be installed/upgraded/downgraded/re-installed/removed; See "
"B<alpm_event_package_operation_t> for arguments\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_EVENT_PACKAGE_OPERATION_DONE >"
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"Package was installed/upgraded/downgraded/re-installed/removed; See "
"B<alpm_event_package_operation_t> for arguments\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_EVENT_INTEGRITY_START >"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Target package's integrity will be checked\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_EVENT_INTEGRITY_DONE >"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Target package's integrity was checked\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_EVENT_LOAD_START >"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Target package will be loaded\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_EVENT_LOAD_DONE >"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Target package is finished loading\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_EVENT_SCRIPTLET_INFO >"
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"Scriptlet has printed information; See B<alpm_event_scriptlet_info_t> for "
"arguments\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_EVENT_DB_RETRIEVE_START >"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Database files will be downloaded from a repository\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_EVENT_DB_RETRIEVE_DONE >"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Database files were downloaded from a repository\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_EVENT_DB_RETRIEVE_FAILED >"
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"Not all database files were successfully downloaded from a repository\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_EVENT_PKG_RETRIEVE_START >"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Package files will be downloaded from a repository\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_EVENT_PKG_RETRIEVE_DONE >"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Package files were downloaded from a repository\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_EVENT_PKG_RETRIEVE_FAILED >"
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"Not all package files were successfully downloaded from a repository\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_EVENT_DISKSPACE_START >"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Disk space usage will be computed for a package\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_EVENT_DISKSPACE_DONE >"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Disk space usage was computed for a package\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_EVENT_OPTDEP_REMOVAL >"
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"An optdepend for another package is being removed; See "
"B<alpm_event_optdep_removal_t> for arguments\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_EVENT_DATABASE_MISSING >"
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"A configured repository database is missing; See "
"B<alpm_event_database_missing_t> for arguments\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_EVENT_KEYRING_START >"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Checking keys used to create signatures are in keyring\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_EVENT_KEYRING_DONE >"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Keyring checking is finished\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_EVENT_KEY_DOWNLOAD_START >"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Downloading missing keys into keyring\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_EVENT_KEY_DOWNLOAD_DONE >"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Key downloading is finished\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_EVENT_PACNEW_CREATED >"
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"A \\&.pacnew file was created; See B<alpm_event_pacnew_created_t> for "
"arguments\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_EVENT_PACSAVE_CREATED >"
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"A \\&.pacsave file was created; See B<alpm_event_pacsave_created_t> for "
"arguments\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_EVENT_HOOK_START >"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Processing hooks will be started\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_EVENT_HOOK_DONE >"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Processing hooks is finished\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_EVENT_HOOK_RUN_START >"
msgstr ""

#. type: Plain text
#: archlinux
msgid "A hook is starting\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_EVENT_HOOK_RUN_DONE >"
msgstr ""

#. type: Plain text
#: archlinux
msgid "A hook has finished running\\&."
msgstr ""

#. type: SS
#: archlinux
#, no-wrap
msgid "enum alpm_hook_when_t"
msgstr ""

#. type: SS
#: archlinux
#, no-wrap
msgid "enum alpm_package_operation_t"
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_PACKAGE_INSTALL >"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Package (to be) installed\\&. (No oldpkg)"
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_PACKAGE_UPGRADE >"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Package (to be) upgraded\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_PACKAGE_REINSTALL >"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Package (to be) re-installed\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_PACKAGE_DOWNGRADE >"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Package (to be) downgraded\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_PACKAGE_REMOVE >"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Package (to be) removed (No newpkg)"
msgstr ""

#. type: SS
#: archlinux
#, no-wrap
msgid "enum alpm_progress_t"
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_PROGRESS_ADD_START >"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Package install\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_PROGRESS_UPGRADE_START >"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Package upgrade\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_PROGRESS_DOWNGRADE_START >"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Package downgrade\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_PROGRESS_REINSTALL_START >"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Package reinstall\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_PROGRESS_REMOVE_START >"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Package removal\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_PROGRESS_CONFLICTS_START >"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Conflict checking\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_PROGRESS_DISKSPACE_START >"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Diskspace checking\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_PROGRESS_INTEGRITY_START >"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Package Integrity checking\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_PROGRESS_LOAD_START >"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Loading packages from disk\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_PROGRESS_KEYRING_START >"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Checking signatures of packages\\&."
msgstr ""

#. type: SS
#: archlinux
#, no-wrap
msgid "enum alpm_question_type_t"
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"Type of question\\&. Unlike the events or progress enumerations, this enum "
"has bitmask values so a frontend can use a bitmask map to supply preselected "
"answers to the different types of questions\\&."
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_QUESTION_INSTALL_IGNOREPKG >"
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_QUESTION_REPLACE_PKG >"
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_QUESTION_CONFLICT_PKG >"
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_QUESTION_CORRUPTED_PKG >"
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_QUESTION_REMOVE_PKGS >"
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_QUESTION_SELECT_PROVIDER >"
msgstr ""

#. type: TP
#: archlinux
#, no-wrap
msgid "I<ALPM_QUESTION_IMPORT_KEY >"
msgstr ""

#. type: SH
#: archlinux
#, no-wrap
msgid "Author"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Generated automatically by Doxygen for libalpm from the source code\\&."
msgstr ""
