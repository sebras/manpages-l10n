# Dutch translation of manpages
# This file is distributed under the same license as the manpages-l10n package.
# Copyright © of this file:
# Jos Boersema <joshb@xs4all.nl>, 2001.
# Mario Blättermann <mario.blaettermann@gmail.com>, 2019.
# Luc Castermans <luc.castermans@gmail.com>, 2021, 2022.
msgid ""
msgstr ""
"Project-Id-Version: manpages-l10n 2.15\n"
"POT-Creation-Date: 2022-11-14 19:40+0100\n"
"PO-Revision-Date: 2022-05-29 13:01+0200\n"
"Last-Translator: Luc Castermans <luc.castermans@gmail.com>\n"
"Language-Team: Dutch <kde-i18n-nl@kde.org>\n"
"Language: nl\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Generator: Lokalize 22.04.1\n"

#. type: TH
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "MALLOC"
msgstr "MALLOC"

#. type: TH
#: archlinux debian-unstable fedora-rawhide mageia-cauldron
#, no-wrap
msgid "2022-10-09"
msgstr "9 oktober 2022"

#. type: TH
#: archlinux debian-unstable fedora-rawhide mageia-cauldron
#, no-wrap
msgid "Linux man-pages 6.01"
msgstr ""

#. type: SH
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "NAME"
msgstr "NAAM"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"malloc, free, calloc, realloc, reallocarray - allocate and free dynamic "
"memory"
msgstr ""
"malloc, free, calloc, realloc - reserveren en vrijmaken van dynamisch "
"geheugen"

#. type: SH
#: archlinux debian-unstable fedora-rawhide mageia-cauldron
#, no-wrap
msgid "LIBRARY"
msgstr ""

#. type: Plain text
#: archlinux debian-unstable fedora-rawhide mageia-cauldron
msgid "Standard C library (I<libc>, I<-lc>)"
msgstr ""

#. type: SH
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "SYNOPSIS"
msgstr "SAMENVATTING"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<#include E<lt>stdlib.hE<gt>>\n"
msgstr "B<#include E<lt>stdlib.hE<gt>>\n"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid ""
"B<void *malloc(size_t >I<size>B<);>\n"
"B<void free(void >I<*ptr>B<);>\n"
"B<void *calloc(size_t >I<nmemb>B<, size_t >I<size>B<);>\n"
"B<void *realloc(void >I<*ptr>B<, size_t >I<size>B<);>\n"
"B<void *reallocarray(void >I<*ptr>B<, size_t >I<nmemb>B<, size_t >I<size>B<);>\n"
msgstr ""
"B<void *malloc(size_t >I<grootte>B<);>\n"
"B<void free(void >I<*wzr>B<);>\n"
"B<void *calloc(size_t >I<nmemb>B<, size_t >I<grootte>B<);>\n"
"B<void *realloc(void >I<*wzr>B<, size_t >I<grootte>B<);>\n"
"B<void *reallocarray(void >I<*wzr>B<, size_t >I<nmemb>B<, size_t >I<grootte>B<);>\n"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"Feature Test Macro Requirements for glibc (see B<feature_test_macros>(7)):"
msgstr "Feature Test Macro´s eisen in  glibc (zie B<feature_test_macros>(7)):"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid "B<reallocarray>():"
msgstr "B<reallocarray>():"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid ""
"    Since glibc 2.29:\n"
"        _DEFAULT_SOURCE\n"
"    Glibc 2.28 and earlier:\n"
"        _GNU_SOURCE\n"
msgstr ""
"_GNU_SOURCE\n"
"    Sinds glibc 2.29:\n"
"        _DEFAULT_SOURCE\n"
"    Glibc 2.28 en eerder:\n"
"        _GNU_SOURCE\n"

#. type: SH
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "DESCRIPTION"
msgstr "BESCHRIJVING"

#. type: SS
#: archlinux debian-unstable fedora-rawhide mageia-cauldron
#, no-wrap
msgid "malloc()"
msgstr ""

#. type: Plain text
#: archlinux debian-unstable fedora-rawhide mageia-cauldron
#, fuzzy
#| msgid ""
#| "The B<malloc>()  function allocates I<size> bytes and returns a pointer "
#| "to the allocated memory.  I<The memory is not initialized>.  If I<size> "
#| "is 0, then B<malloc>()  returns either NULL, or a unique pointer value "
#| "that can later be successfully passed to B<free>()."
msgid ""
"The B<malloc>()  function allocates I<size> bytes and returns a pointer to "
"the allocated memory.  I<The memory is not initialized>.  If I<size> is 0, "
"then B<malloc>()  returns a unique pointer value that can later be "
"successfully passed to B<free>().  (See \"Nonportable behavior\" for "
"portability issues.)"
msgstr ""
"De B<malloc>() functie reserveert I<grootte> bytes geheugen en geeft een "
"wijzer naar het gereserveerde geheugen terug. I<Het geheugen wordt niet "
"geinitialiseerd>. Als I<grootte> gelijk is aan 0, dan retourneert "
"B<malloc>() ofwel een NULL ofwel een unieke wijzer waarde sdie later kan "
"worden mee gegeven aan B<free>()."

#. type: SS
#: archlinux debian-unstable fedora-rawhide mageia-cauldron
#, no-wrap
msgid "free()"
msgstr ""

#. type: Plain text
#: archlinux debian-unstable fedora-rawhide mageia-cauldron
#, fuzzy
#| msgid ""
#| "The B<free>()  function frees the memory space pointed to by I<ptr>, "
#| "which must have been returned by a previous call to B<malloc>(), "
#| "B<calloc>(), or B<realloc>().  Otherwise, or if I<free(ptr)> has already "
#| "been called before, undefined behavior occurs.  If I<ptr> is NULL, no "
#| "operation is performed."
msgid ""
"The B<free>()  function frees the memory space pointed to by I<ptr>, which "
"must have been returned by a previous call to B<malloc>()  or related "
"functions.  Otherwise, or if I<ptr> has already been freed, undefined "
"behavior occurs.  If I<ptr> is NULL, no operation is performed."
msgstr ""
"De B<free>() functie maakt de geheugen-ruimte waar I<wzr> naar wijst vrij, "
"geheugen dat gereserveerd moet zijn door een eerdere aanroep naar "
"B<malloc>(), B<calloc>() of B<realloc>(). Anders, of als I<free(wzr)> al "
"eerder werd aangeroepen, ontstaat onbepaald gedrag. Als I<wzr> B<NULL> is "
"wordt niets gedaan."

#. type: SS
#: archlinux debian-unstable fedora-rawhide mageia-cauldron
#, no-wrap
msgid "calloc()"
msgstr ""

#. type: Plain text
#: archlinux debian-unstable fedora-rawhide mageia-cauldron
#, fuzzy
#| msgid ""
#| "The B<calloc>()  function allocates memory for an array of I<nmemb> "
#| "elements of I<size> bytes each and returns a pointer to the allocated "
#| "memory.  The memory is set to zero.  If I<nmemb> or I<size> is 0, then "
#| "B<calloc>()  returns either NULL, or a unique pointer value that can "
#| "later be successfully passed to B<free>()."
msgid ""
"The B<calloc>()  function allocates memory for an array of I<nmemb> elements "
"of I<size> bytes each and returns a pointer to the allocated memory.  The "
"memory is set to zero.  If I<nmemb> or I<size> is 0, then B<calloc>()  "
"returns a unique pointer value that can later be successfully passed to "
"B<free>()."
msgstr ""
"De B<malloc>() functie reserveert I<grootte> bytes geheugen en geeft een "
"wijzer naar het gereserveerde geheugen terug. Het geheugen wordt niet "
"geïnitialiseerd. Als I<nmemb> of I<grootte> gelijk is aan 0, dan retourneert "
"B<malloc>() ofwel een NULL ofwel een unieke wijzer waarde die later kan "
"worden mee gegeven aan B<free>()."

#. type: Plain text
#: archlinux debian-unstable fedora-rawhide mageia-cauldron
#, fuzzy
#| msgid ""
#| "The B<calloc>()  function allocates memory for an array of I<nmemb> "
#| "elements of I<size> bytes each and returns a pointer to the allocated "
#| "memory.  The memory is set to zero.  If I<nmemb> or I<size> is 0, then "
#| "B<calloc>()  returns either NULL, or a unique pointer value that can "
#| "later be successfully passed to B<free>().  If the multiplication of "
#| "I<nmemb> and I<size> would result in integer overflow, then B<calloc>()  "
#| "returns an error.  By contrast, an integer overflow would not be detected "
#| "in the following call to B<malloc>(), with the result that an incorrectly "
#| "sized block of memory would be allocated:"
msgid ""
"If the multiplication of I<nmemb> and I<size> would result in integer "
"overflow, then B<calloc>()  returns an error.  By contrast, an integer "
"overflow would not be detected in the following call to B<malloc>(), with "
"the result that an incorrectly sized block of memory would be allocated:"
msgstr ""
"De B<calloc>() reserveert geheugen voor een tabel van I<nmemb> elementen "
"ter  van I<grootte> bytes, en geeft een wijzer naar het toegewezen geheugen "
"terug. Het geheugen wordt ge`nul'd. Als I<nmemb> of I<grootte> gelijk is aan "
"0, dan geeft B<calloc>() ofwel een NULL terug ofwel een unieke wijzer waarde "
"die later succesvol mee gegeven kan worden aan B<free>(). Als de "
"vermenigvuldiging van I<nmemb> en I<grootte> zou resulteren in een geheel "
"getal overloop, dan geeft B<calloc>() een foutmelding. In tegenstelling tot "
"dit zou een geheel getal overloop niet opgemerkt worden in de volgende "
"aanroep van B<malloc>(), met als resultaat dat een blok geheugen met een "
"niet correct grootte gereserveerd zou worden: "

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "malloc(nmemb * size);\n"
msgstr "malloc(nmemb * grootte);\n"

#. type: SS
#: archlinux debian-unstable fedora-rawhide mageia-cauldron
#, fuzzy, no-wrap
#| msgid "B<reallocarray>():"
msgid "realloc()"
msgstr "B<reallocarray>():"

#. type: Plain text
#: archlinux debian-unstable fedora-rawhide mageia-cauldron
#, fuzzy
#| msgid ""
#| "The B<realloc>()  function changes the size of the memory block pointed "
#| "to by I<ptr> to I<size> bytes.  The contents will be unchanged in the "
#| "range from the start of the region up to the minimum of the old and new "
#| "sizes.  If the new size is larger than the old size, the added memory "
#| "will I<not> be initialized.  If I<ptr> is NULL, then the call is "
#| "equivalent to I<malloc(size)>, for all values of I<size>; if I<size> is "
#| "equal to zero, and I<ptr> is not NULL, then the call is equivalent to "
#| "I<free(ptr)>.  Unless I<ptr> is NULL, it must have been returned by an "
#| "earlier call to B<malloc>(), B<calloc>(), or B<realloc>().  If the area "
#| "pointed to was moved, a I<free(ptr)> is done."
msgid ""
"The B<realloc>()  function changes the size of the memory block pointed to "
"by I<ptr> to I<size> bytes.  The contents of the memory will be unchanged in "
"the range from the start of the region up to the minimum of the old and new "
"sizes.  If the new size is larger than the old size, the added memory will "
"I<not> be initialized."
msgstr ""
"De B<realloc>() functie verandert de grootte van het geheugen-blok waar "
"I<wzr> naar wijst in I<grootte> bytes. De inhoud zal onveranderd blijven in "
"het gebied dat begint bij het geheugen gebied tot aan het minimum van de "
"oude en nieuwe grootte. Als de nieuwe grootte groter is dan de oude dan "
"wordt het toegevoegde geheugen niet geïnitialiseerd. Als I<wzr> B<NULL> is, "
"dan is de aanroep gelijk aan B<malloc(grootte)>; als grootte gelijk aan nul "
"is, dan is de aanroep gelijk aan I<free(wzr)>. Tenzij I<wzr> B<NULL> is, "
"moet het teruggegeven zijn door een eerdere aanroep naar B<malloc>(), "
"B<calloc>() of B<realloc>(). Als het gebied waarnaar gewezen werd werd "
"verplaatst dan wordt een I<free(wzr)> uitgevoerd."

#. type: Plain text
#: archlinux debian-unstable fedora-rawhide mageia-cauldron
msgid ""
"If I<ptr> is NULL, then the call is equivalent to I<malloc(size)>, for all "
"values of I<size>."
msgstr ""

#. type: Plain text
#: archlinux debian-unstable fedora-rawhide mageia-cauldron
msgid ""
"If I<size> is equal to zero, and I<ptr> is not NULL, then the call is "
"equivalent to I<free(ptr)> (but see \"Nonportable behavior\" for portability "
"issues)."
msgstr ""

#. type: Plain text
#: archlinux debian-unstable fedora-rawhide mageia-cauldron
msgid ""
"Unless I<ptr> is NULL, it must have been returned by an earlier call to "
"B<malloc> or related functions.  If the area pointed to was moved, a "
"I<free(ptr)> is done."
msgstr ""

#. type: SS
#: archlinux debian-unstable fedora-rawhide mageia-cauldron
#, fuzzy, no-wrap
#| msgid "B<reallocarray>():"
msgid "reallocarray()"
msgstr "B<reallocarray>():"

#. type: Plain text
#: archlinux debian-unstable fedora-rawhide mageia-cauldron
#, fuzzy
#| msgid ""
#| "The B<reallocarray>()  function changes the size of the memory block "
#| "pointed to by I<ptr> to be large enough for an array of I<nmemb> "
#| "elements, each of which is I<size> bytes.  It is equivalent to the call"
msgid ""
"The B<reallocarray>()  function changes the size of (and possibly moves)  "
"the memory block pointed to by I<ptr> to be large enough for an array of "
"I<nmemb> elements, each of which is I<size> bytes.  It is equivalent to the "
"call"
msgstr ""
"De B<reallocarray>() functie verandert de grootte van het blok aangewezen "
"door I<ptr> om groot genoeg te zijn voor een tabel van I<nmemb> elementen, "
"elk met een grootte van I<grootte> bytes. Dit is equivalent aan de aanroep:"

#. type: Plain text
#: archlinux debian-unstable fedora-rawhide mageia-cauldron
#, fuzzy, no-wrap
#| msgid "    realloc(ptr, nmemb * size);\n"
msgid "realloc(ptr, nmemb * size);\n"
msgstr "    realloc(ptr, nmemb * grootte);\n"

#. type: Plain text
#: archlinux debian-unstable fedora-rawhide mageia-cauldron
#, fuzzy
#| msgid ""
#| "However, unlike that B<realloc>()  call, B<reallocarray>()  fails safely "
#| "in the case where the multiplication would overflow.  If such an overflow "
#| "occurs, B<reallocarray>()  returns NULL, sets I<errno> to B<ENOMEM>, and "
#| "leaves the original block of memory unchanged."
msgid ""
"However, unlike that B<realloc>()  call, B<reallocarray>()  fails safely in "
"the case where the multiplication would overflow.  If such an overflow "
"occurs, B<reallocarray>()  returns an error."
msgstr ""
"Echter, anders dan de B<realloc>()  aanroep, B<reallocarray>() faalt veilig "
"in het geval dat de multiplicatie zou overlopen. Als zo een overloop "
"optreed, B<reallocarray>() retourneert een NULL, zet I<errno> op B<ENOMEM>, "
"en laat het originele geheugen blok onveranderd."

#. type: SH
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "RETURN VALUE"
msgstr "EIND WAARDE"

#. type: Plain text
#: archlinux debian-unstable fedora-rawhide mageia-cauldron
#, fuzzy
#| msgid ""
#| "The B<malloc>()  and B<calloc>()  functions return a pointer to the "
#| "allocated memory, which is suitably aligned for any built-in type.  On "
#| "error, these functions return NULL.  NULL may also be returned by a "
#| "successful call to B<malloc>()  with a I<size> of zero, or by a "
#| "successful call to B<calloc>()  with I<nmemb> or I<size> equal to zero."
msgid ""
"The B<malloc>(), B<calloc>(), B<realloc>(), and B<reallocarray>()  functions "
"return a pointer to the allocated memory, which is suitably aligned for any "
"type that fits into the requested size or less.  On error, these functions "
"return NULL and set I<errno>.  Attempting to allocate more than "
"B<PTRDIFF_MAX> bytes is considered an error, as an object that large could "
"cause later pointer subtraction to overflow."
msgstr ""
"De B<calloc>() en B<malloc>() functies retourneren een wijzer naar het "
"gereserveerde geheugen, dat geschikt is opgelijnd voor elk ingebouwd type. "
"Bij een fout, retourneren deze functies NULL. NULL kan ook teruggegeven "
"worden succesvolle aanroep van B<malloc>() met een I<grootte> van nul, of "
"bij een succesvolle aanroep van B<calloc>() met I<nmemb> of I<grootte> "
"gelijk aan nul."

#. type: Plain text
#: archlinux debian-unstable fedora-rawhide mageia-cauldron
#, fuzzy
#| msgid "The B<free>()  function returns no value."
msgid "The B<free>()  function returns no value, and preserves I<errno>."
msgstr "De B<free>() functie geeft geen waarde terug."

#. type: Plain text
#: archlinux debian-unstable fedora-rawhide mageia-cauldron
#, fuzzy
#| msgid ""
#| "The B<realloc>()  function returns a pointer to the newly allocated "
#| "memory, which is suitably aligned for any built-in type, or NULL if the "
#| "request failed.  The returned pointer may be the same as I<ptr> if the "
#| "allocation was not moved (e.g., there was room to expand the allocation "
#| "in-place), or different from I<ptr> if the allocation was moved to a new "
#| "address.  If I<size> was equal to 0, either NULL or a pointer suitable to "
#| "be passed to B<free>()  is returned.  If B<realloc>()  fails, the "
#| "original block is left untouched; it is not freed or moved."
msgid ""
"The B<realloc>()  and B<reallocarray>()  functions return NULL if I<ptr> is "
"not NULL and the requested size is zero; this is not considered an error.  "
"(See \"Nonportable behavior\" for portability issues.)  Otherwise, the "
"returned pointer may be the same as I<ptr> if the allocation was not moved "
"(e.g., there was room to expand the allocation in-place), or different from "
"I<ptr> if the allocation was moved to a new address.  If these functions "
"fail, the original block is left untouched; it is not freed or moved."
msgstr ""
"De B<realloc>() functie retourneert een wijzer naar het nieuw gereserveerde "
"geheugen, dat geschikt is opgelijnd voor elk ingebouwd type of NULL als de "
"aanroep faalde.  De teruggegeven wijzer kan van hetzelfde type zijn als "
"I<wzr> als de reservering niet was verplaatst (b.v. er was ruimte om de "
"ruimte uit te breiden), of verschillend van I<wzr> als de reservering was "
"verplaatst naar een nieuw adres. Als I<grootte> gelijk was aan 0, wordt "
"ofwel NULL of een wijzer bruikbaar om door te geven aan B<free>() terug "
"gegeven. Als B<realloc>() faalt, dan wordt het originele blok niet "
"aangeraakt; het wordt niet vrijgegeven of verplaatst."

#. type: SH
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "ERRORS"
msgstr "FOUTEN"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"B<calloc>(), B<malloc>(), B<realloc>(), and B<reallocarray>()  can fail with "
"the following error:"
msgstr ""
"B<calloc>(), B<malloc>(), B<realloc>(), en  B<reallocarray>()  kunnen falen "
"met de volgende fout:"

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<ENOMEM>"
msgstr "B<ENOMEM>"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"Out of memory.  Possibly, the application hit the B<RLIMIT_AS> or "
"B<RLIMIT_DATA> limit described in B<getrlimit>(2)."
msgstr ""
"Geen geheugen meer.  Mogelijk, het programma bereikte de B<RLIMIT_AS> of "
"B<RLIMIT_DATA> limiet beschreven in B<getrlimit>(2)."

#. type: SH
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "VERSIONS"
msgstr "VERSIES"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid "B<reallocarray>()  first appeared in glibc in version 2.26."
msgstr "B<reallocarray>()  verscheen voor het eerst in glibc in versie 2.26."

#. type: Plain text
#: archlinux debian-unstable fedora-rawhide mageia-cauldron
msgid ""
"B<malloc>()  and related functions rejected sizes greater than "
"B<PTRDIFF_MAX> starting in glibc 2.30."
msgstr ""

#. type: Plain text
#: archlinux debian-unstable fedora-rawhide mageia-cauldron
msgid "B<free>()  preserved I<errno> starting in glibc 2.33."
msgstr ""

#. type: SH
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "ATTRIBUTES"
msgstr "ATTRIBUTEN"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"For an explanation of the terms used in this section, see B<attributes>(7)."
msgstr "Voor een uitleg van de termen in deze sectie, zie B<attributes>(7)."

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "Interface"
msgstr "Interface"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "Attribute"
msgstr "Attribuut"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "Value"
msgstr "Waarde"

#. type: tbl table
#: archlinux debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-tumbleweed
#, no-wrap
msgid ""
"B<malloc>(),\n"
"B<free>(),\n"
"B<calloc>(),\n"
"B<realloc>()"
msgstr ""
"B<malloc>(),\n"
"B<free>(),\n"
"B<calloc>(),\n"
"B<realloc>()"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "Thread safety"
msgstr "Thread veiligheid"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "MT-Safe"
msgstr "MT-Safe"

#. type: SH
#: archlinux debian-unstable fedora-rawhide mageia-cauldron
#, fuzzy, no-wrap
#| msgid "STANDARDS CONFORMANCE"
msgid "STANDARDS"
msgstr "VOLDOET AAN"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"B<malloc>(), B<free>(), B<calloc>(), B<realloc>(): POSIX.1-2001, "
"POSIX.1-2008, C89, C99."
msgstr ""
"B<malloc>(), B<free>(), B<calloc>(), B<realloc>(): POSIX.1-2001, "
"POSIX.1-2008, C89, C99."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"B<reallocarray>()  is a nonstandard extension that first appeared in OpenBSD "
"5.6 and FreeBSD 11.0."
msgstr ""
"B<reallocarray>()  is a niet-standard uitbreiding die voor het eerst "
"verscheen in  OpenBSD 5.6 and FreeBSD 11.0."

#. type: SH
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "NOTES"
msgstr "OPMERKINGEN"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"By default, Linux follows an optimistic memory allocation strategy.  This "
"means that when B<malloc>()  returns non-NULL there is no guarantee that the "
"memory really is available.  In case it turns out that the system is out of "
"memory, one or more processes will be killed by the OOM killer.  For more "
"information, see the description of I</proc/sys/vm/overcommit_memory> and I</"
"proc/sys/vm/oom_adj> in B<proc>(5), and the Linux kernel source file "
"I<Documentation/vm/overcommit-accounting.rst>."
msgstr ""
"Standaard volgt, Linux een optimistische geheugen toewijzing strategie.  Dit "
"betekent dat wanneer B<malloc>()  een niet-NULL terug geeft returns dat er "
"nog geen garantie is dat het geheugen ook daadwerkelijk beschikbaar is.  In "
"het geval dat blijkt dat het systeem geen vrij geheugen meer heeft, dan "
"worden een of meer processen vernietigd door de OOM vernietiger. Voor meer "
"informatie, zie de beschrijving van I</proc/sys/vm/overcommit_memory> en I</"
"proc/sys/vm/oom_adj> in B<proc>(5), en het Linux kernel bron code bestand "
"and the Linux I<Documentation/vm/overcommit-accounting.rst>."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"Normally, B<malloc>()  allocates memory from the heap, and adjusts the size "
"of the heap as required, using B<sbrk>(2).  When allocating blocks of memory "
"larger than B<MMAP_THRESHOLD> bytes, the glibc B<malloc>()  implementation "
"allocates the memory as a private anonymous mapping using B<mmap>(2).  "
"B<MMAP_THRESHOLD> is 128\\ kB by default, but is adjustable using "
"B<mallopt>(3).  Prior to Linux 4.7 allocations performed using B<mmap>(2)  "
"were unaffected by the B<RLIMIT_DATA> resource limit; since Linux 4.7, this "
"limit is also enforced for allocations performed using B<mmap>(2)."
msgstr ""
"Normaliter kent  B<malloc>() geheugen toe van de heap en past de grootte van "
"de heap aan zoals vereist, gebruikmakende van B<sbrk>(2). Bij het toekennen "
"van blokken geheugen groter dan B<MMAP_THRESHOLD> bytes kent de glibc "
"B<malloc>() implementatie het geheugen toe als een private anoniem tabel met "
"behulp van B<mmap>(2). B<MMAP_THRESHOLD> is standaard 128 \\ kB, maar is "
"instelbaar m.b.v. B<mallopt>(3). Voor Linux 4.7 werden toekenningen gedaan "
"met B<mmap>(2) niet beïnvloed door de B<RLIMIT_DATA> bron limiet; vanaf "
"Linux 4.7, wordt deze limiet afgedwongen voor toekenningen gedaan met "
"B<mmap>(2)."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"To avoid corruption in multithreaded applications, mutexes are used "
"internally to protect the memory-management data structures employed by "
"these functions.  In a multithreaded application in which threads "
"simultaneously allocate and free memory, there could be contention for these "
"mutexes.  To scalably handle memory allocation in multithreaded "
"applications, glibc creates additional I<memory allocation arenas> if mutex "
"contention is detected.  Each arena is a large region of memory that is "
"internally allocated by the system (using B<brk>(2)  or B<mmap>(2)), and "
"managed with its own mutexes."
msgstr ""
"Om corruptie in multi-threaded applicaties te vermijden worden semaforen "
"intern gebruikt om geheugen-management data structuren die deze functies "
"gebruiken te beschermen. In een multi-threaded application waarin threads "
"gelijktijdig geheugen toekennen en vrijgeven kan er een botsing zijn voor "
"deze semaforen. Om schaalbaar geheugen toekenning te kunnen afhandelen in "
"een multi-threaded applicatie creëert glibc additionele I<memory allocation "
"areas> zodra semafoor botsingen worden gedetecteerd. Elk gebied is een grote "
"geheugen regio die intern toegekend wordt door het systeem (m.b.v. B<brk>(2) "
"of B<mmap>(2)), en bewaakt met zijn eigen semaforen.   "

#. type: Plain text
#: archlinux debian-unstable fedora-rawhide mageia-cauldron
msgid ""
"If your program uses a private memory allocator, it should do so by "
"replacing B<malloc>(), B<free>(), B<calloc>(), and B<realloc>().  The "
"replacement functions must implement the documented glibc behaviors, "
"including I<errno> handling, size-zero allocations, and overflow checking; "
"otherwise, other library routines may crash or operate incorrectly.  For "
"example, if the replacement I<free>()  does not preserve errno, then "
"seemingly unrelated library routines may fail without having a valid reason "
"in I<errno>.  Private memory allocators may also need to replace other glibc "
"functions; see \"Replacing malloc\" in the glibc manual for details."
msgstr ""

#. type: Plain text
#: archlinux debian-unstable fedora-rawhide mageia-cauldron
#, fuzzy
#| msgid ""
#| "Crashes in B<malloc>(), B<calloc>(), B<realloc>(), or B<free>()  are "
#| "almost always related to heap corruption, such as overflowing an "
#| "allocated chunk or freeing the same pointer twice."
msgid ""
"Crashes in memory allocators are almost always related to heap corruption, "
"such as overflowing an allocated chunk or freeing the same pointer twice."
msgstr ""
"Crashes in B<malloc>(), B<calloc>(), B<realloc>(), of B<free>()  zijn bijna "
"altijd gerelateerd aan corruptie van de heap, zoals overlopen van een "
"toegekend gebied or twee keer vrij geven van dezelfde wijzer."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"The B<malloc>()  implementation is tunable via environment variables; see "
"B<mallopt>(3)  for details."
msgstr ""
"De B<malloc>()  implementatie is aanpasbaar via omgeving variabelen; zie "
"B<mallopt>(3)  voor details."

#. type: SS
#: archlinux debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-tumbleweed
#, no-wrap
msgid "Nonportable behavior"
msgstr "Niet overdraagbaar gedrag"

#. type: Plain text
#: archlinux debian-unstable fedora-rawhide mageia-cauldron
#, fuzzy
#| msgid ""
#| "The behavior of B<realloc>()  when I<size> is equal to zero, and I<ptr> "
#| "is not NULL, is glibc specific; other implementations may return NULL, "
#| "and set I<errno>.  Portable POSIX programs should avoid it.  See "
#| "B<realloc>(3p)."
msgid ""
"The behavior of these functions when the requested size is zero is glibc "
"specific; other implementations may return NULL without setting I<errno>, "
"and portable POSIX programs should tolerate such behavior.  See "
"B<realloc>(3p)."
msgstr ""
"Het gedrag van B<realloc>() wanneer I<grootte> gelijk is aan nul en I<wzr> "
"niet NULL is, is glibc afhankelijk; andere implementaties kunnen NULL "
"teruggeven en I<errno> zetten. Overdraagbare POSIX programma´s moeten het "
"vermijden. Zie B<realloc>(3p)."

#. type: Plain text
#: archlinux debian-unstable fedora-rawhide mageia-cauldron
msgid ""
"POSIX requires memory allocators to set I<errno> upon failure.  However, the "
"C standard does not require this, and applications portable to non-POSIX "
"platforms should not assume this."
msgstr ""

#. type: Plain text
#: archlinux debian-unstable fedora-rawhide mageia-cauldron
msgid ""
"Portable programs should not use private memory allocators, as POSIX and the "
"C standard do not allow replacement of B<malloc>(), B<free>(), B<calloc>(), "
"and B<realloc>()."
msgstr ""

#. type: SH
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "SEE ALSO"
msgstr "ZIE OOK"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"B<valgrind>(1), B<brk>(2), B<mmap>(2), B<alloca>(3), B<malloc_get_state>(3), "
"B<malloc_info>(3), B<malloc_trim>(3), B<malloc_usable_size>(3), "
"B<mallopt>(3), B<mcheck>(3), B<mtrace>(3), B<posix_memalign>(3)"
msgstr ""
"B<valgrind>(1), B<brk>(2), B<mmap>(2), B<alloca>(3), B<malloc_get_state>(3), "
"B<malloc_info>(3), B<malloc_trim>(3), B<malloc_usable_size>(3), "
"B<mallopt>(3), B<mcheck>(3), B<mtrace>(3), B<posix_memalign>(3)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"For details of the GNU C library implementation, see E<.UR https://"
"sourceware.org/glibc/wiki/MallocInternals> E<.UE .>"
msgstr ""
"Voor details over de GNU C library implementatie, zie E<.UR https://"
"sourceware.org/glibc/wiki/MallocInternals> E<.UE .>"

#. type: TH
#: debian-bullseye
#, no-wrap
msgid "2020-06-09"
msgstr "9 juni 2020"

#. type: TH
#: debian-bullseye fedora-37 opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "GNU"
msgstr "GNU"

#. type: TH
#: debian-bullseye fedora-37 opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "Linux Programmer's Manual"
msgstr "Linux Programmeurs Handleiding"

#.  glibc does this:
#. type: Plain text
#: debian-bullseye fedora-37 opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"The B<malloc>()  function allocates I<size> bytes and returns a pointer to "
"the allocated memory.  I<The memory is not initialized>.  If I<size> is 0, "
"then B<malloc>()  returns either NULL, or a unique pointer value that can "
"later be successfully passed to B<free>()."
msgstr ""
"De B<malloc>() functie reserveert I<grootte> bytes geheugen en geeft een "
"wijzer naar het gereserveerde geheugen terug. I<Het geheugen wordt niet "
"geinitialiseerd>. Als I<grootte> gelijk is aan 0, dan retourneert "
"B<malloc>() ofwel een NULL ofwel een unieke wijzer waarde sdie later kan "
"worden mee gegeven aan B<free>()."

#. type: Plain text
#: debian-bullseye fedora-37 opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"The B<free>()  function frees the memory space pointed to by I<ptr>, which "
"must have been returned by a previous call to B<malloc>(), B<calloc>(), or "
"B<realloc>().  Otherwise, or if I<free(ptr)> has already been called before, "
"undefined behavior occurs.  If I<ptr> is NULL, no operation is performed."
msgstr ""
"De B<free>() functie maakt de geheugen-ruimte waar I<wzr> naar wijst vrij, "
"geheugen dat gereserveerd moet zijn door een eerdere aanroep naar "
"B<malloc>(), B<calloc>() of B<realloc>(). Anders, of als I<free(wzr)> al "
"eerder werd aangeroepen, ontstaat onbepaald gedrag. Als I<wzr> B<NULL> is "
"wordt niets gedaan."

#.  glibc does this:
#. type: Plain text
#: debian-bullseye fedora-37 opensuse-tumbleweed
msgid ""
"The B<calloc>()  function allocates memory for an array of I<nmemb> elements "
"of I<size> bytes each and returns a pointer to the allocated memory.  The "
"memory is set to zero.  If I<nmemb> or I<size> is 0, then B<calloc>()  "
"returns either NULL, or a unique pointer value that can later be "
"successfully passed to B<free>().  If the multiplication of I<nmemb> and "
"I<size> would result in integer overflow, then B<calloc>()  returns an "
"error.  By contrast, an integer overflow would not be detected in the "
"following call to B<malloc>(), with the result that an incorrectly sized "
"block of memory would be allocated:"
msgstr ""
"De B<calloc>() reserveert geheugen voor een tabel van I<nmemb> elementen "
"ter  van I<grootte> bytes, en geeft een wijzer naar het toegewezen geheugen "
"terug. Het geheugen wordt ge`nul'd. Als I<nmemb> of I<grootte> gelijk is aan "
"0, dan geeft B<calloc>() ofwel een NULL terug ofwel een unieke wijzer waarde "
"die later succesvol mee gegeven kan worden aan B<free>(). Als de "
"vermenigvuldiging van I<nmemb> en I<grootte> zou resulteren in een geheel "
"getal overloop, dan geeft B<calloc>() een foutmelding. In tegenstelling tot "
"dit zou een geheel getal overloop niet opgemerkt worden in de volgende "
"aanroep van B<malloc>(), met als resultaat dat een blok geheugen met een "
"niet correct grootte gereserveerd zou worden: "

#. type: Plain text
#: debian-bullseye opensuse-leap-15-5
msgid ""
"The B<realloc>()  function changes the size of the memory block pointed to "
"by I<ptr> to I<size> bytes.  The contents will be unchanged in the range "
"from the start of the region up to the minimum of the old and new sizes.  If "
"the new size is larger than the old size, the added memory will I<not> be "
"initialized.  If I<ptr> is NULL, then the call is equivalent to "
"I<malloc(size)>, for all values of I<size>; if I<size> is equal to zero, and "
"I<ptr> is not NULL, then the call is equivalent to I<free(ptr)>.  Unless "
"I<ptr> is NULL, it must have been returned by an earlier call to "
"B<malloc>(), B<calloc>(), or B<realloc>().  If the area pointed to was "
"moved, a I<free(ptr)> is done."
msgstr ""
"De B<realloc>() functie verandert de grootte van het geheugen-blok waar "
"I<wzr> naar wijst in I<grootte> bytes. De inhoud zal onveranderd blijven in "
"het gebied dat begint bij het geheugen gebied tot aan het minimum van de "
"oude en nieuwe grootte. Als de nieuwe grootte groter is dan de oude dan "
"wordt het toegevoegde geheugen niet geïnitialiseerd. Als I<wzr> B<NULL> is, "
"dan is de aanroep gelijk aan B<malloc(grootte)>; als grootte gelijk aan nul "
"is, dan is de aanroep gelijk aan I<free(wzr)>. Tenzij I<wzr> B<NULL> is, "
"moet het teruggegeven zijn door een eerdere aanroep naar B<malloc>(), "
"B<calloc>() of B<realloc>(). Als het gebied waarnaar gewezen werd werd "
"verplaatst dan wordt een I<free(wzr)> uitgevoerd."

#. type: Plain text
#: debian-bullseye fedora-37 opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"The B<reallocarray>()  function changes the size of the memory block pointed "
"to by I<ptr> to be large enough for an array of I<nmemb> elements, each of "
"which is I<size> bytes.  It is equivalent to the call"
msgstr ""
"De B<reallocarray>() functie verandert de grootte van het blok aangewezen "
"door I<ptr> om groot genoeg te zijn voor een tabel van I<nmemb> elementen, "
"elk met een grootte van I<grootte> bytes. Dit is equivalent aan de aanroep:"

#. type: Plain text
#: debian-bullseye fedora-37 opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "    realloc(ptr, nmemb * size);\n"
msgstr "    realloc(ptr, nmemb * grootte);\n"

#. type: Plain text
#: debian-bullseye fedora-37 opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"However, unlike that B<realloc>()  call, B<reallocarray>()  fails safely in "
"the case where the multiplication would overflow.  If such an overflow "
"occurs, B<reallocarray>()  returns NULL, sets I<errno> to B<ENOMEM>, and "
"leaves the original block of memory unchanged."
msgstr ""
"Echter, anders dan de B<realloc>()  aanroep, B<reallocarray>() faalt veilig "
"in het geval dat de multiplicatie zou overlopen. Als zo een overloop "
"optreed, B<reallocarray>() retourneert een NULL, zet I<errno> op B<ENOMEM>, "
"en laat het originele geheugen blok onveranderd."

#. type: Plain text
#: debian-bullseye fedora-37 opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"The B<malloc>()  and B<calloc>()  functions return a pointer to the "
"allocated memory, which is suitably aligned for any built-in type.  On "
"error, these functions return NULL.  NULL may also be returned by a "
"successful call to B<malloc>()  with a I<size> of zero, or by a successful "
"call to B<calloc>()  with I<nmemb> or I<size> equal to zero."
msgstr ""
"De B<calloc>() en B<malloc>() functies retourneren een wijzer naar het "
"gereserveerde geheugen, dat geschikt is opgelijnd voor elk ingebouwd type. "
"Bij een fout, retourneren deze functies NULL. NULL kan ook teruggegeven "
"worden succesvolle aanroep van B<malloc>() met een I<grootte> van nul, of "
"bij een succesvolle aanroep van B<calloc>() met I<nmemb> of I<grootte> "
"gelijk aan nul."

#. type: Plain text
#: debian-bullseye fedora-37 opensuse-leap-15-5 opensuse-tumbleweed
msgid "The B<free>()  function returns no value."
msgstr "De B<free>() functie geeft geen waarde terug."

#. type: Plain text
#: debian-bullseye fedora-37 opensuse-tumbleweed
msgid ""
"The B<realloc>()  function returns a pointer to the newly allocated memory, "
"which is suitably aligned for any built-in type, or NULL if the request "
"failed.  The returned pointer may be the same as I<ptr> if the allocation "
"was not moved (e.g., there was room to expand the allocation in-place), or "
"different from I<ptr> if the allocation was moved to a new address.  If "
"I<size> was equal to 0, either NULL or a pointer suitable to be passed to "
"B<free>()  is returned.  If B<realloc>()  fails, the original block is left "
"untouched; it is not freed or moved."
msgstr ""
"De B<realloc>() functie retourneert een wijzer naar het nieuw gereserveerde "
"geheugen, dat geschikt is opgelijnd voor elk ingebouwd type of NULL als de "
"aanroep faalde.  De teruggegeven wijzer kan van hetzelfde type zijn als "
"I<wzr> als de reservering niet was verplaatst (b.v. er was ruimte om de "
"ruimte uit te breiden), of verschillend van I<wzr> als de reservering was "
"verplaatst naar een nieuw adres. Als I<grootte> gelijk was aan 0, wordt "
"ofwel NULL of een wijzer bruikbaar om door te geven aan B<free>() terug "
"gegeven. Als B<realloc>() faalt, dan wordt het originele blok niet "
"aangeraakt; het wordt niet vrijgegeven of verplaatst."

#. type: Plain text
#: debian-bullseye fedora-37 opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"On success, the B<reallocarray>()  function returns a pointer to the newly "
"allocated memory.  On failure, it returns NULL and the original block of "
"memory is left untouched."
msgstr ""
"Bij succes geeft de B<reallocarray>() functie een wijzer naar het nieuw "
"gereserveerde geheugen terug. Na falen, retourneert het NULL en het "
"originele blok geheugen wordt niet verandert."

#. type: tbl table
#: debian-bullseye opensuse-leap-15-5
#, no-wrap
msgid ""
"B<malloc>(),\n"
"B<free>(),\n"
msgstr ""
"B<malloc>(),\n"
"B<free>(),\n"

#. type: tbl table
#: debian-bullseye opensuse-leap-15-5
#, no-wrap
msgid ".br\n"
msgstr ".br\n"

#. type: tbl table
#: debian-bullseye opensuse-leap-15-5
#, no-wrap
msgid ""
"B<calloc>(),\n"
"B<realloc>()"
msgstr ""
"B<calloc>(),\n"
"B<realloc>()"

#. type: SH
#: debian-bullseye fedora-37 opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "CONFORMING TO"
msgstr "VOLDOET AAN"

#. type: Plain text
#: debian-bullseye fedora-37 opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"SUSv2 requires B<malloc>(), B<calloc>(), and B<realloc>()  to set I<errno> "
"to B<ENOMEM> upon failure.  Glibc assumes that this is done (and the glibc "
"versions of these routines do this); if you use a private malloc "
"implementation that does not set I<errno>, then certain library routines may "
"fail without having a reason in I<errno>."
msgstr ""
"SUSv2 vereist B<malloc>(2), B<calloc>(), en B<realloc>()  om I<errno> op "
"B<ENOMEM> te zetten bij het falen. Glibc neemt aan dat dit wordt gedaan  (en "
"de  glibc versies van deze functies doen dit); als u een privé malloc  "
"implementation gebruikt die I<errno> niet zet, dan kunnen bibliotheek "
"routines  falen zonder opgaaf van reden in I<errno>."

#. type: Plain text
#: debian-bullseye fedora-37 opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"Crashes in B<malloc>(), B<calloc>(), B<realloc>(), or B<free>()  are almost "
"always related to heap corruption, such as overflowing an allocated chunk or "
"freeing the same pointer twice."
msgstr ""
"Crashes in B<malloc>(), B<calloc>(), B<realloc>(), of B<free>()  zijn bijna "
"altijd gerelateerd aan corruptie van de heap, zoals overlopen van een "
"toegekend gebied or twee keer vrij geven van dezelfde wijzer."

#. type: SH
#: debian-bullseye fedora-37 opensuse-leap-15-5
#, no-wrap
msgid "COLOPHON"
msgstr "COLOFON"

#. type: Plain text
#: debian-bullseye
msgid ""
"This page is part of release 5.10 of the Linux I<man-pages> project.  A "
"description of the project, information about reporting bugs, and the latest "
"version of this page, can be found at \\%https://www.kernel.org/doc/man-"
"pages/."
msgstr ""
"Deze pagina is onderdeel van release 5.10 van het Linux I<man-pages>-"
"project. Een beschrijving van het project, informatie over het melden van "
"bugs en de nieuwste versie van deze pagina zijn op \\%https://www.kernel.org/"
"doc/man-pages/ te vinden."

#. type: TH
#: fedora-37 opensuse-tumbleweed
#, no-wrap
msgid "2021-03-22"
msgstr "22 maart 2021"

#. type: Plain text
#: fedora-37 opensuse-tumbleweed
msgid ""
"The B<realloc>()  function changes the size of the memory block pointed to "
"by I<ptr> to I<size> bytes.  The contents will be unchanged in the range "
"from the start of the region up to the minimum of the old and new sizes.  If "
"the new size is larger than the old size, the added memory will I<not> be "
"initialized.  If I<ptr> is NULL, then the call is equivalent to "
"I<malloc(size)>, for all values of I<size>; if I<size> is equal to zero, and "
"I<ptr> is not NULL, then the call is equivalent to I<free(ptr)> (this "
"behavior is nonportable; see NOTES).  Unless I<ptr> is NULL, it must have "
"been returned by an earlier call to B<malloc>(), B<calloc>(), or "
"B<realloc>().  If the area pointed to was moved, a I<free(ptr)> is done."
msgstr ""
"De B<realloc>() functie verandert de grootte van het geheugen-blok waar "
"I<wzr> naar wijst in I<grootte> bytes. De inhoud zal onveranderd blijven in "
"het gebied dat begint bij het geheugen gebied tot aan het minimum van de "
"oude en nieuwe grootte. Als de nieuwe grootte groter is dan de oude dan "
"wordt het toegevoegde geheugen niet geïnitialiseerd. Als I<wzr> B<NULL> is, "
"dan is de aanroep gelijk aan B<malloc(grootte)>; als grootte gelijk aan nul "
"is, dan is de aanroep gelijk aan I<free(wzr)>. Tenzij I<wzr> B<NULL> is, "
"moet het teruggegeven zijn door een eerdere aanroep naar B<malloc>(), "
"B<calloc>() of B<realloc>(). Als het gebied waarnaar gewezen werd, werd "
"verplaatst dan wordt een I<free(wzr)> uitgevoerd."

#. type: Plain text
#: fedora-37 opensuse-tumbleweed
msgid ""
"The behavior of B<realloc>()  when I<size> is equal to zero, and I<ptr> is "
"not NULL, is glibc specific; other implementations may return NULL, and set "
"I<errno>.  Portable POSIX programs should avoid it.  See B<realloc>(3p)."
msgstr ""
"Het gedrag van B<realloc>() wanneer I<grootte> gelijk is aan nul en I<wzr> "
"niet NULL is, is glibc afhankelijk; andere implementaties kunnen NULL "
"teruggeven en I<errno> zetten. Overdraagbare POSIX programma´s moeten het "
"vermijden. Zie B<realloc>(3p)."

#. type: Plain text
#: fedora-37
msgid ""
"This page is part of release 5.13 of the Linux I<man-pages> project.  A "
"description of the project, information about reporting bugs, and the latest "
"version of this page, can be found at \\%https://www.kernel.org/doc/man-"
"pages/."
msgstr ""
"Deze pagina is onderdeel van release 5.13 van het Linux I<man-pages>-"
"project. Een beschrijving van het project, informatie over het melden van "
"bugs en de nieuwste versie van deze pagina zijn op \\%https://www.kernel.org/"
"doc/man-pages/ te vinden."

#. type: TH
#: opensuse-leap-15-5
#, no-wrap
msgid "2017-09-15"
msgstr "15 september 2017"

#. type: Plain text
#: opensuse-leap-15-5
msgid "malloc, free, calloc, realloc - allocate and free dynamic memory"
msgstr ""
"malloc, free, calloc, realloc - Reserveren en vrijmaken van dynamisch "
"geheugen"

#. type: Plain text
#: opensuse-leap-15-5
msgid "_GNU_SOURCE"
msgstr "_GNU_SOURCE"

#.  glibc does this:
#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"The B<calloc>()  function allocates memory for an array of I<nmemb> elements "
"of I<size> bytes each and returns a pointer to the allocated memory.  The "
"memory is set to zero.  If I<nmemb> or I<size> is 0, then B<calloc>()  "
"returns either NULL, or a unique pointer value that can later be "
"successfully passed to B<free>()."
msgstr ""
"De B<malloc>() functie reserveert I<grootte> bytes geheugen en geeft een "
"wijzer naar het gereserveerde geheugen terug. Het geheugen wordt niet "
"geïnitialiseerd. Als I<nmemb> of I<grootte> gelijk is aan 0, dan retourneert "
"B<malloc>() ofwel een NULL ofwel een unieke wijzer waarde die later kan "
"worden mee gegeven aan B<free>()."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"The B<realloc>()  function returns a pointer to the newly allocated memory, "
"which is suitably aligned for any built-in type and may be different from "
"I<ptr>, or NULL if the request fails.  If I<size> was equal to 0, either "
"NULL or a pointer suitable to be passed to B<free>()  is returned.  If "
"B<realloc>()  fails, the original block is left untouched; it is not freed "
"or moved."
msgstr ""
"De B<realloc>() functie geeft een wijzer naar het nieuw gereserveerde "
"geheugen, wat geschikt isopgelijnd voor de soort variabele. Het kan "
"verschillen van I<wzr>. Het is B<NULL> als de aanvraag mislukt, of als de "
"grootte gelijk is aan 0. Als B<realloc>() niet slaagt blijft het originele "
"blok onveranderd - het wordt nietvrijgegeven of verplaatst."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"By default, Linux follows an optimistic memory allocation strategy.  This "
"means that when B<malloc>()  returns non-NULL there is no guarantee that the "
"memory really is available.  In case it turns out that the system is out of "
"memory, one or more processes will be killed by the OOM killer.  For more "
"information, see the description of I</proc/sys/vm/overcommit_memory> and I</"
"proc/sys/vm/oom_adj> in B<proc>(5), and the Linux kernel source file "
"I<Documentation/vm/overcommit-accounting>."
msgstr ""
"Standaard volgt, Linux een optimistische geheugen toewijzing strategie.  Dit "
"betekent dat wanneer B<malloc>()  een niet-NULL terug geeft dat er nog geen "
"garantie is dat het geheugen ook daadwerkelijk beschikbaar is.  In het geval "
"dat blijkt dat het systeem geen vrij geheugen meer heeft, dan worden een of "
"meer processen vernietigd door de OOM vernietiger. Voor meer informatie, zie "
"de beschrijving van I</proc/sys/vm/overcommit_memory> en I</proc/sys/vm/"
"oom_adj> in B<proc>(5), en het Linux kernel bron code bestand "
"I<Documentation/vm/overcommit-accounting.rst>."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"This page is part of release 4.16 of the Linux I<man-pages> project.  A "
"description of the project, information about reporting bugs, and the latest "
"version of this page, can be found at \\%https://www.kernel.org/doc/man-"
"pages/."
msgstr ""
"Deze pagina is onderdeel van release 4.16 van het Linux I<man-pages>-"
"project. Een beschrijving van het project, informatie over het melden van "
"bugs en de nieuwste versie van deze pagina zijn op \\%https://www.kernel.org/"
"doc/man-pages/ te vinden."
