# Brazilian Portuguese translation of manpages
# This file is distributed under the same license as the manpages-l10n package.
# Copyright © of this file:
# Rubens de Jesus Nogueira <darkseid99@usa.net>, 2000.
# André Luiz Fassone <lonely_wolf@ig.com.br>, 2000.
msgid ""
msgstr ""
"Project-Id-Version: manpages-l10n\n"
"POT-Creation-Date: 2022-11-14 19:49+0100\n"
"PO-Revision-Date: 2000-05-31 17:26+0200\n"
"Last-Translator: André Luiz Fassone <lonely_wolf@ig.com.br>\n"
"Language-Team: Brazilian Portuguese <debian-l10n-portuguese@lists.debian."
"org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"X-Generator: Lokalize 20.04.1\n"

#. type: TH
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "REGEX"
msgstr "REGEX"

#. type: TH
#: archlinux debian-unstable fedora-rawhide mageia-cauldron
#, no-wrap
msgid "2022-10-09"
msgstr "9 outubro 2022"

#. type: TH
#: archlinux debian-unstable fedora-rawhide mageia-cauldron
#, no-wrap
msgid "Linux man-pages 6.01"
msgstr ""

#. type: SH
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "NAME"
msgstr "NOME"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid "regex - POSIX.2 regular expressions"
msgstr "regex - expressões regulares do POSIX.2"

#. type: SH
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "DESCRIPTION"
msgstr "DESCRIÇÃO"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, fuzzy
#| msgid ""
#| "Regular expressions (``RE''s), as defined in POSIX 1003.2, come in two "
#| "forms: modern REs (roughly those of I<egrep>; 1003.2 calls these "
#| "``extended'' REs)  and obsolete REs (roughly those of B<ed>(1); 1003.2 "
#| "``basic'' REs).  Obsolete REs mostly exist for backward compatibility in "
#| "some old programs; they will be discussed at the end.  1003.2 leaves some "
#| "aspects of RE syntax and semantics open; `\\*(dg' marks decisions on "
#| "these aspects that may not be fully portable to other 1003.2 "
#| "implementations."
msgid ""
"Regular expressions (\"RE\"s), as defined in POSIX.2, come in two forms: "
"modern REs (roughly those of I<egrep>; POSIX.2 calls these \"extended\" "
"REs)  and obsolete REs (roughly those of B<ed>(1); POSIX.2 \"basic\" REs).  "
"Obsolete REs mostly exist for backward compatibility in some old programs; "
"they will be discussed at the end.  POSIX.2 leaves some aspects of RE syntax "
"and semantics open; \"\\*(dg\" marks decisions on these aspects that may not "
"be fully portable to other POSIX.2 implementations."
msgstr ""
"Expressões regulares (ERs), como definidas no POSIX 1003.2, vêm em duas "
"formas: REs modernas (grosseiramente, aquelas de I<egrep>; o 1003.2 chama "
"essas de ERs 'estendidas' ERs) e ERs obsoletas (grosseiramente, aquelas de "
"B<ed>(1); REs 'básicas' do 1003.2). REs obsoletas existem principalmente por "
"causa de compatibilidade retrógrada em alguns programas antigos; eles serão "
"discutidos no final. O 1003.2 deixa alguns aspectos da sintaxe e da "
"semântica das ERs em aberto; '\\*(dg' marca decisões nesses aspectos que não "
"podem ser totalmente portáveis para outras implementações do 1003.2."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, fuzzy
#| msgid ""
#| "A (modern) RE is one\\*(dg or more non-empty\\*(dg I<branches>, separated "
#| "by `|'.  It matches anything that matches one of the branches."
msgid ""
"A (modern) RE is one\\*(dg or more nonempty\\*(dg I<branches>, separated by "
"\\(aq|\\(aq.  It matches anything that matches one of the branches."
msgstr ""
"Uma (moderna) ER é uma\\*(dg ou mais\\*(dg I<ramificações>\\*(dgnão-"
"vazias\\*(dg , separadas por '|'. Ele encontra tudo o que casa com uma das "
"ramificações."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"A branch is one\\*(dg or more I<pieces>, concatenated.  It matches a match "
"for the first, followed by a match for the second, and so on."
msgstr ""
"Uma ramificação é um\\*(dg ou mais I<pedaços>, concatenados. Ele encontra um "
"casamento para o primeiro, seguido por um casamento para o segundo, etc."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, fuzzy
#| msgid ""
#| "A piece is an I<atom> possibly followed by a single\\*(dg `*', `+', `?', "
#| "or I<bound>.  An atom followed by `*' matches a sequence of 0 or more "
#| "matches of the atom.  An atom followed by `+' matches a sequence of 1 or "
#| "more matches of the atom.  An atom followed by `?' matches a sequence of "
#| "0 or 1 matches of the atom."
msgid ""
"A piece is an I<atom> possibly followed by a single\\*(dg \\(aq*\\(aq, \\(aq+"
"\\(aq, \\(aq?\\(aq, or I<bound>.  An atom followed by \\(aq*\\(aq matches a "
"sequence of 0 or more matches of the atom.  An atom followed by \\(aq+\\(aq "
"matches a sequence of 1 or more matches of the atom.  An atom followed by "
"\\(aq?\\(aq matches a sequence of 0 or 1 matches of the atom."
msgstr ""
"Um pedaço é um I<átomo> possivelmente seguido por um simples\\*(dg '*', '+', "
"'?', I<ou composto>. Um átomo seguido por '*' encontra uma sequência de 0 ou "
"mais casamentos do átomo. Um átomo seguido por '+' encontra uma sequência de "
"1 ou mais casamentos do átomo. Um átomo seguido por '?' encontra uma "
"sequência de 0 ou 1 casamento do átomo."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, fuzzy
#| msgid ""
#| "A I<bound> is `{' followed by an unsigned decimal integer, possibly "
#| "followed by `,' possibly followed by another unsigned decimal integer, "
#| "always followed by `}'.  The integers must lie between 0 and RE_DUP_MAX "
#| "(255\\*(dg) inclusive, and if there are two of them, the first may not "
#| "exceed the second.  An atom followed by a bound containing one integer "
#| "I<i> and no comma matches a sequence of exactly I<i> matches of the "
#| "atom.  An atom followed by a bound containing one integer I<i> and a "
#| "comma matches a sequence of I<i> or more matches of the atom.  An atom "
#| "followed by a bound containing two integers I<i> and I<j> matches a "
#| "sequence of I<i> through I<j> (inclusive) matches of the atom."
msgid ""
"A I<bound> is \\(aq{\\(aq followed by an unsigned decimal integer, possibly "
"followed by \\(aq,\\(aq possibly followed by another unsigned decimal "
"integer, always followed by \\(aq}\\(aq.  The integers must lie between 0 "
"and B<RE_DUP_MAX> (255\\*(dg) inclusive, and if there are two of them, the "
"first may not exceed the second.  An atom followed by a bound containing one "
"integer I<i> and no comma matches a sequence of exactly I<i> matches of the "
"atom.  An atom followed by a bound containing one integer I<i> and a comma "
"matches a sequence of I<i> or more matches of the atom.  An atom followed by "
"a bound containing two integers I<i> and I<j> matches a sequence of I<i> "
"through I<j> (inclusive) matches of the atom."
msgstr ""
"Uma I<composição> é '{' seguido por um inteiro decimal sem sinal, "
"possivelmente seguido por ',' e possivelmente seguido por outro inteiro "
"decimal sem sinal, sempre seguido por '}'. Os inteiros devem estar entre 0 e "
"RE_DUP_MAX (255\\*(dg) inclusive, e se houver dois deles, o primeiro e não "
"pode exceder o segundo. Um átomo seguido por uma composição contendo um "
"inteiro I<i>, sem vírgula, encontra uma sequência de I<i> ou mais casamentos "
"do átomo. Um átomo seguido por uma composição contendo dois inteiros I<i> "
"encontra uma sequencia de um mais I<i> casamentos do átomo. Um átomo seguido "
"por uma composição contendo dois inteiros I<i> e I<j> encontra uma sequência "
"de I<i> até I<j> (inclusive) casamentos do átomo."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, fuzzy
#| msgid ""
#| "An atom is a regular expression enclosed in `()' (matching a match for "
#| "the regular expression), an empty set of `()' (matching the null "
#| "string)\\*(dg, a I<bracket expression> (see below), `.' (matching any "
#| "single character), `^' (matching the null string at the beginning of a "
#| "line), `$' (matching the null string at the end of a line), a `\\e' "
#| "followed by one of the characters `^.[$()|*+?{\\e' (matching that "
#| "character taken as an ordinary character), a `\\e' followed by any other "
#| "character\\*(dg (matching that character taken as an ordinary character, "
#| "as if the `\\e' had not been present\\*(dg), or a single character with "
#| "no other significance (matching that character).  A `{' followed by a "
#| "character other than a digit is an ordinary character, not the beginning "
#| "of a bound\\*(dg.  It is illegal to end an RE with `\\e'."
msgid ""
"An atom is a regular expression enclosed in \"I<()>\" (matching a match for "
"the regular expression), an empty set of \"I<()>\" (matching the null "
"string)\\*(dg, a I<bracket expression> (see below), \\(aq.\\(aq (matching "
"any single character), \\(aq\\(ha\\(aq (matching the null string at the "
"beginning of a line), \\(aq$\\(aq (matching the null string at the end of a "
"line), a \\(aq\\e\\(aq followed by one of the characters \"I<\\(ha.[$()|*+?"
"{\\e>\" (matching that character taken as an ordinary character), a "
"\\(aq\\e\\(aq followed by any other character\\*(dg (matching that character "
"taken as an ordinary character, as if the \\(aq\\e\\(aq had not been "
"present\\*(dg), or a single character with no other significance (matching "
"that character).  A \\(aq{\\(aq followed by a character other than a digit "
"is an ordinary character, not the beginning of a bound\\*(dg.  It is illegal "
"to end an RE with \\(aq\\e\\(aq."
msgstr ""
"Um átomo é uma expressão regular englobada em '()' (encontrando um casamento "
"para a expressão regular), um conjunto vazio de '()' (encontrando a string "
"nula)\\*(dg, uma I<expressão agrupada> (ver abaixo), '.' (encontrando "
"qualquer caractere simples), '^' (encontrando a string nula no começo de uma "
"linha), '$' (encontrando a string nula no fim de uma linha), um '\\e' "
"seguido de um dos caracteres '^.[$()|*+?{\\e' (encontrando aquele caractere "
"tomado como um caractere ordinário), um '\\e' seguido por qualquer outro "
"caractere\\*(dg (encontrando aquele caractere tomado como um caractere "
"ordinário, como se o '\\e' não estivesse presente\\*(dg), ou um caractere "
"simples se outro significado (encontrando qualquer caractere). Um '{' "
"seguido por um caractere diferente de um dígito é um caractere ordinário, "
"não o início de uma composição\\*(dg. É ilegal terminar uma ER com '\\e'."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, fuzzy
#| msgid ""
#| "A I<bracket expression> is a list of characters enclosed in `[]'.  It "
#| "normally matches any single character from the list (but see below).  If "
#| "the list begins with `^', it matches any single character (but see below) "
#| "I<not> from the rest of the list.  If two characters in the list are "
#| "separated by `-', this is shorthand for the full I<range> of characters "
#| "between those two (inclusive) in the collating sequence, e.g. `[0-9]' in "
#| "ASCII matches any decimal digit.  It is illegal\\*(dg for two ranges to "
#| "share an endpoint, e.g. `a-c-e'.  Ranges are very collating-sequence-"
#| "dependent, and portable programs should avoid relying on them."
msgid ""
"A I<bracket expression> is a list of characters enclosed in \"I<[]>\".  It "
"normally matches any single character from the list (but see below).  If the "
"list begins with \\(aq\\(ha\\(aq, it matches any single character (but see "
"below) I<not> from the rest of the list.  If two characters in the list are "
"separated by \\(aq-\\(aq, this is shorthand for the full I<range> of "
"characters between those two (inclusive) in the collating sequence, for "
"example, \"I<[0-9]>\" in ASCII matches any decimal digit.  It is "
"illegal\\*(dg for two ranges to share an endpoint, for example, \"I<a-c-"
"e>\".  Ranges are very collating-sequence-dependent, and portable programs "
"should avoid relying on them."
msgstr ""
"Uma I<expressão agrupada> é uma lista de caracteres englobados por um '[]'. "
"Ele normalmente encontra qualquer caractere simples da lista (mas veja "
"abaixo). Se a lista começa com '^', ele encontra qualquer caractere simples "
"(mas veja abaixo) que I<não> venha do resto da lista. Se dois caracteres na "
"lista são separados por '-', isto é uma abreviação para um I<alcançe> "
"completo de caracteres entre aqueles dois (inclusive) na sequência de "
"combinação, por exemplo, '[0-9]' em ASCII encontra qualquer dígito decimal. "
"É ilegal \\*(dg que duas faixas compartilhem um ponto final, por exemplo, 'a-"
"c-e'. As faixas são muito dependentes de sequência de combinação, e "
"programas portáveis devem evitar confiar nelas."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, fuzzy
#| msgid ""
#| "To include a literal `]' in the list, make it the first character "
#| "(following a possible `^').  To include a literal `-', make it the first "
#| "or last character, or the second endpoint of a range.  To use a literal "
#| "`-' as the first endpoint of a range, enclose it in `[.' and `.]' to make "
#| "it a collating element (see below).  With the exception of these and some "
#| "combinations using `[' (see next paragraphs), all other special "
#| "characters, including `\\e', lose their special significance within a "
#| "bracket expression."
msgid ""
"To include a literal \\(aq]\\(aq in the list, make it the first character "
"(following a possible \\(aq\\(ha\\(aq).  To include a literal \\(aq-\\(aq, "
"make it the first or last character, or the second endpoint of a range.  To "
"use a literal \\(aq-\\(aq as the first endpoint of a range, enclose it in "
"\"I<[.>\" and \"I<.]>\" to make it a collating element (see below).  With "
"the exception of these and some combinations using \\(aq[\\(aq (see next "
"paragraphs), all other special characters, including \\(aq\\e\\(aq, lose "
"their special significance within a bracket expression."
msgstr ""
"Para incluir um literal ']' na lista, torne-o o primeiro caractere (seguindo "
"um possível '^'). Para incluir um literal '-', torne-o o primeiro ou o "
"último caractere, ou o segundo ponto final da faixa. Para usar um literal "
"'-' como o primeiro ponto final da faixa, englobe-o entre '[.' e '.]' para "
"torná-lo um elemento de combinação (veja abaixo). Com a exceção destas e "
"algumas combinações usando '[' (veja os próximos parágrafos), todos os "
"outros caracteres especiais, incluindo '\\e', perdem seu significado "
"especial dentro de uma expressão agrupada."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, fuzzy
#| msgid ""
#| "Within a bracket expression, a collating element (a character, a multi-"
#| "character sequence that collates as if it were a single character, or a "
#| "collating-sequence name for either)  enclosed in `[.' and `.]' stands for "
#| "the sequence of characters of that collating element.  The sequence is a "
#| "single element of the bracket expression's list.  A bracket expression "
#| "containing a multi-character collating element can thus match more than "
#| "one character, e.g. if the collating sequence includes a `ch' collating "
#| "element, then the RE `[[.ch.]]*c' matches the first five characters of "
#| "`chchcc'."
msgid ""
"Within a bracket expression, a collating element (a character, a "
"multicharacter sequence that collates as if it were a single character, or a "
"collating-sequence name for either)  enclosed in \"I<[.>\" and \"I<.]>\" "
"stands for the sequence of characters of that collating element.  The "
"sequence is a single element of the bracket expression's list.  A bracket "
"expression containing a multicharacter collating element can thus match more "
"than one character, for example, if the collating sequence includes a \"ch\" "
"collating element, then the RE \"I<[[.ch.]]*c>\" matches the first five "
"characters of \"chchcc\"."
msgstr ""
"Dentro de uma expressão agrupada, um elemento de combinação (um caractere, "
"uma sequência multi-caractere que combina como se fosse um caractere "
"simples, ou um nome de sequência de combinação se for o caso) englobado "
"entre '[.' e '.]' significa a sequência de caracteres daquele elemento de "
"combinação. A sequência é um elemento simples de uma lista de expressões "
"agrupada. Uma expressão agrupada contendo um elemento de combinação multi-"
"caractere pode, portanto, encontrar mais de um caractere, por exemplo, se a "
"sequência de combinação inclui um elemento de combinação 'ch', então a ER "
"'[[.ch.]]*c' encontra os primeiros cinco caracteres de 'chchcc'."

#. type: Plain text
#: archlinux debian-unstable fedora-rawhide mageia-cauldron
#, fuzzy
#| msgid ""
#| "Within a bracket expression, a collating element enclosed in `[=' and "
#| "`=]' is an equivalence class, standing for the sequences of characters of "
#| "all collating elements equivalent to that one, including itself.  (If "
#| "there are no other equivalent collating elements, the treatment is as if "
#| "the enclosing delimiters were `[.' and `.]'.)  For example, if o and "
#| "\\o'o^' are the members of an equivalence class, then `[[=o=]]', "
#| "`[[=\\o'o^'=]]', and `[o\\o'o^']' are all synonymous.  An equivalence "
#| "class may not\\*(dg be an endpoint of a range."
msgid ""
"Within a bracket expression, a collating element enclosed in \"I<[=>\" and "
"\"I<=]>\" is an equivalence class, standing for the sequences of characters "
"of all collating elements equivalent to that one, including itself.  (If "
"there are no other equivalent collating elements, the treatment is as if the "
"enclosing delimiters were \"I<[.>\" and \"I<.]>\".)  For example, if o and "
"\\(^o are the members of an equivalence class, then \"I<[[=o=]]>\", "
"\"I<[[=\\(^o=]]>\", and \"I<[o\\(^o]>\" are all synonymous.  An equivalence "
"class may not\\*(dg be an endpoint of a range."
msgstr ""
"Dentro de uma expressão agrupada, um elemento de combinação englobado por "
"'[=' e '=]' é uma classe equivalente, que significa uma sequência de "
"caracteres com todos os elementos de combinação equivalentes a aquele, "
"incluindo ele mesmo. (Se não houver outro elemento de combinação "
"equivalente, o tratamento é como se os delimitadores fossem '[.' e '.]'.) "
"Por exemplo, se o e \\o'o^' são os membros de uma classe equivalente, então "
"'[[=o=]]', '[[=\\o'o^'=]]', e '[o\\o'o^']' são todos sinônimos. Uma classe "
"equivalente não pode \\*(dg ser um ponto final de uma faixa."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"Within a bracket expression, the name of a I<character class> enclosed in "
"\"I<[:>\" and \"I<:]>\" stands for the list of all characters belonging to "
"that class.  Standard character class names are:"
msgstr ""
"Dentro de uma expressão agrupada, o nome de uma I<classe de caractere> "
"englobado por I<[:> e I<:]> significa a lista de todos os caracteres "
"pertencente àquela classe. Os nomes padrão de classes de caracteres são:"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "alnum"
msgstr "alnum"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "digit"
msgstr "digit"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "punct"
msgstr "punct"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "alpha"
msgstr "alpha"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "graph"
msgstr "graph"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "space"
msgstr "space"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "blank"
msgstr "blank"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "lower"
msgstr "lower"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "upper"
msgstr "upper"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "cntrl"
msgstr "cntrl"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "print"
msgstr "print"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "xdigit"
msgstr "xdigit"

#.  As per http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=295666
#.  The following does not seem to apply in the glibc implementation
#.  .PP
#.  There are two special cases\*(dg of bracket expressions:
#.  the bracket expressions "\fI[[:<:]]\fP" and "\fI[[:>:]]\fP" match
#.  the null string at the beginning and end of a word respectively.
#.  A word is defined as a sequence of
#.  word characters
#.  which is neither preceded nor followed by
#.  word characters.
#.  A word character is an
#.  .I alnum
#.  character (as defined by
#.  .BR wctype (3))
#.  or an underscore.
#.  This is an extension,
#.  compatible with but not specified by POSIX.2,
#.  and should be used with
#.  caution in software intended to be portable to other systems.
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"These stand for the character classes defined in B<wctype>(3).  A locale may "
"provide others.  A character class may not be used as an endpoint of a range."
msgstr ""
"Isto vale para as classes de caracteres definidas em B<wctype>(3). Uma "
"localização pode fornecer outros. Uma classe de caracteres não pode ser "
"usada como um ponto final de uma faixa."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"In the event that an RE could match more than one substring of a given "
"string, the RE matches the one starting earliest in the string.  If the RE "
"could match more than one substring starting at that point, it matches the "
"longest.  Subexpressions also match the longest possible substrings, subject "
"to the constraint that the whole match be as long as possible, with "
"subexpressions starting earlier in the RE taking priority over ones starting "
"later.  Note that higher-level subexpressions thus take priority over their "
"lower-level component subexpressions."
msgstr ""
"Em um evento em que uma ER encontraria mais de uma substring de uma string "
"dada, a ER encontra aquela que inicia mais próxima do início da string. Se a "
"ER pode encontrar mais que uma substring começando naquele ponto, ela "
"encontra a mais longa. Sub-expressões também podem encontrar a substring "
"mais longa possível, sujeitando-se à limitação de o casamento todo ser tão "
"longo quanto possível, com sub-expressões iniciando primeiro na ER tendo "
"prioridade sobre aquelas iniciando posteriormente. Note que sub-expressões "
"de nível mais alto, portanto, têm prioridade sobre suas sub-expressões "
"componentes de nível mais baixo."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, fuzzy
#| msgid ""
#| "Match lengths are measured in characters, not collating elements.  A null "
#| "string is considered longer than no match at all.  For example, `bb*' "
#| "matches the three middle characters of `abbbc', `(wee|week)(knights|"
#| "nights)' matches all ten characters of `weeknights', when `(.*).*' is "
#| "matched against `abc' the parenthesized subexpression matches all three "
#| "characters, and when `(a*)*' is matched against `bc' both the whole RE "
#| "and the parenthesized subexpression match the null string."
msgid ""
"Match lengths are measured in characters, not collating elements.  A null "
"string is considered longer than no match at all.  For example, \"I<bb*>\" "
"matches the three middle characters of \"abbbc\", \"I<(wee|week)(knights|"
"nights)>\" matches all ten characters of \"weeknights\", when \"I<(.*).*>\" "
"is matched against \"abc\" the parenthesized subexpression matches all three "
"characters, and when \"I<(a*)*>\" is matched against \"bc\" both the whole "
"RE and the parenthesized subexpression match the null string."
msgstr ""
"Os comprimentos dos casamentos são medidos em caracteres, e não em elementos "
"de combinação. Uma string nula é considerada mais longa do que um caso de "
"não se encontrar nada. Por exemplo, 'bb*' encontra os três caracteres "
"centrais de 'abbbc', '(wee|week) (knights|nights)' casa todos os dez "
"caracteres de 'weeknights', quando '(.*).*' é aplicado em 'abc' a sub-"
"expressão entre parênteses casa todos os três caracteres, e quando '(a*)*' é "
"aplicado em 'bc' ambas as ERs inteiras e a sub-expressão entre parênteses "
"encontram a string nula."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, fuzzy
#| msgid ""
#| "If case-independent matching is specified, the effect is much as if all "
#| "case distinctions had vanished from the alphabet.  When an alphabetic "
#| "that exists in multiple cases appears as an ordinary character outside a "
#| "bracket expression, it is effectively transformed into a bracket "
#| "expression containing both cases, e.g. `x' becomes `[xX]'.  When it "
#| "appears inside a bracket expression, all case counterparts of it are "
#| "added to the bracket expression, so that (e.g.) `[x]' becomes `[xX]' and "
#| "`[^x]' becomes `[^xX]'."
msgid ""
"If case-independent matching is specified, the effect is much as if all case "
"distinctions had vanished from the alphabet.  When an alphabetic that exists "
"in multiple cases appears as an ordinary character outside a bracket "
"expression, it is effectively transformed into a bracket expression "
"containing both cases, for example, \\(aqx\\(aq becomes \"I<[xX]>\".  When "
"it appears inside a bracket expression, all case counterparts of it are "
"added to the bracket expression, so that, for example, \"I<[x]>\" becomes "
"\"I<[xX]>\" and \"I<[\\(hax]>\" becomes \"I<[\\(haxX]>\"."
msgstr ""
"Se casamento independente da caixa é especificado, o efeito é tal como se "
"todas as distinções de caixa sumissem do alfabeto. Quando um alfabético que "
"existe em múltiplos casos aparece como um caractere ordinário fora de uma "
"expressão de colchete, é transformado efetivamente em uma expressão de "
"colchetes contendo ambos os casos, por exemplo, 'x' se torna '[^xX]'. Quando "
"ele aparece dentro de uma expressão de colchetes, todos os casos "
"equivalentes a ele são acrescentados à expressão de colchetes, de forma que "
"(por exemplo) '[x]' se torna '[xX]' e '[^xX]'."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"No particular limit is imposed on the length of REs\\*(dg.  Programs "
"intended to be portable should not employ REs longer than 256 bytes, as an "
"implementation can refuse to accept such REs and remain POSIX-compliant."
msgstr ""
"Nenhum limite particular é imposto sobre o comprimento das ERs\\*(dg. "
"Programas que pretendem ser portáveis não devem empregar ERs maiores de 256 "
"bytes, pois uma implementação pode negar-se a aceitar tais ERs para "
"continuar compatível com o POSIX."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, fuzzy
#| msgid ""
#| "Obsolete (``basic'') regular expressions differ in several respects.  "
#| "`|', `+', and `?' are ordinary characters and there is no equivalent for "
#| "their functionality.  The delimiters for bounds are `\\e{' and `\\e}', "
#| "with `{' and `}' by themselves ordinary characters.  The parentheses for "
#| "nested subexpressions are `\\e(' and `\\e)', with `(' and `)' by "
#| "themselves ordinary characters.  `^' is an ordinary character except at "
#| "the beginning of the RE or\\*(dg the beginning of a parenthesized "
#| "subexpression, `$' is an ordinary character except at the end of the RE "
#| "or\\*(dg the end of a parenthesized subexpression, and `*' is an ordinary "
#| "character if it appears at the beginning of the RE or the beginning of a "
#| "parenthesized subexpression (after a possible leading `^').  Finally, "
#| "there is one new type of atom, a I<back reference>: `\\e' followed by a "
#| "non-zero decimal digit I<d> matches the same sequence of characters "
#| "matched by the I<d>th parenthesized subexpression (numbering "
#| "subexpressions by the positions of their opening parentheses, left to "
#| "right), so that (e.g.) `\\e([bc]\\e)\\e1' matches `bb' or `cc' but not "
#| "`bc'."
msgid ""
"Obsolete (\"basic\") regular expressions differ in several respects.  \\(aq|"
"\\(aq, \\(aq+\\(aq, and \\(aq?\\(aq are ordinary characters and there is no "
"equivalent for their functionality.  The delimiters for bounds are "
"\"I<\\e{>\" and \"I<\\e}>\", with \\(aq{\\(aq and \\(aq}\\(aq by themselves "
"ordinary characters.  The parentheses for nested subexpressions are "
"\"I<\\e(>\" and \"I<\\e)>\", with \\(aq(\\(aq and \\(aq)\\(aq by themselves "
"ordinary characters.  \\(aq\\(ha\\(aq is an ordinary character except at the "
"beginning of the RE or\\*(dg the beginning of a parenthesized subexpression, "
"\\(aq$\\(aq is an ordinary character except at the end of the RE or\\*(dg "
"the end of a parenthesized subexpression, and \\(aq*\\(aq is an ordinary "
"character if it appears at the beginning of the RE or the beginning of a "
"parenthesized subexpression (after a possible leading \\(aq\\(ha\\(aq)."
msgstr ""
"Expressões regulares obsoletas ('básicas') diferem em vários aspectos. Os "
"sinais '+', '|' e '?' são caracteres ordinários e não há equivalentes para "
"suas funcionalidades. Os delimitadores para composição são '\\e{' and "
"'\\e}', com '{' e '}' por eles mesmos caracteres ordinários. Os parênteses "
"para sub-expressões aninhadas são '\\e(' e '\\e)', com '(' e ')', por eles "
"mesmos caracteres ordinários. O '^' é um caractere ordinário, exceto no "
"começo de uma ER ou \\*(dg no começo de uma sub-expressão com parênteses, o "
"'$' é um caractere ordinário, exceto no fim da ER ou \\*(dg no fim da sub-"
"expressão com parênteses, e '*' é um caractere ordinário se ele aparece no "
"começo da ER ou no começo de uma sub-expressão com parênteses (depois de um "
"possível '^' dianteiro). Finalmente, há um novo tipo de átomo, uma "
"I<referência para trás>: '\\e' seguido por um dígito decimal diferente de "
"zero I<d> casa com a mesma sequência de caracteres casada pela sub-expressão "
"de parênteses (numerando sub-expressões pelas posições dos seus parênteses "
"abertos, da esquerda para a direita), tal que (por exemplo) "
"'\\e([bc]\\e)\\e1' case com 'bb' ou 'cc', mas não com 'bc'."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"Finally, there is one new type of atom, a I<back reference>: \\(aq\\e\\(aq "
"followed by a nonzero decimal digit I<d> matches the same sequence of "
"characters matched by the I<d>th parenthesized subexpression (numbering "
"subexpressions by the positions of their opening parentheses, left to "
"right), so that, for example, \"I<\\e([bc]\\e)\\e1>\" matches \"bb\" or "
"\"cc\" but not \"bc\"."
msgstr ""

#. type: SH
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "BUGS"
msgstr "BUGS"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid "Having two kinds of REs is a botch."
msgstr "Ter dois tipos de ERs é uma devastação."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"The current POSIX.2 spec says that \\(aq)\\(aq is an ordinary character in "
"the absence of an unmatched \\(aq(\\(aq; this was an unintentional result of "
"a wording error, and change is likely.  Avoid relying on it."
msgstr ""
"A especificação corrente do POSIX.2 diz que \\(aq)\\(aq é um caractere "
"ordinário na ausência de um \\(aq(\\(aq não casado; este era um resultado "
"não-intencional de um erro de palavreamento, e mudanças são parecidas. Evite "
"confiar nela."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"Back references are a dreadful botch, posing major problems for efficient "
"implementations.  They are also somewhat vaguely defined (does "
"\"I<a\\e(\\e(b\\e)*\\e2\\e)*d>\" match \"abbbd\"?).  Avoid using them."
msgstr ""
"Referências para trás são uma destruição terrível, causando problemas sérios "
"em implementações eficientes. Elas também são definidas um pouco vagamente "
"(fazendo \"I<a\\e(\\e(b\\e)*\\e2\\e)*d>\" encontra \"abbbd\"?). Evite usá-"
"las."

#.  As per http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=295666
#.  The following does not seem to apply in the glibc implementation
#.  .PP
#.  The syntax for word boundaries is incredibly ugly.
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"POSIX.2's specification of case-independent matching is vague.  The \"one "
"case implies all cases\" definition given above is current consensus among "
"implementors as to the right interpretation."
msgstr ""
"A especificação POSIX.2 para casamentos independentes de caixa é vaga. A "
"definição \"um caso implica em todos os casos\" dada acima é um consenso "
"corrente entre implementadores como a interpretação correta."

#. type: SH
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "AUTHOR"
msgstr "AUTOR"

#.  Sigh... The page license means we must have the author's name
#.  in the formatted output.
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid "This page was taken from Henry Spencer's regex package."
msgstr "Esta página foi tomada do pacote regex de Henry Spencer."

#. type: SH
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "SEE ALSO"
msgstr "VEJA TAMBÉM"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid "B<grep>(1), B<regex>(3)"
msgstr "B<grep>(1), B<regex>(3)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid "POSIX.2, section 2.8 (Regular Expression Notation)."
msgstr "POSIX.2, section 2.8 (Notação de Expressão Regular)."

#. type: TH
#: debian-bullseye fedora-37 opensuse-tumbleweed
#, no-wrap
msgid "2020-08-13"
msgstr "13 agosto 2020"

#. type: TH
#: debian-bullseye fedora-37 opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "Linux Programmer's Manual"
msgstr "Manual do Programador do Linux"

#. type: Plain text
#: debian-bullseye fedora-37 opensuse-tumbleweed
#, fuzzy
#| msgid ""
#| "Within a bracket expression, a collating element enclosed in `[=' and "
#| "`=]' is an equivalence class, standing for the sequences of characters of "
#| "all collating elements equivalent to that one, including itself.  (If "
#| "there are no other equivalent collating elements, the treatment is as if "
#| "the enclosing delimiters were `[.' and `.]'.)  For example, if o and "
#| "\\o'o^' are the members of an equivalence class, then `[[=o=]]', "
#| "`[[=\\o'o^'=]]', and `[o\\o'o^']' are all synonymous.  An equivalence "
#| "class may not\\*(dg be an endpoint of a range."
msgid ""
"Within a bracket expression, a collating element enclosed in \"I<[=>\" and "
"\"I<=]>\" is an equivalence class, standing for the sequences of characters "
"of all collating elements equivalent to that one, including itself.  (If "
"there are no other equivalent collating elements, the treatment is as if the "
"enclosing delimiters were \"I<[.>\" and \"I<.]>\".)  For example, if o and "
"\\o'o\\(ha' are the members of an equivalence class, then \"I<[[=o=]]>\", "
"\"I<[[=\\o'o\\(ha'=]]>\", and \"I<[o\\o'o\\(ha']>\" are all synonymous.  An "
"equivalence class may not\\*(dg be an endpoint of a range."
msgstr ""
"Dentro de uma expressão agrupada, um elemento de combinação englobado por "
"'[=' e '=]' é uma classe equivalente, que significa uma sequência de "
"caracteres com todos os elementos de combinação equivalentes a aquele, "
"incluindo ele mesmo. (Se não houver outro elemento de combinação "
"equivalente, o tratamento é como se os delimitadores fossem '[.' e '.]'.) "
"Por exemplo, se o e \\o'o^' são os membros de uma classe equivalente, então "
"'[[=o=]]', '[[=\\o'o^'=]]', e '[o\\o'o^']' são todos sinônimos. Uma classe "
"equivalente não pode \\*(dg ser um ponto final de uma faixa."

#. type: SH
#: debian-bullseye fedora-37 opensuse-leap-15-5
#, no-wrap
msgid "COLOPHON"
msgstr "COLOFÃO"

#. type: Plain text
#: debian-bullseye
msgid ""
"This page is part of release 5.10 of the Linux I<man-pages> project.  A "
"description of the project, information about reporting bugs, and the latest "
"version of this page, can be found at \\%https://www.kernel.org/doc/man-"
"pages/."
msgstr ""
"Esta página faz parte da versão 5.10 do projeto Linux I<man-pages>. Uma "
"descrição do projeto, informações sobre relatórios de bugs e a versão mais "
"recente desta página podem ser encontradas em \\%https://www.kernel.org/doc/"
"man-pages/."

#. type: Plain text
#: fedora-37
msgid ""
"This page is part of release 5.13 of the Linux I<man-pages> project.  A "
"description of the project, information about reporting bugs, and the latest "
"version of this page, can be found at \\%https://www.kernel.org/doc/man-"
"pages/."
msgstr ""
"Esta página faz parte da versão 5.13 do projeto Linux I<man-pages>. Uma "
"descrição do projeto, informações sobre relatórios de bugs e a versão mais "
"recente desta página podem ser encontradas em \\%https://www.kernel.org/doc/"
"man-pages/."

#. type: TH
#: opensuse-leap-15-5
#, no-wrap
msgid "2009-01-12"
msgstr "12 janeiro 2009"

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "An atom is a regular expression enclosed in `()' (matching a match for "
#| "the regular expression), an empty set of `()' (matching the null "
#| "string)\\*(dg, a I<bracket expression> (see below), `.' (matching any "
#| "single character), `^' (matching the null string at the beginning of a "
#| "line), `$' (matching the null string at the end of a line), a `\\e' "
#| "followed by one of the characters `^.[$()|*+?{\\e' (matching that "
#| "character taken as an ordinary character), a `\\e' followed by any other "
#| "character\\*(dg (matching that character taken as an ordinary character, "
#| "as if the `\\e' had not been present\\*(dg), or a single character with "
#| "no other significance (matching that character).  A `{' followed by a "
#| "character other than a digit is an ordinary character, not the beginning "
#| "of a bound\\*(dg.  It is illegal to end an RE with `\\e'."
msgid ""
"An atom is a regular expression enclosed in \"I<()>\" (matching a match for "
"the regular expression), an empty set of \"I<()>\" (matching the null "
"string)\\*(dg, a I<bracket expression> (see below), \\(aq.\\(aq (matching "
"any single character), \\(aq^\\(aq (matching the null string at the "
"beginning of a line), \\(aq$\\(aq (matching the null string at the end of a "
"line), a \\(aq\\e\\(aq followed by one of the characters \"I<^.[$()|*+?"
"{\\e>\" (matching that character taken as an ordinary character), a "
"\\(aq\\e\\(aq followed by any other character\\*(dg (matching that character "
"taken as an ordinary character, as if the \\(aq\\e\\(aq had not been "
"present\\*(dg), or a single character with no other significance (matching "
"that character).  A \\(aq{\\(aq followed by a character other than a digit "
"is an ordinary character, not the beginning of a bound\\*(dg.  It is illegal "
"to end an RE with \\(aq\\e\\(aq."
msgstr ""
"Um átomo é uma expressão regular englobada em '()' (encontrando um casamento "
"para a expressão regular), um conjunto vazio de '()' (encontrando a string "
"nula)\\*(dg, uma I<expressão agrupada> (ver abaixo), '.' (encontrando "
"qualquer caractere simples), '^' (encontrando a string nula no começo de uma "
"linha), '$' (encontrando a string nula no fim de uma linha), um '\\e' "
"seguido de um dos caracteres '^.[$()|*+?{\\e' (encontrando aquele caractere "
"tomado como um caractere ordinário), um '\\e' seguido por qualquer outro "
"caractere\\*(dg (encontrando aquele caractere tomado como um caractere "
"ordinário, como se o '\\e' não estivesse presente\\*(dg), ou um caractere "
"simples se outro significado (encontrando qualquer caractere). Um '{' "
"seguido por um caractere diferente de um dígito é um caractere ordinário, "
"não o início de uma composição\\*(dg. É ilegal terminar uma ER com '\\e'."

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "A I<bracket expression> is a list of characters enclosed in `[]'.  It "
#| "normally matches any single character from the list (but see below).  If "
#| "the list begins with `^', it matches any single character (but see below) "
#| "I<not> from the rest of the list.  If two characters in the list are "
#| "separated by `-', this is shorthand for the full I<range> of characters "
#| "between those two (inclusive) in the collating sequence, e.g. `[0-9]' in "
#| "ASCII matches any decimal digit.  It is illegal\\*(dg for two ranges to "
#| "share an endpoint, e.g. `a-c-e'.  Ranges are very collating-sequence-"
#| "dependent, and portable programs should avoid relying on them."
msgid ""
"A I<bracket expression> is a list of characters enclosed in \"I<[]>\".  It "
"normally matches any single character from the list (but see below).  If the "
"list begins with \\(aq^\\(aq, it matches any single character (but see "
"below) I<not> from the rest of the list.  If two characters in the list are "
"separated by \\(aq-\\(aq, this is shorthand for the full I<range> of "
"characters between those two (inclusive) in the collating sequence, for "
"example, \"I<[0-9]>\" in ASCII matches any decimal digit.  It is "
"illegal\\*(dg for two ranges to share an endpoint, for example, \"I<a-c-"
"e>\".  Ranges are very collating-sequence-dependent, and portable programs "
"should avoid relying on them."
msgstr ""
"Uma I<expressão agrupada> é uma lista de caracteres englobados por um '[]'. "
"Ele normalmente encontra qualquer caractere simples da lista (mas veja "
"abaixo). Se a lista começa com '^', ele encontra qualquer caractere simples "
"(mas veja abaixo) que I<não> venha do resto da lista. Se dois caracteres na "
"lista são separados por '-', isto é uma abreviação para um I<alcançe> "
"completo de caracteres entre aqueles dois (inclusive) na sequência de "
"combinação, por exemplo, '[0-9]' em ASCII encontra qualquer dígito decimal. "
"É ilegal \\*(dg que duas faixas compartilhem um ponto final, por exemplo, 'a-"
"c-e'. As faixas são muito dependentes de sequência de combinação, e "
"programas portáveis devem evitar confiar nelas."

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "To include a literal `]' in the list, make it the first character "
#| "(following a possible `^').  To include a literal `-', make it the first "
#| "or last character, or the second endpoint of a range.  To use a literal "
#| "`-' as the first endpoint of a range, enclose it in `[.' and `.]' to make "
#| "it a collating element (see below).  With the exception of these and some "
#| "combinations using `[' (see next paragraphs), all other special "
#| "characters, including `\\e', lose their special significance within a "
#| "bracket expression."
msgid ""
"To include a literal \\(aq]\\(aq in the list, make it the first character "
"(following a possible \\(aq^\\(aq).  To include a literal \\(aq-\\(aq, make "
"it the first or last character, or the second endpoint of a range.  To use a "
"literal \\(aq-\\(aq as the first endpoint of a range, enclose it in \"I<[."
">\" and \"I<.]>\" to make it a collating element (see below).  With the "
"exception of these and some combinations using \\(aq[\\(aq (see next "
"paragraphs), all other special characters, including \\(aq\\e\\(aq, lose "
"their special significance within a bracket expression."
msgstr ""
"Para incluir um literal ']' na lista, torne-o o primeiro caractere (seguindo "
"um possível '^'). Para incluir um literal '-', torne-o o primeiro ou o "
"último caractere, ou o segundo ponto final da faixa. Para usar um literal "
"'-' como o primeiro ponto final da faixa, englobe-o entre '[.' e '.]' para "
"torná-lo um elemento de combinação (veja abaixo). Com a exceção destas e "
"algumas combinações usando '[' (veja os próximos parágrafos), todos os "
"outros caracteres especiais, incluindo '\\e', perdem seu significado "
"especial dentro de uma expressão agrupada."

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "Within a bracket expression, a collating element enclosed in `[=' and "
#| "`=]' is an equivalence class, standing for the sequences of characters of "
#| "all collating elements equivalent to that one, including itself.  (If "
#| "there are no other equivalent collating elements, the treatment is as if "
#| "the enclosing delimiters were `[.' and `.]'.)  For example, if o and "
#| "\\o'o^' are the members of an equivalence class, then `[[=o=]]', "
#| "`[[=\\o'o^'=]]', and `[o\\o'o^']' are all synonymous.  An equivalence "
#| "class may not\\*(dg be an endpoint of a range."
msgid ""
"Within a bracket expression, a collating element enclosed in \"I<[=>\" and "
"\"I<=]>\" is an equivalence class, standing for the sequences of characters "
"of all collating elements equivalent to that one, including itself.  (If "
"there are no other equivalent collating elements, the treatment is as if the "
"enclosing delimiters were \"I<[.>\" and \"I<.]>\".)  For example, if o and "
"\\o'o^' are the members of an equivalence class, then \"I<[[=o=]]>\", "
"\"I<[[=\\o'o^'=]]>\", and \"I<[o\\o'o^']>\" are all synonymous.  An "
"equivalence class may not\\*(dg be an endpoint of a range."
msgstr ""
"Dentro de uma expressão agrupada, um elemento de combinação englobado por "
"'[=' e '=]' é uma classe equivalente, que significa uma sequência de "
"caracteres com todos os elementos de combinação equivalentes a aquele, "
"incluindo ele mesmo. (Se não houver outro elemento de combinação "
"equivalente, o tratamento é como se os delimitadores fossem '[.' e '.]'.) "
"Por exemplo, se o e \\o'o^' são os membros de uma classe equivalente, então "
"'[[=o=]]', '[[=\\o'o^'=]]', e '[o\\o'o^']' são todos sinônimos. Uma classe "
"equivalente não pode \\*(dg ser um ponto final de uma faixa."

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "If case-independent matching is specified, the effect is much as if all "
#| "case distinctions had vanished from the alphabet.  When an alphabetic "
#| "that exists in multiple cases appears as an ordinary character outside a "
#| "bracket expression, it is effectively transformed into a bracket "
#| "expression containing both cases, e.g. `x' becomes `[xX]'.  When it "
#| "appears inside a bracket expression, all case counterparts of it are "
#| "added to the bracket expression, so that (e.g.) `[x]' becomes `[xX]' and "
#| "`[^x]' becomes `[^xX]'."
msgid ""
"If case-independent matching is specified, the effect is much as if all case "
"distinctions had vanished from the alphabet.  When an alphabetic that exists "
"in multiple cases appears as an ordinary character outside a bracket "
"expression, it is effectively transformed into a bracket expression "
"containing both cases, for example, \\(aqx\\(aq becomes \"I<[xX]>\".  When "
"it appears inside a bracket expression, all case counterparts of it are "
"added to the bracket expression, so that, for example, \"I<[x]>\" becomes "
"\"I<[xX]>\" and \"I<[^x]>\" becomes \"I<[^xX]>\"."
msgstr ""
"Se casamento independente da caixa é especificado, o efeito é tal como se "
"todas as distinções de caixa sumissem do alfabeto. Quando um alfabético que "
"existe em múltiplos casos aparece como um caractere ordinário fora de uma "
"expressão de colchete, é transformado efetivamente em uma expressão de "
"colchetes contendo ambos os casos, por exemplo, 'x' se torna '[^xX]'. Quando "
"ele aparece dentro de uma expressão de colchetes, todos os casos "
"equivalentes a ele são acrescentados à expressão de colchetes, de forma que "
"(por exemplo) '[x]' se torna '[xX]' e '[^xX]'."

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "Obsolete (``basic'') regular expressions differ in several respects.  "
#| "`|', `+', and `?' are ordinary characters and there is no equivalent for "
#| "their functionality.  The delimiters for bounds are `\\e{' and `\\e}', "
#| "with `{' and `}' by themselves ordinary characters.  The parentheses for "
#| "nested subexpressions are `\\e(' and `\\e)', with `(' and `)' by "
#| "themselves ordinary characters.  `^' is an ordinary character except at "
#| "the beginning of the RE or\\*(dg the beginning of a parenthesized "
#| "subexpression, `$' is an ordinary character except at the end of the RE "
#| "or\\*(dg the end of a parenthesized subexpression, and `*' is an ordinary "
#| "character if it appears at the beginning of the RE or the beginning of a "
#| "parenthesized subexpression (after a possible leading `^').  Finally, "
#| "there is one new type of atom, a I<back reference>: `\\e' followed by a "
#| "non-zero decimal digit I<d> matches the same sequence of characters "
#| "matched by the I<d>th parenthesized subexpression (numbering "
#| "subexpressions by the positions of their opening parentheses, left to "
#| "right), so that (e.g.) `\\e([bc]\\e)\\e1' matches `bb' or `cc' but not "
#| "`bc'."
msgid ""
"Obsolete (\"basic\") regular expressions differ in several respects.  \\(aq|"
"\\(aq, \\(aq+\\(aq, and \\(aq?\\(aq are ordinary characters and there is no "
"equivalent for their functionality.  The delimiters for bounds are "
"\"I<\\e{>\" and \"I<\\e}>\", with \\(aq{\\(aq and \\(aq}\\(aq by themselves "
"ordinary characters.  The parentheses for nested subexpressions are "
"\"I<\\e(>\" and \"I<\\e)>\", with \\(aq(\\(aq and \\(aq)\\(aq by themselves "
"ordinary characters.  \\(aq^\\(aq is an ordinary character except at the "
"beginning of the RE or\\*(dg the beginning of a parenthesized subexpression, "
"\\(aq$\\(aq is an ordinary character except at the end of the RE or\\*(dg "
"the end of a parenthesized subexpression, and \\(aq*\\(aq is an ordinary "
"character if it appears at the beginning of the RE or the beginning of a "
"parenthesized subexpression (after a possible leading \\(aq^\\(aq)."
msgstr ""
"Expressões regulares obsoletas ('básicas') diferem em vários aspectos. Os "
"sinais '+', '|' e '?' são caracteres ordinários e não há equivalentes para "
"suas funcionalidades. Os delimitadores para composição são '\\e{' and "
"'\\e}', com '{' e '}' por eles mesmos caracteres ordinários. Os parênteses "
"para sub-expressões aninhadas são '\\e(' e '\\e)', com '(' e ')', por eles "
"mesmos caracteres ordinários. O '^' é um caractere ordinário, exceto no "
"começo de uma ER ou \\*(dg no começo de uma sub-expressão com parênteses, o "
"'$' é um caractere ordinário, exceto no fim da ER ou \\*(dg no fim da sub-"
"expressão com parênteses, e '*' é um caractere ordinário se ele aparece no "
"começo da ER ou no começo de uma sub-expressão com parênteses (depois de um "
"possível '^' dianteiro). Finalmente, há um novo tipo de átomo, uma "
"I<referência para trás>: '\\e' seguido por um dígito decimal diferente de "
"zero I<d> casa com a mesma sequência de caracteres casada pela sub-expressão "
"de parênteses (numerando sub-expressões pelas posições dos seus parênteses "
"abertos, da esquerda para a direita), tal que (por exemplo) "
"'\\e([bc]\\e)\\e1' case com 'bb' ou 'cc', mas não com 'bc'."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"This page is part of release 4.16 of the Linux I<man-pages> project.  A "
"description of the project, information about reporting bugs, and the latest "
"version of this page, can be found at \\%https://www.kernel.org/doc/man-"
"pages/."
msgstr ""
"Esta página faz parte da versão 4.16 do projeto Linux I<man-pages>. Uma "
"descrição do projeto, informações sobre relatórios de bugs e a versão mais "
"recente desta página podem ser encontradas em \\%https://www.kernel.org/doc/"
"man-pages/."
