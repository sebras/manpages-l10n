# French translation of manpages
# This file is distributed under the same license as the manpages-l10n package.
# Copyright © of this file:
# Christophe Blaess <https://www.blaess.fr/christophe/>, 1996-2003.
# Stéphan Rafin <stephan.rafin@laposte.net>, 2002.
# Thierry Vignaud <tvignaud@mandriva.com>, 1999, 2002.
# François Micaux, 2002.
# Alain Portal <aportal@univ-montp2.fr>, 2003-2008.
# Jean-Philippe Guérard <fevrier@tigreraye.org>, 2005-2006.
# Jean-Luc Coulon (f5ibh) <jean-luc.coulon@wanadoo.fr>, 2006-2007.
# Julien Cristau <jcristau@debian.org>, 2006-2007.
# Thomas Huriaux <thomas.huriaux@gmail.com>, 2006-2008.
# Nicolas François <nicolas.francois@centraliens.net>, 2006-2008.
# Florentin Duneau <fduneau@gmail.com>, 2006-2010.
# Simon Paillard <simon.paillard@resel.enst-bretagne.fr>, 2006.
# Denis Barbier <barbier@debian.org>, 2006, 2010.
# David Prévot <david@tilapin.org>, 2010, 2012, 2013.
# Cédric Boutillier <cedric.boutillier@gmail.com>, 2011, 2012.
# Frédéric Hantrais <fhantrais@gmail.com>, 2013, 2014.
# Jean-Philippe MENGUAL <jpmengual@debian.org>, 2020-2022.
msgid ""
msgstr ""
"Project-Id-Version: perkamon\n"
"POT-Creation-Date: 2022-10-17 20:19+0200\n"
"PO-Revision-Date: 2020-12-31 08:49+0100\n"
"Last-Translator: Jean-Philippe MENGUAL <jpmengual@debian.org>\n"
"Language-Team: French <debian-l10n-french@lists.debian.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n > 1;\n"
"X-Generator: Weblate 3.1.1\n"

#. type: TH
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "CLONE"
msgstr "CLONE"

#. type: TH
#: archlinux
#, no-wrap
msgid "2022-09-17"
msgstr "17 septembre 2022"

#. type: TH
#: archlinux
#, no-wrap
msgid "Linux man-pages (unreleased)"
msgstr ""

#. type: SH
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "NAME"
msgstr "NOM"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid "clone, __clone2, clone3 - create a child process"
msgstr "clone, __clone2, clone3 - Créer un processus enfant (child)"

#. type: SH
#: archlinux
#, no-wrap
msgid "LIBRARY"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Standard C library (I<libc>, I<-lc>)"
msgstr ""

#. type: SH
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "SYNOPSIS"
msgstr "SYNOPSIS"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "/* Prototype for the glibc wrapper function */\n"
msgstr "/* Prototype de la fonction enveloppe de la glibc */\n"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid ""
"B<#define _GNU_SOURCE>\n"
"B<#include E<lt>sched.hE<gt>>\n"
msgstr ""
"B<#define _GNU_SOURCE>\n"
"B<#include E<lt>sched.hE<gt>>\n"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid ""
"B<int clone(int (*>I<fn>B<)(void *), void *>I<stack>B<, int >I<flags>B<, void *>I<arg>B<, ...>\n"
"B<          /* pid_t *>I<parent_tid>B<, void *>I<tls>B<, pid_t *>I<child_tid>B< */ );>\n"
msgstr ""
"B<int clone(int (*>I<fn>B<)(void *), void *>I<stack>B<, int >I<flags>B<, void *>I<arg>B<, ...>\n"
"B<          /* pid_t *>I<parent_tid>B<, void *>I<tls>B<, pid_t *>I<child_tid>B< */ );>\n"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "/* For the prototype of the raw clone() system call, see NOTES */\n"
msgstr "/* Pour le prototype de l'appel système clone() brut, voir REMARQUES */\n"

#. type: Plain text
#: archlinux debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-tumbleweed
#, no-wrap
msgid ""
"B<#include E<lt>linux/sched.hE<gt>>    /* Definition of B<struct clone_args> */\n"
"B<#include E<lt>sched.hE<gt>>          /* Definition of B<CLONE_*> constants */\n"
"B<#include E<lt>sys/syscall.hE<gt>>    /* Definition of B<SYS_*> constants */\n"
"B<#include E<lt>unistd.hE<gt>>\n"
msgstr ""

#. type: Plain text
#: archlinux debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-tumbleweed
#, fuzzy, no-wrap
#| msgid "B<long clone3(struct clone_args *>I<cl_args>B<, size_t >I<size>B<);>\n"
msgid "B<long syscall(SYS_clone3, struct clone_args *>I<cl_args>B<, size_t >I<size>B<);>\n"
msgstr "B<long clone3(struct clone_args *>I<cl_args>B<, size_t >I<size>B<);>\n"

#. type: Plain text
#: archlinux debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-tumbleweed
#, fuzzy
#| msgid ""
#| "Glibc does not provide a wrapper for B<clone3>(); call it using "
#| "B<syscall>(2)."
msgid ""
"I<Note>: glibc provides no wrapper for B<clone3>(), necessitating the use of "
"B<syscall>(2)."
msgstr ""
"La glibc ne fournit pas d'enveloppe pour B<clone3>() ; appelez-la en "
"utilisant B<syscall>(2)."

#. type: SH
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "DESCRIPTION"
msgstr "DESCRIPTION"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"These system calls create a new (\"child\") process, in a manner similar to "
"B<fork>(2)."
msgstr ""
"Ces appels système créent un nouveau processus « enfant », de façon analogue "
"à B<fork>(2)."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"By contrast with B<fork>(2), these system calls provide more precise control "
"over what pieces of execution context are shared between the calling process "
"and the child process.  For example, using these system calls, the caller "
"can control whether or not the two processes share the virtual address "
"space, the table of file descriptors, and the table of signal handlers.  "
"These system calls also allow the new child process to be placed in separate "
"B<namespaces>(7)."
msgstr ""
"Contrairement à B<fork>(2), ces appels système offrent un contrôle plus "
"précis du contexte d'exécution partagé entre le processus appelant et son "
"enfant. Par exemple, en utilisant ces appels système, l'appelant peut "
"contrôler si les deux processus partagent ou non l'espace d'adresse virtuel, "
"la table des descripteurs de fichier et celle des gestionnaires de signal. "
"Ces appels système permettent également au nouveau processus enfant d'aller "
"dans un B<namespaces>(7) à part."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"Note that in this manual page, \"calling process\" normally corresponds to "
"\"parent process\".  But see the descriptions of B<CLONE_PARENT> and "
"B<CLONE_THREAD> below."
msgstr ""
"Remarquez que dans cette page de manuel, le « processus appelant » "
"correspond en principe au « processus parent ». Mais voir les descriptions "
"de B<CLONE_PARENT> et de B<CLONE_THREAD> ci-dessous."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid "This page describes the following interfaces:"
msgstr "Cette page décrit les interfaces suivantes :"

#. type: IP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "*"
msgstr "–"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"The glibc B<clone>()  wrapper function and the underlying system call on "
"which it is based.  The main text describes the wrapper function; the "
"differences for the raw system call are described toward the end of this "
"page."
msgstr ""
"Cette page présente à la fois la fonction enveloppe B<clone>() de la glibc "
"et l'appel système sous-jacent sur lequel elle s'appuie. Le texte principal "
"décrit la fonction enveloppe ; les différences avec l'appel système brut "
"sont précisées vers la fin de cette page."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid "The newer B<clone3>()  system call."
msgstr "Le nouvel appel système B<clone3>()."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"In the remainder of this page, the terminology \"the clone call\" is used "
"when noting details that apply to all of these interfaces,"
msgstr ""
"Dans la suite de cette page, le terme « appel clone » est utilisé pour "
"évoquer les détails applicables à toutes ces interfaces,"

#. type: SS
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "The clone() wrapper function"
msgstr "La fonction enveloppe clone()"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"When the child process is created with the B<clone>()  wrapper function, it "
"commences execution by calling the function pointed to by the argument "
"I<fn>.  (This differs from B<fork>(2), where execution continues in the "
"child from the point of the B<fork>(2)  call.)  The I<arg> argument is "
"passed as the argument of the function I<fn>."
msgstr ""
"Quand le processus enfant est créé par la fonction enveloppe B<clone>(), il "
"débute son exécution par un appel à la fonction vers laquelle pointe "
"l'argument I<fn> (cela est différent de B<fork>(2), pour lequel l'exécution "
"continue dans le processus enfant à partir du moment de l'appel de "
"B<fork>(2)). L'argument I<arg> est passé comme argument de la fonction I<fn>."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"When the I<fn>(I<arg>)  function returns, the child process terminates.  The "
"integer returned by I<fn> is the exit status for the child process.  The "
"child process may also terminate explicitly by calling B<exit>(2)  or after "
"receiving a fatal signal."
msgstr ""
"Quand la fonction I<fn>(I<arg>) renvoie, le processus enfant se termine. La "
"valeur entière renvoyée par I<fn> est utilisée comme code de retour du "
"processus enfant. Ce dernier peut également se terminer de manière explicite "
"en invoquant la fonction B<exit>(2) ou après la réception d'un signal fatal."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"The I<stack> argument specifies the location of the stack used by the child "
"process.  Since the child and calling process may share memory, it is not "
"possible for the child process to execute in the same stack as the calling "
"process.  The calling process must therefore set up memory space for the "
"child stack and pass a pointer to this space to B<clone>().  Stacks grow "
"downward on all processors that run Linux (except the HP PA processors), so "
"I<stack> usually points to the topmost address of the memory space set up "
"for the child stack.  Note that B<clone>()  does not provide a means whereby "
"the caller can inform the kernel of the size of the stack area."
msgstr ""
"L'argument I<stack> indique l'emplacement de la pile utilisée par le "
"processus enfant. Comme les processus enfant et appelant peuvent partager de "
"la mémoire, il n'est généralement pas possible pour l'enfant d'utiliser la "
"même pile que son parent. Le processus appelant doit donc préparer un espace "
"mémoire pour stocker la pile de son enfant, et transmettre à B<clone> un "
"pointeur sur cet emplacement. Les piles croissent vers le bas sur tous les "
"processeurs implémentant Linux (sauf le HP PA), donc I<stack> doit pointer "
"sur la plus haute adresse de l'espace mémoire prévu pour la pile du "
"processus enfant. Remarquez que B<clone>() ne fournit aucun moyen pour que "
"l'appelant puisse informer le noyau de la taille de la zone de la pile."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid "The remaining arguments to B<clone>()  are discussed below."
msgstr "Les paramètres restant à B<clone>() sont décrits ci-dessous."

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "clone3()"
msgstr "clone3()"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"The B<clone3>()  system call provides a superset of the functionality of the "
"older B<clone>()  interface.  It also provides a number of API improvements, "
"including: space for additional flags bits; cleaner separation in the use of "
"various arguments; and the ability to specify the size of the child's stack "
"area."
msgstr ""
"L'appel système B<clone3>() fournit un sur-ensemble de la fonctionnalité de "
"l'ancienne interface de B<clone>(). Il offre également un certain nombre "
"d'améliorations de l'API dont : un espace pour des bits d'attributs "
"supplémentaires, une séparation plus propre dans l'utilisation de plusieurs "
"paramètres et la possibilité d'indiquer la taille de la zone de la pile de "
"l'enfant."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"As with B<fork>(2), B<clone3>()  returns in both the parent and the child.  "
"It returns 0 in the child process and returns the PID of the child in the "
"parent."
msgstr ""
"Comme avec B<fork>(2), B<clone3>() renvoie à la fois au parent et à "
"l'enfant. Il renvoie B<0> dans le processus enfant et il renvoie le PID de "
"l'enfant dans le parent."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"The I<cl_args> argument of B<clone3>()  is a structure of the following form:"
msgstr ""
"Le paramètre I<cl_args> de B<clone3>() est une structure ayant la forme "
"suivante :"

#. type: Plain text
#: archlinux debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-tumbleweed
#, fuzzy, no-wrap
#| msgid ""
#| "struct clone_args {\n"
#| "    u64 flags;        /* Flags bit mask */\n"
#| "    u64 pidfd;        /* Where to store PID file descriptor\n"
#| "                         (I<pid_t *>) */\n"
#| "    u64 child_tid;    /* Where to store child TID,\n"
#| "                         in child\\(aqs memory (I<pid_t *>) */\n"
#| "    u64 parent_tid;   /* Where to store child TID,\n"
#| "                         in parent\\(aqs memory (I<int *>) */\n"
#| "    u64 exit_signal;  /* Signal to deliver to parent on\n"
#| "                         child termination */\n"
#| "    u64 stack;        /* Pointer to lowest byte of stack */\n"
#| "    u64 stack_size;   /* Size of stack */\n"
#| "    u64 tls;          /* Location of new TLS */\n"
#| "    u64 set_tid;      /* Pointer to a I<pid_t> array\n"
#| "                         (since Linux 5.5) */\n"
#| "    u64 set_tid_size; /* Number of elements in I<set_tid>\n"
#| "                         (since Linux 5.5) */\n"
#| "    u64 cgroup;       /* File descriptor for target cgroup\n"
#| "                         of child (since Linux 5.7) */\n"
#| "};\n"
msgid ""
"struct clone_args {\n"
"    u64 flags;        /* Flags bit mask */\n"
"    u64 pidfd;        /* Where to store PID file descriptor\n"
"                         (I<int *>) */\n"
"    u64 child_tid;    /* Where to store child TID,\n"
"                         in child\\(aqs memory (I<pid_t *>) */\n"
"    u64 parent_tid;   /* Where to store child TID,\n"
"                         in parent\\(aqs memory (I<pid_t *>) */\n"
"    u64 exit_signal;  /* Signal to deliver to parent on\n"
"                         child termination */\n"
"    u64 stack;        /* Pointer to lowest byte of stack */\n"
"    u64 stack_size;   /* Size of stack */\n"
"    u64 tls;          /* Location of new TLS */\n"
"    u64 set_tid;      /* Pointer to a I<pid_t> array\n"
"                         (since Linux 5.5) */\n"
"    u64 set_tid_size; /* Number of elements in I<set_tid>\n"
"                         (since Linux 5.5) */\n"
"    u64 cgroup;       /* File descriptor for target cgroup\n"
"                         of child (since Linux 5.7) */\n"
"};\n"
msgstr ""
"struct clone_args {\n"
"    u64 flags;        /* Masque de bit d'attribut */\n"
"    u64 pidfd;        /* Où stocker le descripteur de fichier du PID\n"
"                         (I<pid_t *>) */\n"
"    u64 child_tid;    /* Où stocker le TID enfant,\n"
"                         dans la mémoire de l'enfant\\(aqs memory (I<pid_t *>) */\n"
"    u64 parent_tid;   /* Où stocker le TID enfant,\n"
"                         dans la mémoire du parent\\(aqs memory (I<int *>) */\n"
"    u64 exit_signal;  /* Signal à envoyer au parent quand\n"
"                         l'efant se termine */\n"
"    u64 stack;        /* Pointeur vers l'octet le plus faible de la pile */\n"
"    u64 stack_size;   /* Taille de la pile */\n"
"    u64 tls;          /* Emplacement du nouveau TLS */\n"
"    u64 set_tid;      /* Pointeur vers un tableau I<pid_t>\n"
"                         (depuis Linux 5.5) */\n"
"    u64 set_tid_size; /* Nombre d'éléments dans I<set_tid>\n"
"                         (depuis Linux 5.5) */\n"
"    u64 cgroup;       /* Descripteur de fichier du cgroup cible\n"
"                         de l'enfant (depuis Linux 5.7) */\n"
"};\n"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"The I<size> argument that is supplied to B<clone3>()  should be initialized "
"to the size of this structure.  (The existence of the I<size> argument "
"permits future extensions to the I<clone_args> structure.)"
msgstr ""
"Le paramètre I<size> fourni à B<clone3>() doit être initialisé à la taille "
"de cette structure (l'existence du paramètre I<size> autorise des extensions "
"futures de la structure I<clone_args>)."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"The stack for the child process is specified via I<cl_args.stack>, which "
"points to the lowest byte of the stack area, and I<cl_args.stack_size>, "
"which specifies the size of the stack in bytes.  In the case where the "
"B<CLONE_VM> flag (see below) is specified, a stack must be explicitly "
"allocated and specified.  Otherwise, these two fields can be specified as "
"NULL and 0, which causes the child to use the same stack area as the parent "
"(in the child's own virtual address space)."
msgstr ""
"La pile du processus enfant est indiquée avec I<cl_args.stack>, qui pointe "
"vers l'octet le plus faible de la zone de la pile, et avec I<cl_args."
"stack_size>, qui indique la taille de la pile en octets. Si l'attribut "
"B<CLONE_VM> est indiqué (voir ci-dessous), une pile doit être explicitement "
"allouée et indiquée. Sinon, ces deux champs peuvent valoir NULL et B<0>, ce "
"qui amène l'enfant à utiliser la même zone de pile que son parent (dans "
"l'espace d'adressage virtuel de son propre enfant)."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid "The remaining fields in the I<cl_args> argument are discussed below."
msgstr "Les autres champs du paramètre I<cl_args> sont abordés ci-dessous."

#. type: SS
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "Equivalence between clone() and clone3() arguments"
msgstr "Équivalence entre les paramètres de clone() et de clone3()"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"Unlike the older B<clone>()  interface, where arguments are passed "
"individually, in the newer B<clone3>()  interface the arguments are packaged "
"into the I<clone_args> structure shown above.  This structure allows for a "
"superset of the information passed via the B<clone>()  arguments."
msgstr ""
"Contrairement à l'ancienne interface B<clone>(), où les paramètres sont "
"passés individuellement, ceux de la nouvelle interface B<clone3>() sont "
"empaquetés dans la structure I<clone_args> présentée ci-dessus. Cette "
"structure permet de passer un ensemble d'informations à l’aide des arguments "
"de B<clone>()."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"The following table shows the equivalence between the arguments of "
"B<clone>()  and the fields in the I<clone_args> argument supplied to "
"B<clone3>():"
msgstr ""
"Le tableau suivant montre l'équivalence entre les paramètres de B<clone>() "
"et les champs du paramètre I<clone_args> fournis à B<clone3>() :"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "clone()"
msgstr "clone()"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "Notes"
msgstr "Notes"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "I<cl_args> field"
msgstr "Champ I<cl_args>"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "flags & \\(ti0xff"
msgstr "attributs & \\(ti0xff"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "flags"
msgstr "attributs"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "For most flags; details below"
msgstr "Pour la plupart des attributs ; détails ci-dessous"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "parent_tid"
msgstr "parent_tid"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "pidfd"
msgstr "pidfd"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "See CLONE_PIDFD"
msgstr "Voir CLONE_PIDFD"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "child_tid"
msgstr "child_tid"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "See CLONE_CHILD_SETTID"
msgstr "Voir CLONE_CHILD_SETTID"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "See CLONE_PARENT_SETTID"
msgstr "Voir CLONE_PARENT_SETTID"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "flags & 0xff"
msgstr "attributs & 0xff"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "exit_signal"
msgstr "exit_signal"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "stack"
msgstr "pile"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "I<--->"
msgstr "I<--->"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "stack_size"
msgstr "stack_size"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "tls"
msgstr "tls"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "See CLONE_SETTLS"
msgstr "Voir CLONE_SETTLS"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "set_tid"
msgstr "set_tid"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "See below for details"
msgstr "Voir ci-dessous pour des détails"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "set_tid_size"
msgstr "set_tid_size"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "cgroup"
msgstr "cgroup"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "See CLONE_INTO_CGROUP"
msgstr "Voir CLONE_INTO_CGROUP"

#. type: SS
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "The child termination signal"
msgstr "Signal de fin de l'enfant"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"When the child process terminates, a signal may be sent to the parent.  The "
"termination signal is specified in the low byte of I<flags> (B<clone>())  or "
"in I<cl_args.exit_signal> (B<clone3>()).  If this signal is specified as "
"anything other than B<SIGCHLD>, then the parent process must specify the "
"B<__WALL> or B<__WCLONE> options when waiting for the child with "
"B<wait>(2).  If no signal (i.e., zero) is specified, then the parent process "
"is not signaled when the child terminates."
msgstr ""
"Quand le processus enfant se termine, un signal peut être envoyé au parent. "
"Le signal de fin est indiqué dans l'octet de poids faible de I<flags> "
"(B<clone>()) ou dans I<cl_args.exit_signal> (B<clone3>()). Si ce signal est "
"différent de B<SIGCHLD>, le processus parent doit également spécifier les "
"options B<__WALL> ou B<__WCLONE> lorsqu'il attend la fin de l'enfant avec "
"B<wait>(2). Si aucun signal n'est indiqué (donc zéro), le processus parent "
"ne sera pas notifié de la terminaison de l'enfant."

#. type: SS
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "The set_tid array"
msgstr "Le tableau set_tid"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"By default, the kernel chooses the next sequential PID for the new process "
"in each of the PID namespaces where it is present.  When creating a process "
"with B<clone3>(), the I<set_tid> array (available since Linux 5.5)  can be "
"used to select specific PIDs for the process in some or all of the PID "
"namespaces where it is present.  If the PID of the newly created process "
"should be set only for the current PID namespace or in the newly created PID "
"namespace (if I<flags> contains B<CLONE_NEWPID>)  then the first element in "
"the I<set_tid> array has to be the desired PID and I<set_tid_size> needs to "
"be 1."
msgstr ""
"Par défaut, le noyau choisit le PID séquentiel suivant pour le nouveau "
"processus dans chacun des espaces de noms du PID où il est présent. Lors de "
"la création d'un processus avec B<clone3>(), le tableau I<set_tid> (depuis "
"Linux 5.5) peut être utilisé pour sélectionner des PID spécifiques pour le "
"processus dans tout ou partie des espaces de noms où il est présent. Si le "
"PID du processus nouvellement créé ne doit être positionné que dans l'espace "
"de noms du processus actuel ou dans celui du PID nouvellement créé (si "
"I<flags> contient B<CLONE_NEWPID>), le premier élément du tableau I<set_tid> "
"doit être le PID souhaité et I<set_tid_size> doit valoir B<1>."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"If the PID of the newly created process should have a certain value in "
"multiple PID namespaces, then the I<set_tid> array can have multiple "
"entries.  The first entry defines the PID in the most deeply nested PID "
"namespace and each of the following entries contains the PID in the "
"corresponding ancestor PID namespace.  The number of PID namespaces in which "
"a PID should be set is defined by I<set_tid_size> which cannot be larger "
"than the number of currently nested PID namespaces."
msgstr ""
"Si le PID du processus nouvellement créé doit avoir une certaine valeur dans "
"plusieurs espaces de noms de PID, le tableau I<set_tid> peut avoir plusieurs "
"entrées. La première entrée définit le PID de l'espace de noms le plus "
"imbriqué, puis chacune des entrées suivantes contient le PID de l'espace de "
"noms supérieur correspondant. Le nombre d'espaces de noms de PID où un PID "
"doit être positionné est défini par I<set_tid_size>, qui ne peut pas être "
"plus grand que le nombre d'espaces de noms de PID imbriqués."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"To create a process with the following PIDs in a PID namespace hierarchy:"
msgstr ""
"Pour créer un processus dont les PID suivants s'inscrivent dans la "
"hiérarchie de l'espace de noms de PID :"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "PID NS level"
msgstr "Niveau esp. noms du PID"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "Requested PID"
msgstr "PID demandé"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "0"
msgstr "0"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "31496"
msgstr "31496"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "Outermost PID namespace"
msgstr "Espace de noms du PID le plus à l'extérieur"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "1"
msgstr "1"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "42"
msgstr "42"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "2"
msgstr "2"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "7"
msgstr "7"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "Innermost PID namespace"
msgstr "Espace de noms du PID le plus à l'intérieur"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid "Set the array to:"
msgstr "Positionner le tableau sur :"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid ""
"set_tid[0] = 7;\n"
"set_tid[1] = 42;\n"
"set_tid[2] = 31496;\n"
"set_tid_size = 3;\n"
msgstr ""
"set_tid[0] = 7;\n"
"set_tid[1] = 42;\n"
"set_tid[2] = 31496;\n"
"set_tid_size = 3;\n"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"If only the PIDs in the two innermost PID namespaces need to be specified, "
"set the array to:"
msgstr ""
"Si seuls les PID des deux espaces de noms de PID intermédiaires doivent être "
"indiqués, positionnez le tableau sur :"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid ""
"set_tid[0] = 7;\n"
"set_tid[1] = 42;\n"
"set_tid_size = 2;\n"
msgstr ""
"set_tid[0] = 7;\n"
"set_tid[1] = 42;\n"
"set_tid_size = 2;\n"

#. type: Plain text
#: archlinux debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-tumbleweed
#, fuzzy
#| msgid ""
#| "The PID in the PID namespaces outside the two innermost PID namespaces "
#| "will be selected the same way as any other PID is selected."
msgid ""
"The PID in the PID namespaces outside the two innermost PID namespaces is "
"selected the same way as any other PID is selected."
msgstr ""
"Le PID dans un espace de noms de PID en dehors des deux espaces de noms "
"intermédiaires sera sélectionné de la même manière qu'on sélectionne "
"n'importe quel autre PID."

#.  commit 124ea650d3072b005457faed69909221c2905a1f
#.  commit 1caef81da05a84a40dbf02110e967ce6d1135ff6
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"The I<set_tid> feature requires B<CAP_SYS_ADMIN> or (since Linux 5.9)  "
"B<CAP_CHECKPOINT_RESTORE> in all owning user namespaces of the target PID "
"namespaces."
msgstr ""
"La fonctionnalité I<set_tid> exige B<CAP_SYS_ADMIN> ou (depuis Linux 5.9) "
"B<CAP_CHECKPOINT_RESTORE> dans tous les espaces de noms appartenant à "
"l'utilisateur dans les espaces de noms du processus cible."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"Callers may only choose a PID greater than 1 in a given PID namespace if an "
"B<init> process (i.e., a process with PID 1) already exists in that "
"namespace.  Otherwise the PID entry for this PID namespace must be 1."
msgstr ""
"Les appelants ne peuvent choisir qu'un PID supérieur à B<1> dans un espace "
"de noms de PID donné, si un processus B<init> (à savoir un processus dont le "
"PID est B<1>) existe déjà dans cet espace de noms. Sinon, l'entrée du PID "
"dans cet espace de noms de PID doit valoir B<1>."

#. type: SS
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "The flags mask"
msgstr "Le masque flags"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"Both B<clone>()  and B<clone3>()  allow a flags bit mask that modifies their "
"behavior and allows the caller to specify what is shared between the calling "
"process and the child process.  This bit mask\\(emthe I<flags> argument of "
"B<clone>()  or the I<cl_args.flags> field passed to B<clone3>()\\(emis "
"referred to as the I<flags> mask in the remainder of this page."
msgstr ""
"Tant B<clone>() que B<clone3>() permettent d'utiliser un masque de bit flags "
"pour modifier leur comportement, et elles permettent à l'appelant d'indiquer "
"ce qui est partagé entre le processus appelant et son enfant. Ce masque de "
"bit - le paramètre I<flags> de B<clone>() ou le champ I<cl_args.flags> passé "
"à B<clone3>() - est désigné comme le masque I<flags> dans le reste de cette "
"page."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"The I<flags> mask is specified as a bitwise-OR of zero or more of the "
"constants listed below.  Except as noted below, these flags are available "
"(and have the same effect) in both B<clone>()  and B<clone3>()."
msgstr ""
"Le masque I<flags> est indiqué comme un OU bit à bit de zéro ou plus des "
"constantes ci-dessous. Sauf explicitement indiqué, ces attributs sont "
"disponibles (et ont le même effet) dans B<clone>() et dans B<clone3>()."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_CHILD_CLEARTID> (since Linux 2.5.49)"
msgstr "B<CLONE_CHILD_CLEARTID> (depuis Linux 2.5.49)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"Clear (zero) the child thread ID at the location pointed to by I<child_tid> "
"(B<clone>())  or I<cl_args.child_tid> (B<clone3>())  in child memory when "
"the child exits, and do a wakeup on the futex at that address.  The address "
"involved may be changed by the B<set_tid_address>(2)  system call.  This is "
"used by threading libraries."
msgstr ""
"Effacer (zéro) l'ID du thread enfant situé là où pointe I<child_tid> "
"(B<clone>()) ou I<cl_args.child_tid> (B<clone3>()) dans la mémoire de "
"l'enfant lorsqu'il se termine, et provoquer le réveil avec le futex à cette "
"adresse. L'adresse concernée peut être modifiée par l'appel système "
"B<set_tid_address>(2). Cela est utilisé dans les bibliothèques de gestion de "
"threads."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_CHILD_SETTID> (since Linux 2.5.49)"
msgstr "B<CLONE_CHILD_SETTID> (depuis Linux 2.5.49)"

#. type: Plain text
#: archlinux debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-tumbleweed
#, fuzzy
#| msgid ""
#| "Store the child thread ID at the location pointed to by I<child_tid> "
#| "(B<clone>())  or I<cl_args.child_tid> (B<clone3>())  in the child's "
#| "memory.  The store operation completes before the clone call returns "
#| "control to user space in the child process.  (Note that the store "
#| "operation may not have completed before the clone call returns in the "
#| "parent process, which will be relevant if the B<CLONE_VM> flag is also "
#| "employed.)"
msgid ""
"Store the child thread ID at the location pointed to by I<child_tid> "
"(B<clone>())  or I<cl_args.child_tid> (B<clone3>())  in the child's memory.  "
"The store operation completes before the clone call returns control to user "
"space in the child process.  (Note that the store operation may not have "
"completed before the clone call returns in the parent process, which is "
"relevant if the B<CLONE_VM> flag is also employed.)"
msgstr ""
"Enregistrer l'ID du thread de l'enfant là où pointe I<child_tid> "
"((B<clone>()) ou I<cl_args.child_tid> (B<clone3>()) dans la mémoire de "
"l'enfant. L'opération d'enregistrement se termine avant que l'appel clone ne "
"redonne le contrôle à l'espace utilisateur dans le processus enfant "
"(remarquez que l'opération d'enregistrement se termine avant que l'appel "
"clone ne renvoie au processus parent, ce qui sera pertinent si l'attribut "
"B<CLONE_VM> est également utilisé)."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_CLEAR_SIGHAND> (since Linux 5.5)"
msgstr "B<CLONE_CLEAR_SIGHAND> (depuis Linux 5.5)"

#.  commit b612e5df4587c934bd056bf05f4a1deca4de4f75
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"By default, signal dispositions in the child thread are the same as in the "
"parent.  If this flag is specified, then all signals that are handled in the "
"parent are reset to their default dispositions (B<SIG_DFL>)  in the child."
msgstr ""
"Par défaut, l'état des signaux du thread de l'enfant est le même que celui "
"du parent. Si cet attribut est positionné, tous les signaux gérés par le "
"parent sont réinitialisés à leur état par défaut (B<SIG_DFL>) dans l'enfant."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"Specifying this flag together with B<CLONE_SIGHAND> is nonsensical and "
"disallowed."
msgstr ""
"Indiquer cet attribut avec B<CLONE_SIGHAND> n'a pas de sens et n'est pas "
"autorisé."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_DETACHED> (historical)"
msgstr "B<CLONE_DETACHED> (historique)"

#.  added in 2.5.32; removed in 2.6.0-test4
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"For a while (during the Linux 2.5 development series)  there was a "
"B<CLONE_DETACHED> flag, which caused the parent not to receive a signal when "
"the child terminated.  Ultimately, the effect of this flag was subsumed "
"under the B<CLONE_THREAD> flag and by the time Linux 2.6.0 was released, "
"this flag had no effect.  Starting in Linux 2.6.2, the need to give this "
"flag together with B<CLONE_THREAD> disappeared."
msgstr ""
"Pendant un moment (pendant la série de versions au cours du développement de "
"Linux 2.5), il y a eu un attribut B<CLONE_DETACHED>, avec lequel le parent "
"ne recevait pas de signal quand l'enfant se terminait. Au final, l'effet de "
"cet attribut a été inhibé par l'attribut B<CLONE_THREAD> et quand Linux "
"2.6.0 a été publié, cet attribut n'avait pas d'effet. À partir de Linux "
"2.6.2, il n'a plus été nécessaire de fournir cet attribut avec "
"B<CLONE_THREAD>."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"This flag is still defined, but it is usually ignored when calling "
"B<clone>().  However, see the description of B<CLONE_PIDFD> for some "
"exceptions."
msgstr ""
"Cet attribut est toujours défini, mais il est généralement ignoré lors d'un "
"appel B<clone>(). Toutefois, voir la description de B<CLONE_PIDFD> pour "
"certaines exceptions."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_FILES> (since Linux 2.0)"
msgstr "B<CLONE_FILES> (depuis Linux 2.0)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"If B<CLONE_FILES> is set, the calling process and the child process share "
"the same file descriptor table.  Any file descriptor created by the calling "
"process or by the child process is also valid in the other process.  "
"Similarly, if one of the processes closes a file descriptor, or changes its "
"associated flags (using the B<fcntl>(2)  B<F_SETFD> operation), the other "
"process is also affected.  If a process sharing a file descriptor table "
"calls B<execve>(2), its file descriptor table is duplicated (unshared)."
msgstr ""
"Si l'attribut B<CLONE_FILES> est positionné, le processus appelant et le "
"processus enfant partagent la même table de descripteurs de fichier. Tout "
"descripteur créé par un processus est également valide pour l'autre "
"processus. De même si un processus ferme un descripteur, ou modifie ses "
"attributs (en utilisant l'opération B<fcntl>(2) B<F_SETFD>), l'autre "
"processus en est aussi affecté. Si un processus qui partage une table de "
"descripteurs de fichier appelle B<execve>(2), sa table est dupliquée (non "
"partagée)."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"If B<CLONE_FILES> is not set, the child process inherits a copy of all file "
"descriptors opened in the calling process at the time of the clone call.  "
"Subsequent operations that open or close file descriptors, or change file "
"descriptor flags, performed by either the calling process or the child "
"process do not affect the other process.  Note, however, that the duplicated "
"file descriptors in the child refer to the same open file descriptions as "
"the corresponding file descriptors in the calling process, and thus share "
"file offsets and file status flags (see B<open>(2))."
msgstr ""
"Si B<CLONE_FILES> n'est pas positionné, le processus enfant hérite d'une "
"copie des descripteurs de fichier ouverts par l'appelant au moment de "
"l'appel B<clone>(). Les opérations d'ouverture et de fermeture ou de "
"modification d'attributs du descripteur de fichier subséquentes, effectuées "
"par le processus appelant ou son enfant, ne concernent pas l'autre "
"processus. Remarquez toutefois que les copies des descripteurs de fichier "
"dans l'enfant sont associées aux mêmes descriptions de fichiers ouverts que "
"les descripteurs de fichier correspondants dans le processus appelant, "
"partageant ainsi les attributs de position et d’états du fichier (consultez "
"B<open>(2))."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_FS> (since Linux 2.0)"
msgstr "B<CLONE_FS> (depuis Linux 2.0)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"If B<CLONE_FS> is set, the caller and the child process share the same "
"filesystem information.  This includes the root of the filesystem, the "
"current working directory, and the umask.  Any call to B<chroot>(2), "
"B<chdir>(2), or B<umask>(2)  performed by the calling process or the child "
"process also affects the other process."
msgstr ""
"Si l'attribut B<CLONE_FS> est positionné, le processus appelant et le "
"processus enfant partagent les mêmes informations concernant le système de "
"fichiers. Cela inclut la racine du système de fichiers, le répertoire de "
"travail, et l'umask. Tout appel à B<chroot>(2), B<chdir>(2) ou B<umask>(2) "
"effectué par un processus aura également influence sur l'autre processus."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"If B<CLONE_FS> is not set, the child process works on a copy of the "
"filesystem information of the calling process at the time of the clone "
"call.  Calls to B<chroot>(2), B<chdir>(2), or B<umask>(2)  performed later "
"by one of the processes do not affect the other process."
msgstr ""
"Si B<CLONE_FS> n'est pas positionné, le processus enfant travaille sur une "
"copie des informations de l'appelant concernant le système de fichiers au "
"moment de l'appel clone. Les appels à B<chroot>(2), B<chdir>(2), B<umask>(2) "
"effectués ensuite par un processus n'affectent pas l'autre processus."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_INTO_CGROUP> (since Linux 5.7)"
msgstr "B<CLONE_INTO_CGROUP> (depuis Linux 5.7)"

#.  commit ef2c41cf38a7559bbf91af42d5b6a4429db8fc68
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"By default, a child process is placed in the same version 2 cgroup as its "
"parent.  The B<CLONE_INTO_CGROUP> flag allows the child process to be "
"created in a different version 2 cgroup.  (Note that B<CLONE_INTO_CGROUP> "
"has effect only for version 2 cgroups.)"
msgstr ""
"Par défaut, un processus enfant est mis dans le même cgroup version 2 que "
"son parent. L'attribut B<CLONE_INTO_CGROUP> permet au processus enfant "
"d'être créé dans un cgroup version 2 différent (remarquez que "
"B<CLONE_INTO_CGROUP> n'a d'effet que sur les cgroup version 2)."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"In order to place the child process in a different cgroup, the caller "
"specifies B<CLONE_INTO_CGROUP> in I<cl_args.flags> and passes a file "
"descriptor that refers to a version 2 cgroup in the I<cl_args.cgroup> "
"field.  (This file descriptor can be obtained by opening a cgroup v2 "
"directory using either the B<O_RDONLY> or the B<O_PATH> flag.)  Note that "
"all of the usual restrictions (described in B<cgroups>(7))  on placing a "
"process into a version 2 cgroup apply."
msgstr ""
"Pour mettre le processus enfant dans un cgroup différent, l'appelant indique "
"B<CLONE_INTO_CGROUP> dans I<cl_args.flags> et passe un descripteur de "
"fichier qui se rapporte à un cgroup version 2 du champ I<cl_args.cgroup> (le "
"descripteur de fichier peut être obtenu en ouvrant un répertoire cgroup v2, "
"en utilisant l'attribut B<O_RDONLY> ou B<O_PATH>). Remarquez que toutes les "
"restrictions habituelles (décrites dans B<cgroups>(7)) quant au "
"positionnement d'un processus dans un cgroup version 2 s'appliquent."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"Among the possible use cases for B<CLONE_INTO_CGROUP> are the following:"
msgstr ""
"Voici certains des cas d'utilisation possibles de B<CLONE_INTO_CGROUP> :"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"Spawning a process into a cgroup different from the parent's cgroup makes it "
"possible for a service manager to directly spawn new services into dedicated "
"cgroups.  This eliminates the accounting jitter that would be caused if the "
"child process was first created in the same cgroup as the parent and then "
"moved into the target cgroup.  Furthermore, spawning the child process "
"directly into a target cgroup is significantly cheaper than moving the child "
"process into the target cgroup after it has been created."
msgstr ""
"Créer un processus dans un autre cgroup que celui du parent permet au "
"gestionnaire de service de placer directement de nouveaux services dans des "
"cgroup dédiés. Cela élimine les contraintes comptables qui existeraient si "
"le processus enfant était créé d'abord dans le même cgroup que le parent "
"puis déplacé dans un cgroup cible. De plus, la création d'un processus "
"enfant directement dans un cgroup cible coûte beaucoup moins cher que de "
"déplacer le processus enfant dans le cgroup cible après l'avoir créé."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"The B<CLONE_INTO_CGROUP> flag also allows the creation of frozen child "
"processes by spawning them into a frozen cgroup.  (See B<cgroups>(7)  for a "
"description of the freezer controller.)"
msgstr ""
"L'attribut B<CLONE_INTO_CGROUP> permet également la création de processus "
"enfants gelés en les créant dans un cgroup gelé (voir B<cgroups>(7) pour une "
"description des contrôleurs de gel)."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"For threaded applications (or even thread implementations which make use of "
"cgroups to limit individual threads), it is possible to establish a fixed "
"cgroup layout before spawning each thread directly into its target cgroup."
msgstr ""
"Pour les applications threadées (voire même les implémentations de thread "
"qui utilisent des cgroup pour limiter les threads individuels), il est "
"possible d'établir une couche de cgroup fixe avant de créer chaque thread "
"directement dans son cgroup cible."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_IO> (since Linux 2.6.25)"
msgstr "B<CLONE_IO> (depuis Linux 2.6.25)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"If B<CLONE_IO> is set, then the new process shares an I/O context with the "
"calling process.  If this flag is not set, then (as with B<fork>(2))  the "
"new process has its own I/O context."
msgstr ""
"Si B<CLONE_IO> est défini, alors le nouveau processus partage un contexte "
"d'entrées-sorties avec le processus appelant. Si cet attribut n'est pas "
"défini, alors (comme pour B<fork>(2)) le nouveau processus a son propre "
"contexte d'entrées-sorties."

#.  The following based on text from Jens Axboe
#.  the anticipatory and CFQ scheduler
#.  with CFQ and AS.
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"The I/O context is the I/O scope of the disk scheduler (i.e., what the I/O "
"scheduler uses to model scheduling of a process's I/O).  If processes share "
"the same I/O context, they are treated as one by the I/O scheduler.  As a "
"consequence, they get to share disk time.  For some I/O schedulers, if two "
"processes share an I/O context, they will be allowed to interleave their "
"disk access.  If several threads are doing I/O on behalf of the same process "
"(B<aio_read>(3), for instance), they should employ B<CLONE_IO> to get better "
"I/O performance."
msgstr ""
"Le contexte d'entrées-sorties correspond à la visibilité que l'ordonnanceur "
"de disques a des entrées-sorties (c'est-à-dire, ce que l'ordonnanceur "
"d'entrées-sorties utilise pour modéliser l'ordonnancement des entrées-"
"sorties d'un processus). Si des processus partagent le même contexte "
"d'entrées-sorties, ils sont traités comme un seul par l'ordonnanceur "
"d'entrées-sorties. Par conséquent, ils partagent le même temps d'accès aux "
"disques. Pour certains ordonnanceurs d'entrées-sorties, si deux processus "
"partagent un contexte d'entrées-sorties, ils seront autorisés à intercaler "
"leurs accès disque. Si plusieurs threads utilisent des entrées-sorties pour "
"le même processus (B<aio_read>(3), par exemple), ils devraient utiliser "
"B<CLONE_IO> pour obtenir de meilleurs performances d'entrées-sorties."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"If the kernel is not configured with the B<CONFIG_BLOCK> option, this flag "
"is a no-op."
msgstr ""
"Si le noyau n'a pas été configuré avec l'option B<CONFIG_BLOCK>, cet "
"attribut n'a aucun effet."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_NEWCGROUP> (since Linux 4.6)"
msgstr "B<CLONE_NEWCGROUP> (depuis Linux 4.6)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"Create the process in a new cgroup namespace.  If this flag is not set, then "
"(as with B<fork>(2))  the process is created in the same cgroup namespaces "
"as the calling process."
msgstr ""
"Créer le processus dans un nouvel espace de noms cgroup. Si cet attribut "
"n'est pas invoqué, alors (comme pour B<fork>(2)) le processus est créé dans "
"le même espace de noms cgroup que le processus appelant."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"For further information on cgroup namespaces, see B<cgroup_namespaces>(7)."
msgstr ""
"Pour plus d'informations sur les espaces de noms cgroup, consultez "
"B<cgroup_namespaces>(7)."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"Only a privileged process (B<CAP_SYS_ADMIN>)  can employ B<CLONE_NEWCGROUP>."
msgstr ""
"Seul un processus disposant de privilèges (B<CAP_SYS_ADMIN>) peut utiliser "
"B<CLONE_NEWCGROUP>."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_NEWIPC> (since Linux 2.6.19)"
msgstr "B<CLONE_NEWIPC> (depuis Linux 2.6.19)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"If B<CLONE_NEWIPC> is set, then create the process in a new IPC namespace.  "
"If this flag is not set, then (as with B<fork>(2)), the process is created "
"in the same IPC namespace as the calling process."
msgstr ""
"Si B<CLONE_NEWIPC> est invoqué, alors le processus est créé dans un nouvel "
"espace de noms utilisateur IPC. Si cet attribut n'est pas invoqué, alors "
"(comme pour B<fork>(2)) le processus est créé dans le même espace de noms "
"utilisateur IPC que le processus appelant."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid "For further information on IPC namespaces, see B<ipc_namespaces>(7)."
msgstr ""
"Pour plus d'informations sur les espaces de noms IPC, reportez vous à "
"B<ipc_namespaces>(7)."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"Only a privileged process (B<CAP_SYS_ADMIN>)  can employ B<CLONE_NEWIPC>.  "
"This flag can't be specified in conjunction with B<CLONE_SYSVSEM>."
msgstr ""
"Seul un processus disposant de privilèges (B<CAP_SYS_ADMIN>) peut utiliser "
"B<CLONE_NEWIPC>. Cet attribut ne peut pas être employé en association avec "
"B<CLONE_SYSVSEM>."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_NEWNET> (since Linux 2.6.24)"
msgstr "B<CLONE_NEWNET> (depuis Linux 2.6.24)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"(The implementation of this flag was completed only by about kernel version "
"2.6.29.)"
msgstr ""
"(L'implémentation de cet attribut n'est complète que depuis le noyau 2.6.29.)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"If B<CLONE_NEWNET> is set, then create the process in a new network "
"namespace.  If this flag is not set, then (as with B<fork>(2))  the process "
"is created in the same network namespace as the calling process."
msgstr ""
"Si B<CLONE_NEWNET> est invoqué, alors le processus est créé dans un nouvel "
"espace de noms réseau. Si cet attribut n'est pas invoqué, alors (comme pour "
"B<fork>(2)) le processus est créé dans le même espace de noms réseau que le "
"processus appelant."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"For further information on network namespaces, see B<network_namespaces>(7)."
msgstr ""
"Pour plus d'informations sur les espaces de noms réseau, reportez vous à "
"B<network_namespaces>(7)."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"Only a privileged process (B<CAP_SYS_ADMIN>)  can employ B<CLONE_NEWNET>."
msgstr ""
"Seul un processus disposant de privilèges (B<CAP_SYS_ADMIN>) peut appeler "
"B<CLONE_NEWNET>."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_NEWNS> (since Linux 2.4.19)"
msgstr "B<CLONE_NEWNS> (depuis Linux 2.4.19)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"If B<CLONE_NEWNS> is set, the cloned child is started in a new mount "
"namespace, initialized with a copy of the namespace of the parent.  If "
"B<CLONE_NEWNS> is not set, the child lives in the same mount namespace as "
"the parent."
msgstr ""
"Si l'attribut B<CLONE_NEWNS> est invoqué, l'enfant cloné démarre dans un "
"nouvel espace de noms montage, initialisé avec une copie de l'espace de noms "
"du parent. Si B<CLONE_NEWNS> n'est pas invoqué, alors l'enfant existe dans "
"le même espace de noms montage que le parent."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"For further information on mount namespaces, see B<namespaces>(7)  and "
"B<mount_namespaces>(7)."
msgstr ""
"Pour plus d'informations sur les espaces de noms montage, consultez "
"B<namespaces>(7) et B<mount_namespaces>(7)."

#.  See https://lwn.net/Articles/543273/
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"Only a privileged process (B<CAP_SYS_ADMIN>)  can employ B<CLONE_NEWNS>.  It "
"is not permitted to specify both B<CLONE_NEWNS> and B<CLONE_FS> in the same "
"clone call."
msgstr ""
"Seul un processus disposant de privilèges (B<CAP_SYS_ADMIN>) peut utiliser "
"l'attribut B<CLONE_NEWNS>. Il n'est pas possible de spécifier à la fois "
"B<CLONE_NEWNS> et B<CLONE_FS> pour le même appel clone."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_NEWPID> (since Linux 2.6.24)"
msgstr "B<CLONE_NEWPID> (depuis Linux 2.6.24)"

#.  This explanation draws a lot of details from
#.  http://lwn.net/Articles/259217/
#.  Authors: Pavel Emelyanov <xemul@openvz.org>
#.  and Kir Kolyshkin <kir@openvz.org>
#.  The primary kernel commit is 30e49c263e36341b60b735cbef5ca37912549264
#.  Author: Pavel Emelyanov <xemul@openvz.org>
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"If B<CLONE_NEWPID> is set, then create the process in a new PID namespace.  "
"If this flag is not set, then (as with B<fork>(2))  the process is created "
"in the same PID namespace as the calling process."
msgstr ""
"Si B<CLONE_NEWPID> est invoqué, alors le processus est créé dans un nouvel "
"espace de noms PID. Si cet attribut n'est pas invoqué, alors (comme pour "
"B<fork>(2)) le processus est créé dans le même espace de noms PID que le "
"processus appelant."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"For further information on PID namespaces, see B<namespaces>(7)  and "
"B<pid_namespaces>(7)."
msgstr ""
"Pour plus d'informations sur les espaces de noms PID, consultez "
"B<namespaces>(7) et B<pid_namespaces>(7)."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"Only a privileged process (B<CAP_SYS_ADMIN>)  can employ B<CLONE_NEWPID>.  "
"This flag can't be specified in conjunction with B<CLONE_THREAD> or "
"B<CLONE_PARENT>."
msgstr ""
"Seul un processus disposant de privilèges (B<CAP_SYS_ADMIN>) peut utiliser "
"B<CLONE_NEWPID>. Cet attribut ne peut pas être utilisé en association avec "
"B<CLONE_THREAD> ou avec B<CLONE_PARENT>."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_NEWUSER>"
msgstr "B<CLONE_NEWUSER>"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"(This flag first became meaningful for B<clone>()  in Linux 2.6.23, the "
"current B<clone>()  semantics were merged in Linux 3.5, and the final pieces "
"to make the user namespaces completely usable were merged in Linux 3.8.)"
msgstr ""
"(Cet attribut est apparu dans B<clone>() pour la première fois dans Linux "
"2.6.23, les sémantiques actuelles de B<clone>() ont été ajoutées dans Linux "
"3.5, et les derniers modules rendant les espaces de noms utilisateur "
"complètement opérationnels sont apparus dans Linux 3.8.)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"If B<CLONE_NEWUSER> is set, then create the process in a new user "
"namespace.  If this flag is not set, then (as with B<fork>(2))  the process "
"is created in the same user namespace as the calling process."
msgstr ""
"Si B<CLONE_NEWUSER> est invoqué, alors le processus est créé dans un nouvel "
"espace de noms utilisateur. Si cet attribut n'est pas invoqué, alors (comme "
"pour B<fork>(2)) le processus est créé dans le même espace de noms "
"utilisateur que le processus appelant."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"For further information on user namespaces, see B<namespaces>(7)  and "
"B<user_namespaces>(7)."
msgstr ""
"Pour plus d'informations sur les espaces de noms utilisateur, consultez "
"B<namespaces>(7) et B<user_namespaces>(7)."

#.  Before Linux 2.6.29, it appears that only CAP_SYS_ADMIN was needed
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"Before Linux 3.8, use of B<CLONE_NEWUSER> required that the caller have "
"three capabilities: B<CAP_SYS_ADMIN>, B<CAP_SETUID>, and B<CAP_SETGID>.  "
"Starting with Linux 3.8, no privileges are needed to create a user namespace."
msgstr ""
"Avant Linux 3.8, les processus appelant devaient disposer de trois capacités "
"pour utiliser B<CLONE_NEWUSER> :  B<CAP_SYS_ADMIN>, B<CAP_SETUID> et "
"B<CAP_SETGID>.  À partir de Linux 3.8, il n'est plus nécessaire de disposer "
"de privilèges pour créer des espaces de noms utilisateur."

#.  commit e66eded8309ebf679d3d3c1f5820d1f2ca332c71
#.  https://lwn.net/Articles/543273/
#.  The fix actually went into 3.9 and into 3.8.3. However, user namespaces
#.  were, for practical purposes, unusable in earlier 3.8.x because of the
#.  various filesystems that didn't support userns.
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"This flag can't be specified in conjunction with B<CLONE_THREAD> or "
"B<CLONE_PARENT>.  For security reasons, B<CLONE_NEWUSER> cannot be specified "
"in conjunction with B<CLONE_FS>."
msgstr ""
"Cet attribut ne peut pas être utilisé en association avec B<CLONE_THREAD> ou "
"avec B<CLONE_PARENT>. Pour des raisons de sécurité, B<CLONE_NEWUSER> ne peut "
"pas être utilisé en association avec B<CLONE_FS>."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_NEWUTS> (since Linux 2.6.19)"
msgstr "B<CLONE_NEWUTS> (depuis Linux 2.6.19)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"If B<CLONE_NEWUTS> is set, then create the process in a new UTS namespace, "
"whose identifiers are initialized by duplicating the identifiers from the "
"UTS namespace of the calling process.  If this flag is not set, then (as "
"with B<fork>(2))  the process is created in the same UTS namespace as the "
"calling process."
msgstr ""
"Si B<CLONE_NEWUTS> est défini, créez le processus dans un nouvel espace de "
"noms UTS, dont les identifiants sont initialisés en dupliquant les "
"identifiants de l'espace de noms UTS du processus appelant. Si cet attribut "
"n'est pas défini, alors (comme pour B<fork>(2)) le processus est créé dans "
"le même espace de noms UTS que le processus appelant."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid "For further information on UTS namespaces, see B<uts_namespaces>(7)."
msgstr ""
"Pour obtenir plus d'informations sur les espaces de noms UTS, consultez "
"B<namespaces>(7)."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"Only a privileged process (B<CAP_SYS_ADMIN>)  can employ B<CLONE_NEWUTS>."
msgstr ""
"Seul un processus disposant de privilèges (B<CAP_SYS_ADMIN>) peut utiliser "
"B<CLONE_NEWUTS>."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_PARENT> (since Linux 2.3.12)"
msgstr "B<CLONE_PARENT> (depuis Linux 2.3.12)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"If B<CLONE_PARENT> is set, then the parent of the new child (as returned by "
"B<getppid>(2))  will be the same as that of the calling process."
msgstr ""
"Si B<CLONE_PARENT> est présent, le parent du nouvel enfant (comme il est "
"indiqué par B<getppid>(2)) sera le même que celui du processus appelant."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"If B<CLONE_PARENT> is not set, then (as with B<fork>(2))  the child's parent "
"is the calling process."
msgstr ""
"Si B<CLONE_PARENT> n'est pas fourni, alors (comme pour B<fork>(2)) le parent "
"du processus enfant sera le processus appelant."

#. type: Plain text
#: archlinux debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-tumbleweed
#, fuzzy
#| msgid ""
#| "Note that it is the parent process, as returned by B<getppid>(2), which "
#| "is signaled when the child terminates, so that if B<CLONE_PARENT> is set, "
#| "then the parent of the calling process, rather than the calling process "
#| "itself, will be signaled."
msgid ""
"Note that it is the parent process, as returned by B<getppid>(2), which is "
"signaled when the child terminates, so that if B<CLONE_PARENT> is set, then "
"the parent of the calling process, rather than the calling process itself, "
"is signaled."
msgstr ""
"Remarquez que c'est le processus parent, tel qu'indiqué par B<getppid>(2), "
"qui est notifié lors de la fin de l'enfant. Ainsi, si B<CLONE_PARENT> est "
"présent, alors c'est le parent du processus appelant, et non ce dernier, qui "
"sera notifié."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"The B<CLONE_PARENT> flag can't be used in clone calls by the global init "
"process (PID 1 in the initial PID namespace)  and init processes in other "
"PID namespaces.  This restriction prevents the creation of multi-rooted "
"process trees as well as the creation of unreapable zombies in the initial "
"PID namespace."
msgstr ""
"L'attribut B<CLONE_PARENT> ne peut pas être utilisé dans des appels clone "
"par le processus d'initialisation global (PID B<1> dans l'espace de noms PID "
"initial) et par les processus initiaux dans les autres espaces de noms PID. "
"Cette restriction empêche la création d'arbres de processus à plusieurs "
"racines ou de zombies non récupérables dans l'espace de noms PID initial."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_PARENT_SETTID> (since Linux 2.5.49)"
msgstr "B<CLONE_PARENT_SETTID> (depuis Linux 2.5.49)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"Store the child thread ID at the location pointed to by I<parent_tid> "
"(B<clone>())  or I<cl_args.parent_tid> (B<clone3>())  in the parent's "
"memory.  (In Linux 2.5.32-2.5.48 there was a flag B<CLONE_SETTID> that did "
"this.)  The store operation completes before the clone call returns control "
"to user space."
msgstr ""
"Enregistrer l'ID du thread enfant à l'endroit vers lequel pointe "
"I<parent_tid> (B<clone>()) ou I<cl_args.parent_tid> (B<clone3>()) dans la "
"mémoire du parent (dans Linux 2.5.32-2.5.48 il y a un attribut "
"B<CLONE_SETTID> qui fait cela). L'opération d'enregistrement s'achève avant "
"que l'opération clone ne donne le contrôle à l'espace utilisateur."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_PID> (Linux 2.0 to 2.5.15)"
msgstr "B<CLONE_PID> (Linux 2.0 à 2.5.15)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"If B<CLONE_PID> is set, the child process is created with the same process "
"ID as the calling process.  This is good for hacking the system, but "
"otherwise of not much use.  From Linux 2.3.21 onward, this flag could be "
"specified only by the system boot process (PID 0).  The flag disappeared "
"completely from the kernel sources in Linux 2.5.16.  Subsequently, the "
"kernel silently ignored this bit if it was specified in the I<flags> mask.  "
"Much later, the same bit was recycled for use as the B<CLONE_PIDFD> flag."
msgstr ""
"Si l'attribut B<CLONE_PID> est positionné, les processus appelant et enfant "
"ont le même numéro de processus. C'est bien pour hacker le système, mais "
"autrement il n'est plus utilisé. Depuis Linux 2.3.21, cet attribut ne peut "
"être utilisé que par le processus de démarrage du système (PID 0). Il a "
"disparu dans Linux 2.5.16. Si bien que le noyau ignorait silencieusement le "
"bit s'il était indiqué dans le masque I<flags>. Bien plus tard, le même bit "
"a été recyclé pour être utilisé comme attribut de B<CLONE_PIDFD>."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_PIDFD> (since Linux 5.2)"
msgstr "B<CLONE_PIDFD> (depuis Linux 5.2)"

#.  commit b3e5838252665ee4cfa76b82bdf1198dca81e5be
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"If this flag is specified, a PID file descriptor referring to the child "
"process is allocated and placed at a specified location in the parent's "
"memory.  The close-on-exec flag is set on this new file descriptor.  PID "
"file descriptors can be used for the purposes described in B<pidfd_open>(2)."
msgstr ""
"Si cet attribut est indiqué, un descripteur de fichier PID renvoyant au "
"processus enfant est alloué et placé à un endroit donné dans la mémoire du "
"parent. L'attribut close-on-exec est positionné sur ce nouveau descripteur "
"de fichier. Les descripteurs de fichier PID peuvent être utilisés pour des "
"objectifs décrits dans B<pidfd_open>(2)."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"When using B<clone3>(), the PID file descriptor is placed at the location "
"pointed to by I<cl_args.pidfd>."
msgstr ""
"Quand on utilise B<clone3>(), le descripteur de fichier PID est placé à un "
"endroit vers lequel pointe I<cl_args.pidfd>."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"When using B<clone>(), the PID file descriptor is placed at the location "
"pointed to by I<parent_tid>.  Since the I<parent_tid> argument is used to "
"return the PID file descriptor, B<CLONE_PIDFD> cannot be used with "
"B<CLONE_PARENT_SETTID> when calling B<clone>()."
msgstr ""
"Quand on utilise B<clone>(), le descripteur de fichier PID est placé à un "
"endroit vers lequel pointe I<parent_tid>. Comme le paramètre I<parent_tid> "
"est utilisé pour renvoyer le descripteur de fichier PID, B<CLONE_PIDFD> ne "
"peut pas être utilisé avec B<CLONE_PARENT_SETTID> lors d'un appel B<clone>()."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"It is currently not possible to use this flag together with B<CLONE_THREAD.> "
"This means that the process identified by the PID file descriptor will "
"always be a thread group leader."
msgstr ""
"Il n'est pas possible actuellement d'utiliser cet attribut avec "
"B<CLONE_THREAD.> Cela veut dire que le processus identifié par le "
"descripteur de fichier PID sera toujours un leader dans le groupe de threads."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"If the obsolete B<CLONE_DETACHED> flag is specified alongside B<CLONE_PIDFD> "
"when calling B<clone>(), an error is returned.  An error also results if "
"B<CLONE_DETACHED> is specified when calling B<clone3>().  This error "
"behavior ensures that the bit corresponding to B<CLONE_DETACHED> can be "
"reused for further PID file descriptor features in the future."
msgstr ""
"Si l'attribut obsolète B<CLONE_DETACHED> est indiqué avec B<CLONE_PIDFD> "
"lors d'un appel à B<clone>(), une erreur est renvoyée. Une erreur se produit "
"aussi si B<CLONE_DETACHED> est spécifié lors d'un appel à B<clone3>(). Ce "
"comportement garantit que le bit qui correspond à B<CLONE_DETACHED> pourra "
"être utilisé à l'avenir pour des fonctionnalités supplémentaires du "
"descripteur de fichier PID."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_PTRACE> (since Linux 2.2)"
msgstr "B<CLONE_PTRACE> (depuis Linux 2.2)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"If B<CLONE_PTRACE> is specified, and the calling process is being traced, "
"then trace the child also (see B<ptrace>(2))."
msgstr ""
"Si l'attribut B<CLONE_PTRACE> est positionné et si l'appelant est suivi par "
"un débogueur, alors l'enfant sera également suivi (consultez B<ptrace>(2))."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_SETTLS> (since Linux 2.5.32)"
msgstr "B<CLONE_SETTLS> (depuis Linux 2.5.32)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid "The TLS (Thread Local Storage) descriptor is set to I<tls>."
msgstr "Le descripteur TLS (Thread Local Storage) est positionné sur I<tls>."

#. type: Plain text
#: archlinux
#, fuzzy
#| msgid ""
#| "The interpretation of I<tls> and the resulting effect is architecture "
#| "dependent.  On x86, I<tls> is interpreted as a I<struct user_desc\\ *> "
#| "(see B<set_thread_area>(2)).  On x86-64 it is the new value to be set for "
#| "the %fs base register (see the B<ARCH_SET_FS> argument to "
#| "B<arch_prctl>(2)).  On architectures with a dedicated TLS register, it is "
#| "the new value of that register."
msgid ""
"The interpretation of I<tls> and the resulting effect is architecture "
"dependent.  On x86, I<tls> is interpreted as a I<struct user_desc\\~*> (see "
"B<set_thread_area>(2)).  On x86-64 it is the new value to be set for the %fs "
"base register (see the B<ARCH_SET_FS> argument to B<arch_prctl>(2)).  On "
"architectures with a dedicated TLS register, it is the new value of that "
"register."
msgstr ""
"L'interprétation de I<tls> et les effets qui en découlent dépendent de "
"l'architecture. Sur x86, I<tls> est interprété comme une I<struct "
"user_desc\\ *> (voir B<set_thread_area>(2)). Sur x86-64, il s'agit de la "
"nouvelle valeur à positionner pour le registre de base %fs (voir le "
"paramètre B<ARCH_SET_FS> de B<arch_prctl>(2)). Sur les architectures ayant "
"un registre TLS dédié, il s'agit de la nouvelle valeur de ce registre."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"Use of this flag requires detailed knowledge and generally it should not be "
"used except in libraries implementing threading."
msgstr ""
"L'utilisation de cet attribut exige une connaissance détaillée et n'est "
"généralement pas souhaitable, sauf dans l'implémentation de bibliothèques de "
"gestion des threads."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_SIGHAND> (since Linux 2.0)"
msgstr "B<CLONE_SIGHAND> (depuis Linux 2.0)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"If B<CLONE_SIGHAND> is set, the calling process and the child process share "
"the same table of signal handlers.  If the calling process or child process "
"calls B<sigaction>(2)  to change the behavior associated with a signal, the "
"behavior is changed in the other process as well.  However, the calling "
"process and child processes still have distinct signal masks and sets of "
"pending signals.  So, one of them may block or unblock signals using "
"B<sigprocmask>(2)  without affecting the other process."
msgstr ""
"Si l'attribut B<CLONE_SIGHAND> est positionné, le processus appelant et le "
"processus enfant partagent la même table de gestionnaires de signaux. Si "
"l'appelant, ou l'enfant, appelle B<sigaction>(2) pour modifier le "
"comportement associé à un signal, ce comportement est également changé pour "
"l'autre processus. Néanmoins, l'appelant et l'enfant ont toujours des "
"masques de signaux distincts, et leurs ensembles de signaux bloqués sont "
"indépendants. L'un des processus peut donc bloquer ou débloquer un signal en "
"utilisant B<sigprocmask>(2) sans affecter l'autre processus."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"If B<CLONE_SIGHAND> is not set, the child process inherits a copy of the "
"signal handlers of the calling process at the time of the clone call.  Calls "
"to B<sigaction>(2)  performed later by one of the processes have no effect "
"on the other process."
msgstr ""
"Si B<CLONE_SIGHAND> n'est pas utilisé, le processus enfant hérite d'une "
"copie des gestionnaires de signaux de l'appelant lors de l'invocation de "
"B<clone>(). Les appels à B<sigaction>(2) effectués ensuite depuis un "
"processus n'ont pas d'effets sur l'autre processus."

#.  Precisely: Linux 2.6.0-test6
#. type: Plain text
#: archlinux debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-tumbleweed
#, fuzzy
#| msgid ""
#| "Since Linux 2.6.0, the I<flags> mask must also include B<CLONE_VM> if "
#| "B<CLONE_SIGHAND> is specified"
msgid ""
"Since Linux 2.6.0, the I<flags> mask must also include B<CLONE_VM> if "
"B<CLONE_SIGHAND> is specified."
msgstr ""
"Depuis Linux 2.6.0, le masque I<flags> doit aussi inclure B<CLONE_VM> si "
"B<CLONE_SIGHAND> est spécifié"

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_STOPPED> (since Linux 2.6.0)"
msgstr "B<CLONE_STOPPED> (depuis Linux 2.6.0)"

#. #-#-#-#-#  archlinux: clone.2.pot (PACKAGE VERSION)  #-#-#-#-#
#.  Precisely: Linux 2.6.0-test2
#. type: Plain text
#. #-#-#-#-#  debian-bullseye: clone.2.pot (PACKAGE VERSION)  #-#-#-#-#
#.  Precisely: Linux 2.6.0-test2
#. type: Plain text
#. #-#-#-#-#  debian-unstable: clone.2.pot (PACKAGE VERSION)  #-#-#-#-#
#.  Precisely: Linux 2.6.0-test2
#. type: Plain text
#. #-#-#-#-#  fedora-37: clone.2.pot (PACKAGE VERSION)  #-#-#-#-#
#.  Precisely: Linux 2.6.0-test2
#. type: Plain text
#. #-#-#-#-#  fedora-rawhide: clone.2.pot (PACKAGE VERSION)  #-#-#-#-#
#.  Precisely: Linux 2.6.0-test2
#. type: Plain text
#. #-#-#-#-#  mageia-cauldron: clone.2.pot (PACKAGE VERSION)  #-#-#-#-#
#.  Precisely: Linux 2.6.0-test2
#. type: Plain text
#. #-#-#-#-#  opensuse-leap-15-5: clone.2.pot (PACKAGE VERSION)  #-#-#-#-#
#. type: Plain text
#. #-#-#-#-#  opensuse-tumbleweed: clone.2.pot (PACKAGE VERSION)  #-#-#-#-#
#.  Precisely: Linux 2.6.0-test2
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"If B<CLONE_STOPPED> is set, then the child is initially stopped (as though "
"it was sent a B<SIGSTOP> signal), and must be resumed by sending it a "
"B<SIGCONT> signal."
msgstr ""
"Si l'attribut B<CLONE_STOPPED> est positionné, l'enfant est initialement "
"stoppé (comme s'il avait reçu le signal B<SIGSTOP>), et doit être relancé en "
"lui envoyant le signal B<SIGCONT>."

#.  glibc 2.8 removed this defn from bits/sched.h
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"This flag was I<deprecated> from Linux 2.6.25 onward, and was I<removed> "
"altogether in Linux 2.6.38.  Since then, the kernel silently ignores it "
"without error.  Starting with Linux 4.6, the same bit was reused for the "
"B<CLONE_NEWCGROUP> flag."
msgstr ""
"Cet attribut a été rendu I<obsolète> par Linux 2.6.25, puis il a été "
"I<supprimé> dans Linux 2.6.38. Depuis lors, le noyau l'ignore "
"silencieusement sans erreur. À partir de Linux 4.6, le même bit a été "
"réutilisé comme attribut de B<CLONE_NEWCGROUP>."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_SYSVSEM> (since Linux 2.5.10)"
msgstr "B<CLONE_SYSVSEM> (depuis Linux 2.5.10)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"If B<CLONE_SYSVSEM> is set, then the child and the calling process share a "
"single list of System V semaphore adjustment (I<semadj>)  values (see "
"B<semop>(2)).  In this case, the shared list accumulates I<semadj> values "
"across all processes sharing the list, and semaphore adjustments are "
"performed only when the last process that is sharing the list terminates (or "
"ceases sharing the list using B<unshare>(2)).  If this flag is not set, then "
"the child has a separate I<semadj> list that is initially empty."
msgstr ""
"Si B<CLONE_SYSVSEM> est positionné, l'enfant et le processus appelant "
"partagent la même liste de compteurs «\\ undo\\ » pour les sémaphores "
"System V (consultez B<semop>(2)). Dans ce cas, cette liste regroupe toutes "
"les valeurs I<semadj> des processus partageant cette liste, et les "
"modifications des sémaphores sont effectuées seulement lorsque le dernier "
"processus de la liste se termine (ou cesse de partager la liste en invoquant "
"B<unshare>(2)). Si cet attribut n'est pas utilisé, l'enfant a une liste «\\ "
"undo\\ » séparée, initialement vide."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_THREAD> (since Linux 2.4.0)"
msgstr "B<CLONE_THREAD> (depuis Linux 2.4.0)"

#. #-#-#-#-#  archlinux: clone.2.pot (PACKAGE VERSION)  #-#-#-#-#
#.  Precisely: Linux 2.6.0-test8
#. type: Plain text
#. #-#-#-#-#  debian-bullseye: clone.2.pot (PACKAGE VERSION)  #-#-#-#-#
#.  Precisely: Linux 2.6.0-test8
#. type: Plain text
#. #-#-#-#-#  debian-unstable: clone.2.pot (PACKAGE VERSION)  #-#-#-#-#
#.  Precisely: Linux 2.6.0-test8
#. type: Plain text
#. #-#-#-#-#  fedora-37: clone.2.pot (PACKAGE VERSION)  #-#-#-#-#
#.  Precisely: Linux 2.6.0-test8
#. type: Plain text
#. #-#-#-#-#  fedora-rawhide: clone.2.pot (PACKAGE VERSION)  #-#-#-#-#
#.  Precisely: Linux 2.6.0-test8
#. type: Plain text
#. #-#-#-#-#  mageia-cauldron: clone.2.pot (PACKAGE VERSION)  #-#-#-#-#
#.  Precisely: Linux 2.6.0-test8
#. type: Plain text
#. #-#-#-#-#  opensuse-leap-15-5: clone.2.pot (PACKAGE VERSION)  #-#-#-#-#
#. type: Plain text
#. #-#-#-#-#  opensuse-tumbleweed: clone.2.pot (PACKAGE VERSION)  #-#-#-#-#
#.  Precisely: Linux 2.6.0-test8
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"If B<CLONE_THREAD> is set, the child is placed in the same thread group as "
"the calling process.  To make the remainder of the discussion of "
"B<CLONE_THREAD> more readable, the term \"thread\" is used to refer to the "
"processes within a thread group."
msgstr ""
"Si B<CLONE_THREAD> est présent, l'enfant est placé dans le même groupe de "
"threads que le processus appelant. Afin de rendre l'explication de "
"B<CLONE_THREAD> plus lisible, le terme «\\ thread\\ » est utilisé pour "
"parler des processus dans un même groupe de threads."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"Thread groups were a feature added in Linux 2.4 to support the POSIX threads "
"notion of a set of threads that share a single PID.  Internally, this shared "
"PID is the so-called thread group identifier (TGID) for the thread group.  "
"Since Linux 2.4, calls to B<getpid>(2)  return the TGID of the caller."
msgstr ""
"Les groupes de threads sont une fonctionnalité ajoutée dans Linux 2.4 pour "
"supporter la notion POSIX d'ensemble de threads partageant un même PID. En "
"interne, ce PID partagé est appelé identifiant de groupe de threads (TGID)."
"Depuis Linux 2.4, l'appel B<getpid>(2) renvoie l'identifiant du groupe de "
"thread de l'appelant."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"The threads within a group can be distinguished by their (system-wide)  "
"unique thread IDs (TID).  A new thread's TID is available as the function "
"result returned to the caller, and a thread can obtain its own TID using "
"B<gettid>(2)."
msgstr ""
"Les threads dans un groupe peuvent être distingués par leur identifiant de "
"thread (TID, unique sur le système). Le TID d'un nouveau thread est renvoyé "
"par B<clone>() au processus appelant, et un thread peut obtenir son propre "
"TID en utilisant B<gettid>(2)."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"When a clone call is made without specifying B<CLONE_THREAD>, then the "
"resulting thread is placed in a new thread group whose TGID is the same as "
"the thread's TID.  This thread is the I<leader> of the new thread group."
msgstr ""
"Quand clone est appelé sans positionner B<CLONE_THREAD>, le nouveau thread "
"est placé dans un nouveau groupe de thread dont le TGID est identique au TID "
"du nouveau thread. Ce thread est le I<leader> du nouveau groupe."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"A new thread created with B<CLONE_THREAD> has the same parent process as the "
"process that made the clone call (i.e., like B<CLONE_PARENT>), so that calls "
"to B<getppid>(2)  return the same value for all of the threads in a thread "
"group.  When a B<CLONE_THREAD> thread terminates, the thread that created it "
"is not sent a B<SIGCHLD> (or other termination) signal; nor can the status "
"of such a thread be obtained using B<wait>(2).  (The thread is said to be "
"I<detached>.)"
msgstr ""
"Un nouveau thread créé en utilisant B<CLONE_THREAD> a le même processus "
"parent que l'appelant de B<clone>() (de même qu'avec B<CLONE_PARENT>), ainsi "
"les appels à B<getppid>(2) renvoient la même valeur à tous les threads dans "
"un même groupe. Lorsqu'un thread créé avec B<CLONE_THREAD> termine, le "
"thread qui a appelé B<clone>() pour le créer ne reçoit pas le signal "
"B<SIGCHLD> (ou autre notification de terminaison)\\ ; de même, l'état d'un "
"tel thread ne peut pas être obtenu par B<wait>(2). Le thread est dit "
"I<détaché>."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"After all of the threads in a thread group terminate the parent process of "
"the thread group is sent a B<SIGCHLD> (or other termination) signal."
msgstr ""
"Lorsque tous les threads d'un groupe de threads terminent, le processus "
"parent du groupe reçoit un signal B<SIGCHLD> (ou autre indicateur de "
"terminaison)."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"If any of the threads in a thread group performs an B<execve>(2), then all "
"threads other than the thread group leader are terminated, and the new "
"program is executed in the thread group leader."
msgstr ""
"Si l'un des threads dans un groupe de threads appelle B<execve>(2), tous les "
"threads sauf le leader sont tués, et le nouveau programme est exécuté dans "
"le leader du groupe de threads."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"If one of the threads in a thread group creates a child using B<fork>(2), "
"then any thread in the group can B<wait>(2)  for that child."
msgstr ""
"Si l'un des threads dans un groupe crée un enfant avec B<fork>(2), n'importe "
"lequel des threads du groupe peut utiliser B<wait>(2) sur cet enfant."

#.  Precisely: Linux 2.6.0-test6
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"Since Linux 2.5.35, the I<flags> mask must also include B<CLONE_SIGHAND> if "
"B<CLONE_THREAD> is specified (and note that, since Linux 2.6.0, "
"B<CLONE_SIGHAND> also requires B<CLONE_VM> to be included)."
msgstr ""
"Depuis Linux 2.5.35, le masque I<flags> doit aussi inclure B<CLONE_SIGHAND> "
"si B<CLONE_THREAD> est spécifié (et remarquez que depuis Linux 2.6.0, "
"B<CLONE_SIGHAND> a également besoin de B<CLONE_VM>)."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"Signal dispositions and actions are process-wide: if an unhandled signal is "
"delivered to a thread, then it will affect (terminate, stop, continue, be "
"ignored in)  all members of the thread group."
msgstr ""
"Les gestions de signaux sont définies au niveau des processus\\ : si un "
"signal sans gestionnaire est reçu par un thread, il affectera (tuera, "
"stoppera, relancera, ou sera ignoré par) tous les membres du groupe de "
"threads."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid "Each thread has its own signal mask, as set by B<sigprocmask>(2)."
msgstr ""
"Chaque thread a son propre masque de signal, tel que défini par "
"B<sigprocmask>(2)."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"A signal may be process-directed or thread-directed.  A process-directed "
"signal is targeted at a thread group (i.e., a TGID), and is delivered to an "
"arbitrarily selected thread from among those that are not blocking the "
"signal.  A signal may be process-directed because it was generated by the "
"kernel for reasons other than a hardware exception, or because it was sent "
"using B<kill>(2)  or B<sigqueue>(3).  A thread-directed signal is targeted "
"at (i.e., delivered to)  a specific thread.  A signal may be thread directed "
"because it was sent using B<tgkill>(2)  or B<pthread_sigqueue>(3), or "
"because the thread executed a machine language instruction that triggered a "
"hardware exception (e.g., invalid memory access triggering B<SIGSEGV> or a "
"floating-point exception triggering B<SIGFPE>)."
msgstr ""
"Un signal peut être adressé à un processus ou à un thread. S'il s'adresse à "
"un processus, il cible un groupe de threads (c'est-à-dire un TGID), et il "
"est envoyé à un thread choisi arbitrairement parmi ceux ne bloquant pas les "
"signaux. Un signal peut s'adresser à un processus car il est généré par le "
"noyau pour d'autres raisons qu'une exception matériel, ou parce qu'il a été "
"envoyé en utilisant B<kill>(2) ou B<sigqueue>(3). Si un signal s'adresse à "
"un thread, il cible (donc est envoyé) à un thread spécifique. Un signal peut "
"s'adresser à un thread du fait d'un envoi par B<tgkill>(2) ou "
"B<pthread_sigqueue>(3), ou parce que le thread a exécuté une instruction en "
"langage machine qui a provoqué une exception matériel (comme un un accès "
"invalide en mémoire, provoquant B<SIGSEGV>, ou une exception de virgule "
"flottante provoquant un B<SIGFPE>)."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"A call to B<sigpending>(2)  returns a signal set that is the union of the "
"pending process-directed signals and the signals that are pending for the "
"calling thread."
msgstr ""
"Un appel à B<sigpending>(2) renvoie un jeu de signaux qui réunit les signaux "
"en attente adressés au processus et ceux en attente pour le thread appelant."

#. type: Plain text
#: archlinux debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-tumbleweed
#, fuzzy
#| msgid ""
#| "If a process-directed signal is delivered to a thread group, and the "
#| "thread group has installed a handler for the signal, then the handler "
#| "will be invoked in exactly one, arbitrarily selected member of the thread "
#| "group that has not blocked the signal.  If multiple threads in a group "
#| "are waiting to accept the same signal using B<sigwaitinfo>(2), the kernel "
#| "will arbitrarily select one of these threads to receive the signal."
msgid ""
"If a process-directed signal is delivered to a thread group, and the thread "
"group has installed a handler for the signal, then the handler is invoked in "
"exactly one, arbitrarily selected member of the thread group that has not "
"blocked the signal.  If multiple threads in a group are waiting to accept "
"the same signal using B<sigwaitinfo>(2), the kernel will arbitrarily select "
"one of these threads to receive the signal."
msgstr ""
"Si un signal adressé à un processus est envoyé à un groupe de threads, et si "
"le groupe a installé un gestionnaire pour ce signal, alors le gestionnaire "
"sera exécuté dans exactement un des membres du groupe de threads, choisi de "
"façon arbitraire parmi ceux qui n'ont pas bloqué ce signal. Si plusieurs "
"threads dans un groupe attendent le même signal en utilisant "
"B<sigwaitinfo>(2), le noyau choisira arbitrairement l'un d'entre eux pour "
"recevoir le signal."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_UNTRACED> (since Linux 2.5.46)"
msgstr "B<CLONE_UNTRACED> (depuis Linux 2.5.46)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"If B<CLONE_UNTRACED> is specified, then a tracing process cannot force "
"B<CLONE_PTRACE> on this child process."
msgstr ""
"Si l'attribut B<CLONE_UNTRACED> est positionné, alors un processus traçant "
"le parent ne peut pas forcer B<CLONE_PTRACE> pour cet enfant."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_VFORK> (since Linux 2.2)"
msgstr "B<CLONE_VFORK> (depuis Linux 2.2)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"If B<CLONE_VFORK> is set, the execution of the calling process is suspended "
"until the child releases its virtual memory resources via a call to "
"B<execve>(2)  or B<_exit>(2)  (as with B<vfork>(2))."
msgstr ""
"Si le bit B<CLONE_VFORK> est actif, l'exécution du processus appelant est "
"suspendue jusqu'à ce que l'enfant libère ses ressources de mémoire virtuelle "
"par un appel B<execve>(2) ou B<_exit>(2) (comme avec B<vfork>(2))."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"If B<CLONE_VFORK> is not set, then both the calling process and the child "
"are schedulable after the call, and an application should not rely on "
"execution occurring in any particular order."
msgstr ""
"Si B<CLONE_VFORK> n'est pas indiqué, alors les deux processus sont "
"ordonnancés à partir de la fin de l'appel, et l'application ne devrait pas "
"considérer que l'ordre d'exécution est déterminé dans un ordre particulier."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_VM> (since Linux 2.0)"
msgstr "B<CLONE_VM> (depuis Linux 2.0)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"If B<CLONE_VM> is set, the calling process and the child process run in the "
"same memory space.  In particular, memory writes performed by the calling "
"process or by the child process are also visible in the other process.  "
"Moreover, any memory mapping or unmapping performed with B<mmap>(2)  or "
"B<munmap>(2)  by the child or calling process also affects the other process."
msgstr ""
"Si le bit B<CLONE_VM> est actif, le processus appelant et le processus "
"enfant s'exécutent dans le même espace mémoire. En particulier, les "
"écritures en mémoire effectuées par l'un des processus sont visibles par "
"l'autre. De même toute projection en mémoire, ou toute suppression de "
"projection, effectuée avec B<mmap>(2) ou B<munmap>(2) par l'un des processus "
"affectera également l'autre processus."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"If B<CLONE_VM> is not set, the child process runs in a separate copy of the "
"memory space of the calling process at the time of the clone call.  Memory "
"writes or file mappings/unmappings performed by one of the processes do not "
"affect the other, as with B<fork>(2)."
msgstr ""
"Si B<CLONE_VM> n'est pas actif, le processus enfant utilisera une copie "
"distincte de l'espace mémoire de l'appelant au moment de l'appel clone. Les "
"écritures ou les associations/désassociations de fichiers en mémoire "
"effectuées par un processus n'affectent pas l'autre processus, comme cela se "
"passe avec B<fork>(2)."

#. type: Plain text
#: archlinux debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-tumbleweed
#, fuzzy
#| msgid ""
#| "If the B<CLONE_VM> flag is specified and the B<CLONE_VM> flag is not "
#| "specified, then any alternate signal stack that was established by "
#| "B<sigaltstack>(2)  is cleared in the child process."
msgid ""
"If the B<CLONE_VM> flag is specified and the B<CLONE_VFORK> flag is not "
"specified, then any alternate signal stack that was established by "
"B<sigaltstack>(2)  is cleared in the child process."
msgstr ""
"Si l'attribut B<CLONE_VM> est indiqué et si l'attribut B<CLONE_VM> ne l'est "
"pas, toute autre pile de signal mise en place par B<sigaltstack>(2) sera "
"vidée dans le processus enfant."

#. type: SH
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "RETURN VALUE"
msgstr "VALEUR RENVOYÉE"

#.  gettid(2) returns current->pid;
#.  getpid(2) returns current->tgid;
#. type: Plain text
#: archlinux debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-tumbleweed
#, fuzzy
#| msgid ""
#| "On success, the thread ID of the child process is returned in the "
#| "caller's thread of execution.  On failure, -1 is returned in the caller's "
#| "context, no child process will be created, and I<errno> will be set "
#| "appropriately."
msgid ""
"On success, the thread ID of the child process is returned in the caller's "
"thread of execution.  On failure, -1 is returned in the caller's context, no "
"child process is created, and I<errno> is set to indicate the error."
msgstr ""
"En cas de réussite, le TID du processus enfant est renvoyé dans le thread "
"d'exécution de l'appelant. En cas d'échec, B<-1> est renvoyé dans le "
"contexte de l'appelant, aucun enfant n'est créé, et I<errno> contiendra le "
"code d'erreur."

#. type: SH
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "ERRORS"
msgstr "ERREURS"

#. type: TP
#: archlinux
#, fuzzy, no-wrap
#| msgid "B<EEXIST> (B<clone3>() only)"
msgid "B<EACCES> (B<clone3>() only)"
msgstr "B<EEXIST> (B<clone3>() seulement)"

#. type: Plain text
#: archlinux
#, fuzzy
#| msgid ""
#| "B<CLONE_INTO_CGROUP> was specified in I<cl_args.flags>, but the file "
#| "descriptor specified in I<cl_args.cgroup> refers to a version 2 cgroup "
#| "that is in the I<domain invalid> state."
msgid ""
"B<CLONE_INTO_CGROUP> was specified in I<cl_args.flags>, but the restrictions "
"(described in B<cgroups>(7))  on placing the child process into the version "
"2 cgroup referred to by I<cl_args.cgroup> are not met."
msgstr ""
"B<CLONE_INTO_CGROUP> était indiqué dans I<cl_args.flags>, mais le "
"descripteur de fichier indiqué dans I<cl_args.cgroup> se rapporte à un "
"cgroup version 2 dont l'état est I<domain invalid>."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<EAGAIN>"
msgstr "B<EAGAIN>"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid "Too many processes are already running; see B<fork>(2)."
msgstr "Trop de processus en cours d'exécution. Consultez B<fork>(2)."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "B<EBUSY> (B<clone3>() only)"
msgstr "B<EBUSY> (B<clone3>() seulement)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"B<CLONE_INTO_CGROUP> was specified in I<cl_args.flags>, but the file "
"descriptor specified in I<cl_args.cgroup> refers to a version 2 cgroup in "
"which a domain controller is enabled."
msgstr ""
"B<CLONE_INTO_CGROUP> était indiqué dans I<cl_args.flags>, mais le "
"descripteur de fichier indiqué dans I<cl_args.cgroup> se rapporte à un "
"cgroup version 2 où un contrôleur de domaine est activé."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "B<EEXIST> (B<clone3>() only)"
msgstr "B<EEXIST> (B<clone3>() seulement)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"One (or more) of the PIDs specified in I<set_tid> already exists in the "
"corresponding PID namespace."
msgstr ""
"Un (ou plusieurs) PID indiqué dans le I<set_tid> existe déjà dans l'espace "
"de noms PID correspondant."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<EINVAL>"
msgstr "B<EINVAL>"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"Both B<CLONE_SIGHAND> and B<CLONE_CLEAR_SIGHAND> were specified in the "
"I<flags> mask."
msgstr ""
"Tant B<CLONE_SIGHAND> que B<CLONE_CLEAR_SIGHAND> ont été indiquées dans le "
"masque I<flags>."

#.  Precisely: Linux 2.6.0-test6
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"B<CLONE_SIGHAND> was specified in the I<flags> mask, but B<CLONE_VM> was "
"not.  (Since Linux 2.6.0.)"
msgstr ""
"B<CLONE_SIGHAND> a été spécifié dans le masque I<flags>, mais pas "
"B<CLONE_VM> (depuis Linux 2.6.0)."

#.  .TP
#.  .B EINVAL
#.  Precisely one of
#.  .B CLONE_DETACHED
#.  and
#.  .B CLONE_THREAD
#.  was specified.
#.  (Since Linux 2.6.0-test6.)
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"B<CLONE_THREAD> was specified in the I<flags> mask, but B<CLONE_SIGHAND> was "
"not.  (Since Linux 2.5.35.)"
msgstr ""
"B<CLONE_THREAD> a été spécifié dans le masque I<flags>, mais pas "
"B<CLONE_SIGHAND>  (depuis Linux 2.5.35)."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"B<CLONE_THREAD> was specified in the I<flags> mask, but the current process "
"previously called B<unshare>(2)  with the B<CLONE_NEWPID> flag or used "
"B<setns>(2)  to reassociate itself with a PID namespace."
msgstr ""
"B<CLONE_THREAD> a été indiqué dans le masque I<flags> mais le processus "
"actuel avait appelé B<unshare>(2) avec l'attribut B<CLONE_NEWPID> ou il "
"utilisait B<setns>(2) pour se réassocier à l'espace de noms PID."

#.  commit e66eded8309ebf679d3d3c1f5820d1f2ca332c71
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"Both B<CLONE_FS> and B<CLONE_NEWNS> were specified in the I<flags> mask."
msgstr ""
"Tant B<CLONE_FS> que B<CLONE_NEWNS> ont été indiqués dans le masque I<flags>."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<EINVAL> (since Linux 3.9)"
msgstr "B<EINVAL> (depuis Linux 3.9)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"Both B<CLONE_NEWUSER> and B<CLONE_FS> were specified in the I<flags> mask."
msgstr ""
"Tant B<CLONE_NEWUSER> que B<CLONE_FS> ont été indiqués dans le masque "
"I<flags>."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"Both B<CLONE_NEWIPC> and B<CLONE_SYSVSEM> were specified in the I<flags> "
"mask."
msgstr ""
"Tant B<CLONE_NEWIPC> que B<CLONE_SYSVSEM> ont été indiqués dans le masque "
"I<flags>."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"One (or both) of B<CLONE_NEWPID> or B<CLONE_NEWUSER> and one (or both) of "
"B<CLONE_THREAD> or B<CLONE_PARENT> were specified in the I<flags> mask."
msgstr ""
"B<CLONE_NEWPID> ou B<CLONE_NEWUSER>, et B<CLONE_THREAD> ou B<CLONE_PARENT>, "
"ont été indiqués, seuls ou ensemble, dans le masque I<flags>."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "B<EINVAL> (since Linux 2.6.32)"
msgstr "B<EINVAL> (depuis Linux 2.6.32)"

#.  commit 123be07b0b399670a7cc3d82fef0cb4f93ef885c
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid "B<CLONE_PARENT> was specified, and the caller is an init process."
msgstr ""
"B<CLONE_PARENT> a été spécifié et l'appelant est un processus "
"d'initialisation."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"Returned by the glibc B<clone>()  wrapper function when I<fn> or I<stack> is "
"specified as NULL."
msgstr ""
"Renvoyée par l'enveloppe glibc de B<clone>() quand I<fn> ou I<stack> valent "
"NULL."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"B<CLONE_NEWIPC> was specified in the I<flags> mask, but the kernel was not "
"configured with the B<CONFIG_SYSVIPC> and B<CONFIG_IPC_NS> options."
msgstr ""
"B<CLONE_NEWIPC> a été spécifié dans le masque I<flags>, mais le noyau n'a "
"pas été configuré avec les options B<CONFIG_SYSVIPC> et B<CONFIG_IPC_NS>."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"B<CLONE_NEWNET> was specified in the I<flags> mask, but the kernel was not "
"configured with the B<CONFIG_NET_NS> option."
msgstr ""
"B<CLONE_NEWNET> a été spécifié dans le masque I<flags>, mais le noyau n'a "
"pas été configuré avec l'option B<CONFIG_NET_NS>."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"B<CLONE_NEWPID> was specified in the I<flags> mask, but the kernel was not "
"configured with the B<CONFIG_PID_NS> option."
msgstr ""
"B<CLONE_NEWPID> a été spécifié dans le masque I<flags>, mais le noyau n'a "
"pas été configuré avec l'option B<CONFIG_PID_NS>."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"B<CLONE_NEWUSER> was specified in the I<flags> mask, but the kernel was not "
"configured with the B<CONFIG_USER_NS> option."
msgstr ""
"B<CLONE_NEWUSER> a été spécifié dans le masque I<flags>, mais le noyau n'a "
"pas été configuré avec l'option B<CONFIG_USER_NS>."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"B<CLONE_NEWUTS> was specified in the I<flags> mask, but the kernel was not "
"configured with the B<CONFIG_UTS_NS> option."
msgstr ""
"B<CLONE_NEWUTS> a été spécifié dans le masque I<flags>, mais le noyau n'a "
"pas été configuré avec l'option B<CONFIG_UTS_NS>."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"I<stack> is not aligned to a suitable boundary for this architecture.  For "
"example, on aarch64, I<stack> must be a multiple of 16."
msgstr ""
"I<stack> n'est pas alignée sur une limite adaptée à cette architecture. Par "
"exemple, sur arch64, I<stack> doit être un multiple de 16."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "B<EINVAL> (B<clone3>() only)"
msgstr "B<EINVAL> (B<clone3>() seulement)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid "B<CLONE_DETACHED> was specified in the I<flags> mask."
msgstr "B<CLONE_DETACHED> a été spécifié dans le masque I<flags>."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "B<EINVAL> (B<clone>() only)"
msgstr "B<EINVAL> (B<clone>() seulement)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"B<CLONE_PIDFD> was specified together with B<CLONE_DETACHED> in the I<flags> "
"mask."
msgstr ""
"B<CLONE_PIDFD> a été indiqué avec B<CLONE_DETACHED> dans le masque I<flags>."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"B<CLONE_PIDFD> was specified together with B<CLONE_THREAD> in the I<flags> "
"mask."
msgstr ""
"B<CLONE_PIDFD> a été indiqué avec B<CLONE_THREAD> dans le masque I<flags>."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "B<EINVAL >(B<clone>() only)"
msgstr "B<EINVAL >(B<clone>() seulement)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"B<CLONE_PIDFD> was specified together with B<CLONE_PARENT_SETTID> in the "
"I<flags> mask."
msgstr ""
"B<CLONE_PIDFD> a été indiqué avec B<CLONE_PARENT_SETTID> dans le masque "
"I<flags>."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid "I<set_tid_size> is greater than the number of nested PID namespaces."
msgstr ""
"I<set_tid_size> est supérieur au nombre de niveaux dans l'espace de noms du "
"PID."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid "One of the PIDs specified in I<set_tid> was an invalid."
msgstr "Un des PID indiqué dans I<set_tid> n'était pas valable."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "B<EINVAL> (AArch64 only, Linux 4.6 and earlier)"
msgstr "B<EINVAL> (AArch64 seulement, Linux 4.6 et antérieur)"

#. type: Plain text
#: archlinux debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-tumbleweed
#, fuzzy
#| msgid "I<stack> was not aligned to a 126-bit boundary."
msgid "I<stack> was not aligned to a 128-bit boundary."
msgstr "I<stack> n'était pas aligné sur une limite de 126 bits."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<ENOMEM>"
msgstr "B<ENOMEM>"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"Cannot allocate sufficient memory to allocate a task structure for the "
"child, or to copy those parts of the caller's context that need to be copied."
msgstr ""
"Pas assez de mémoire pour copier les parties du contexte du processus "
"appelant qui doivent être dupliquées, ou pour allouer une structure de tâche "
"pour le processus enfant."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<ENOSPC> (since Linux 3.7)"
msgstr "B<ENOSPC> (depuis Linux 3.7)"

#.  commit f2302505775fd13ba93f034206f1e2a587017929
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"B<CLONE_NEWPID> was specified in the I<flags> mask, but the limit on the "
"nesting depth of PID namespaces would have been exceeded; see "
"B<pid_namespaces>(7)."
msgstr ""
"B<CLONE_NEWPID> a été spécifié dans le masque I<flags>, et l'appel "
"provoquerait un dépassement de la limite du nombre maximal d'espaces de noms "
"utilisateur imbriqués. Consultez B<pid_namespaces>(7)."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<ENOSPC> (since Linux 4.9; beforehand B<EUSERS>)"
msgstr "B<ENOSPC> (depuis Linux 4.9 ; auparavant B<EUSERS>)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"B<CLONE_NEWUSER> was specified in the I<flags> mask, and the call would "
"cause the limit on the number of nested user namespaces to be exceeded.  See "
"B<user_namespaces>(7)."
msgstr ""
"B<CLONE_NEWUSER> a été spécifié dans le masque I<flags>, et l'appel "
"provoquerait un dépassement de la limite du nombre maximal d'espaces de noms "
"utilisateur imbriqués. Consultez B<user_namespaces>(7)."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"From Linux 3.11 to Linux 4.8, the error diagnosed in this case was B<EUSERS>."
msgstr ""
"De Linux 3.11 à Linux 4.8, l'erreur indiquée dans ce cas était B<EUSERS>."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<ENOSPC> (since Linux 4.9)"
msgstr "B<ENOSPC> (depuis Linux 4.9)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"One of the values in the I<flags> mask specified the creation of a new user "
"namespace, but doing so would have caused the limit defined by the "
"corresponding file in I</proc/sys/user> to be exceeded.  For further "
"details, see B<namespaces>(7)."
msgstr ""
"Une des valeurs dans le masque I<flags> indiquait de créer un nouvel espace "
"de noms utilisateur, mais cela aurait provoqué un dépassement de la limite "
"définie par le fichier correspondant dans I</proc/sys/user>. Pour plus de "
"détails, voir B<namespaces>(7)."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "B<EOPNOTSUPP> (B<clone3>() only)"
msgstr "B<EOPNOTSUPP> (B<clone3>() seulement)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"B<CLONE_INTO_CGROUP> was specified in I<cl_args.flags>, but the file "
"descriptor specified in I<cl_args.cgroup> refers to a version 2 cgroup that "
"is in the I<domain invalid> state."
msgstr ""
"B<CLONE_INTO_CGROUP> était indiqué dans I<cl_args.flags>, mais le "
"descripteur de fichier indiqué dans I<cl_args.cgroup> se rapporte à un "
"cgroup version 2 dont l'état est I<domain invalid>."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<EPERM>"
msgstr "B<EPERM>"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"B<CLONE_NEWCGROUP>, B<CLONE_NEWIPC>, B<CLONE_NEWNET>, B<CLONE_NEWNS>, "
"B<CLONE_NEWPID>, or B<CLONE_NEWUTS> was specified by an unprivileged process "
"(process without B<CAP_SYS_ADMIN>)."
msgstr ""
"B<CLONE_NEWCGROUP>, B<CLONE_NEWIPC>, B<CLONE_NEWNET>, B<CLONE_NEWNS>, "
"B<CLONE_NEWPID>, ou B<CLONE_NEWUTS> a été spécifié par un processus non "
"privilégié (processus sans B<CAP_SYS_ADMIN>)."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"B<CLONE_PID> was specified by a process other than process 0.  (This error "
"occurs only on Linux 2.5.15 and earlier.)"
msgstr ""
"B<CLONE_PID> a été spécifié par un processus autre que le processus 0 (cette "
"erreur n'arrive que sur Linux 2.5.15 et antérieurs)."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"B<CLONE_NEWUSER> was specified in the I<flags> mask, but either the "
"effective user ID or the effective group ID of the caller does not have a "
"mapping in the parent namespace (see B<user_namespaces>(7))."
msgstr ""
"B<CLONE_NEWUSER> a été spécifié dans le masque I<flags>, mais l'identifiant "
"utilisateur effectif ou l'identifiant de groupe effectif de l'appelant n'a "
"pas de correspondance dans l'espace de noms parent (consultez "
"B<user_namespaces>(7))."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<EPERM> (since Linux 3.9)"
msgstr "B<EPERM> (depuis Linux 3.9)"

#.  commit 3151527ee007b73a0ebd296010f1c0454a919c7d
#.  FIXME What is the rationale for this restriction?
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"B<CLONE_NEWUSER> was specified in the I<flags> mask and the caller is in a "
"chroot environment (i.e., the caller's root directory does not match the "
"root directory of the mount namespace in which it resides)."
msgstr ""
"B<CLONE_NEWUSER> a été spécifié dans le masque I<flags> et l'appelant se "
"trouve dans un environnement chroot (c'est-à-dire que le répertoire racine "
"de l'appelant ne correspond pas au répertoire racine de l'espace de noms "
"montage dans lequel il se trouve)."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "B<EPERM> (B<clone3>() only)"
msgstr "B<EPERM> (B<clone3>() seulement)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"I<set_tid_size> was greater than zero, and the caller lacks the "
"B<CAP_SYS_ADMIN> capability in one or more of the user namespaces that own "
"the corresponding PID namespaces."
msgstr ""
"I<set_tid_size> était supérieur à zéro et l'appelant n'a pas la possibilité "
"B<CAP_SYS_ADMIN> dans un ou plusieurs des espaces de noms utilisateur qui "
"appartiennent aux espaces de noms PID correspondants."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<ERESTARTNOINTR> (since Linux 2.6.17)"
msgstr "B<ERESTARTNOINTR> (depuis Linux 2.6.17)"

#.  commit 4a2c7a7837da1b91468e50426066d988050e4d56
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"System call was interrupted by a signal and will be restarted.  (This can be "
"seen only during a trace.)"
msgstr ""
"L'appel système a été interrompu par un signal et va être redémarré (cela "
"n'est visible qu'à l'occasion d'un B<trace>())."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<EUSERS> (Linux 3.11 to Linux 4.8)"
msgstr "B<EUSERS> (Linux 3.11 à Linux 4.8)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"B<CLONE_NEWUSER> was specified in the I<flags> mask, and the limit on the "
"number of nested user namespaces would be exceeded.  See the discussion of "
"the B<ENOSPC> error above."
msgstr ""
"B<CLONE_NEWUSER> a été spécifié dans le masque I<flags>, et l'appel "
"provoquerait un dépassement de la limite du nombre maximal d'espaces de noms "
"utilisateur imbriqués. Voir le point sur l'erreur B<ENOSPC> ci-dessus."

#. type: SH
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "VERSIONS"
msgstr "VERSIONS"

#.  There is no entry for
#.  .BR clone ()
#.  in libc5.
#.  glibc2 provides
#.  .BR clone ()
#.  as described in this manual page.
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid "The B<clone3>()  system call first appeared in Linux 5.3."
msgstr ""
"L'appel système B<clone3>() est apparu pour la première fois dans Linux 5.3."

#. type: SH
#: archlinux
#, no-wrap
msgid "STANDARDS"
msgstr "STANDARDS"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"These system calls are Linux-specific and should not be used in programs "
"intended to be portable."
msgstr ""
"Ces appels système sont spécifiques à Linux et ne doivent pas être utilisés "
"dans des programmes conçus pour être portables."

#. type: SH
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "NOTES"
msgstr "NOTES"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"One use of these systems calls is to implement threads: multiple flows of "
"control in a program that run concurrently in a shared address space."
msgstr ""
"Une utilisation de ces appels systèmes consiste à implémenter des "
"threads\\ : un programme est scindé en plusieurs lignes de contrôle, "
"s'exécutant simultanément dans un espace mémoire partagée."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"Note that the glibc B<clone>()  wrapper function makes some changes in the "
"memory pointed to by I<stack> (changes required to set the stack up "
"correctly for the child)  I<before> invoking the B<clone>()  system call.  "
"So, in cases where B<clone>()  is used to recursively create children, do "
"not use the buffer employed for the parent's stack as the stack of the child."
msgstr ""
"Remarquez que la fonction enveloppe B<clone>() de la glibc effectue des "
"changements dans la mémoire vers laquelle pointe I<stack> (ce sont des "
"changements nécessaires pour positionner correctement la pile pour l'enfant) "
"I<avant> de recourir à l'appel système B<clone>(). Dès lors, lorsque "
"B<clone>() est utilisé pour créer des enfants de manière récursive, "
"n'utilisez pas le tampon servant à la pile du parent en tant que pile de "
"l'enfant."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"The B<kcmp>(2)  system call can be used to test whether two processes share "
"various resources such as a file descriptor table, System V semaphore undo "
"operations, or a virtual address space."
msgstr ""
"L'appel système  B<kcmp>(2) peut être utilisé pour vérifier si deux "
"processus partagent des ressources, telles qu'une table de descripteurs de "
"fichier, des opérations Annuler de sémaphore sur System V ou un espace "
"d'adressage virtuel."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"Handlers registered using B<pthread_atfork>(3)  are not executed during a "
"clone call."
msgstr ""
"Les gestionnaires enregistrés en utilisant B<pthread_atfork>(3) ne sont pas "
"exécutés pendant un appel clone."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"In the Linux 2.4.x series, B<CLONE_THREAD> generally does not make the "
"parent of the new thread the same as the parent of the calling process.  "
"However, for kernel versions 2.4.7 to 2.4.18 the B<CLONE_THREAD> flag "
"implied the B<CLONE_PARENT> flag (as in Linux 2.6.0 and later)."
msgstr ""
"Dans les noyaux 2.4.x, B<CLONE_THREAD> ne fait en général pas du processus "
"parent du nouveau thread un processus identique au parent du processus "
"appelant. Cependant, pour les versions 2.4.7 à 2.4.18 du noyau, l'attribut "
"B<CLONE_THREAD> impliquait B<CLONE_PARENT> (de même qu'avec les noyaux 2.6.0 "
"et supérieurs)."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"On i386, B<clone>()  should not be called through vsyscall, but directly "
"through I<int $0x80>."
msgstr ""
"Sur i386, B<clone>() ne devrait pas être appelé via vsyscall, mais "
"directement en utilisant I<int $0x80>."

#. type: SS
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "C library/kernel differences"
msgstr "différences entre bibliothèque C et noyau"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"The raw B<clone>()  system call corresponds more closely to B<fork>(2)  in "
"that execution in the child continues from the point of the call.  As such, "
"the I<fn> and I<arg> arguments of the B<clone>()  wrapper function are "
"omitted."
msgstr ""
"L'appel système B<clone> brut ressemble plus à B<fork>(2), en ceci que "
"l'exécution dans le processus enfant continue à partir du point d'appel. À "
"ce titre, les arguments I<fn> et I<arg> de la fonction enveloppe de "
"B<clone>() sont omis."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"In contrast to the glibc wrapper, the raw B<clone>()  system call accepts "
"NULL as a I<stack> argument (and B<clone3>()  likewise allows I<cl_args."
"stack> to be NULL).  In this case, the child uses a duplicate of the "
"parent's stack.  (Copy-on-write semantics ensure that the child gets "
"separate copies of stack pages when either process modifies the stack.)  In "
"this case, for correct operation, the B<CLONE_VM> option should not be "
"specified.  (If the child I<shares> the parent's memory because of the use "
"of the B<CLONE_VM> flag, then no copy-on-write duplication occurs and chaos "
"is likely to result.)"
msgstr ""
"Contrairement à l'enveloppe de la glibc, l'appel système brut B<clone>() "
"accepte NULL en paramètre de I<stack> (et de même, B<clone3>() permet à "
"I<cl_args.stack> d'être NULL). Dans ce cas l'enfant utilise une copie de la "
"pile du parent (la sémantique de copie-en-écriture assure que l'enfant "
"recevra une copie indépendante des pages de la pile dès qu'un des deux "
"processus la modifiera). Pour que cela fonctionne, il faut naturellement que "
"B<CLONE_VM> ne soit pas présent (si l'enfant I<partage> la mémoire du parent "
"du fait d'une utilisation de B<CLONE_VM>, aucune duplication via la copie-en-"
"écriture ne se produit et il peut s'ensuivre probablement un grand chaos)."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"The order of the arguments also differs in the raw system call, and there "
"are variations in the arguments across architectures, as detailed in the "
"following paragraphs."
msgstr ""
"L'ordre des paramètres change aussi dans l'appel système brut et des "
"variations existent dans les paramètres en fonction des architectures, comme "
"indiqué dans les paragraphes suivants."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"The raw system call interface on x86-64 and some other architectures "
"(including sh, tile, and alpha) is:"
msgstr ""
"L'interface de l'appel système brut sur des architectures x86-64 et quelques "
"autres (dont sh, tile et alpha), est :"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid ""
"B<long clone(unsigned long >I<flags>B<, void *>I<stack>B<,>\n"
"B<           int *>I<parent_tid>B<, int *>I<child_tid>B<,>\n"
"B<           unsigned long >I<tls>B<);>\n"
msgstr ""
"B<long clone(unsigned long >I<flags>B<, void *>I<stack>B<,>\n"
"B<           int *>I<parent_tid>B<, int *>I<child_tid>B<,>\n"
"B<           unsigned long >I<tls>B<);>\n"

#.  CONFIG_CLONE_BACKWARDS
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"On x86-32, and several other common architectures (including score, ARM, ARM "
"64, PA-RISC, arc, Power PC, xtensa, and MIPS), the order of the last two "
"arguments is reversed:"
msgstr ""
"Sur x86-32 et d'autres architectures classiques (dont score, ARM, ARM 64, PA-"
"RISC, arc, Power PC, xtensa et MIPS), l'ordre des deux derniers paramètres "
"est inversé :"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid ""
"B<long clone(unsigned long >I<flags>B<, void *>I<stack>B<,>\n"
"B<          int *>I<parent_tid>B<, unsigned long >I<tls>B<,>\n"
"B<          int *>I<child_tid>B<);>\n"
msgstr ""
"B<long clone(unsigned long >I<flags>B<, void *>I<stack>B<,>\n"
"B<          int *>I<parent_tid>B<, unsigned long >I<tls>B<,>\n"
"B<          int *>I<child_tid>B<);>\n"

#.  CONFIG_CLONE_BACKWARDS2
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"On the cris and s390 architectures, the order of the first two arguments is "
"reversed:"
msgstr ""
"Sur les architectures cris et s390, l'ordre des deux premiers paramètres est "
"inversé :"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid ""
"B<long clone(void *>I<stack>B<, unsigned long >I<flags>B<,>\n"
"B<           int *>I<parent_tid>B<, int *>I<child_tid>B<,>\n"
"B<           unsigned long >I<tls>B<);>\n"
msgstr ""
"B<long clone(void *>I<stack>B<, unsigned long >I<flags>B<,>\n"
"B<           int *>I<parent_tid>B<, int *>I<child_tid>B<,>\n"
"B<           unsigned long >I<tls>B<);>\n"

#.  CONFIG_CLONE_BACKWARDS3
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid "On the microblaze architecture, an additional argument is supplied:"
msgstr "Sur l'architecture microblaze, il existe un paramètre supplémentaire :"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid ""
"B<long clone(unsigned long >I<flags>B<, void *>I<stack>B<,>\n"
"B<           int >I<stack_size>B<,>         /* Size of stack */\n"
"B<           int *>I<parent_tid>B<, int *>I<child_tid>B<,>\n"
"B<           unsigned long >I<tls>B<);>\n"
msgstr ""
"B<long clone(unsigned long >I<flags>B<, void *>I<stack>B<,>\n"
"B<           int >I<stack_size>B<,>         /* Taille de la pile */\n"
"B<           int *>I<parent_tid>B<, int *>I<child_tid>B<,>\n"
"B<           unsigned long >I<tls>B<);>\n"

#. type: SS
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "blackfin, m68k, and sparc"
msgstr "blackfin, m68k, et sparc"

#.  Mike Frysinger noted in a 2013 mail:
#.      these arches don't define __ARCH_WANT_SYS_CLONE:
#.      blackfin ia64 m68k sparc
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"The argument-passing conventions on blackfin, m68k, and sparc are different "
"from the descriptions above.  For details, see the kernel (and glibc) source."
msgstr ""
"Les conventions de passage des arguments sur blackfin, m68k et sparc sont "
"différentes de celles décrites précédemment. Pour plus de détails, se "
"référer aux sources du noyau (et de la glibc)."

#. type: SS
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "ia64"
msgstr "ia64"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid "On ia64, a different interface is used:"
msgstr "Sur ia64, une interface différente est utilisée\\ :"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid ""
"B<int __clone2(int (*>I<fn>B<)(void *),>\n"
"B<             void *>I<stack_base>B<, size_t >I<stack_size>B<,>\n"
"B<             int >I<flags>B<, void *>I<arg>B<, ...>\n"
"B<          /* pid_t *>I<parent_tid>B<, struct user_desc *>I<tls>B<,>\n"
"B<             pid_t *>I<child_tid>B< */ );>\n"
msgstr ""
"B<int __clone2(int (*>I<fn>B<)(void *),>\n"
"B<             void *>I<stack_base>B<, size_t >I<stack_size>B<,>\n"
"B<             int >I<flags>B<, void *>I<arg>B<, ...>\n"
"B<          /* pid_t *>I<parent_tid>B<, struct user_desc *>I<tls>B<,>\n"
"B<             pid_t *>I<child_tid>B< */ );>\n"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"The prototype shown above is for the glibc wrapper function; for the system "
"call itself, the prototype can be described as follows (it is identical to "
"the B<clone>()  prototype on microblaze):"
msgstr ""
"Le prototype présenté ci-dessus vaut pour la fonction enveloppe de la "
"glibc ; pour l'appel système lui-même, il peut être décrit comme suit (il "
"est identique au prototype B<clone>() sur microblaze) :"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid ""
"B<long clone2(unsigned long >I<flags>B<, void *>I<stack_base>B<,>\n"
"B<            int >I<stack_size>B<,>         /* Size of stack */\n"
"B<            int *>I<parent_tid>B<, int *>I<child_tid>B<,>\n"
"B<            unsigned long >I<tls>B<);>\n"
msgstr ""
"B<long clone2(unsigned long >I<flags>B<, void *>I<stack_base>B<,>\n"
"B<            int >I<stack_size>B<,>         /* Taille de la pile */\n"
"B<            int *>I<parent_tid>B<, int *>I<child_tid>B<,>\n"
"B<            unsigned long >I<tls>B<);>\n"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"B<__clone2>()  operates in the same way as B<clone>(), except that "
"I<stack_base> points to the lowest address of the child's stack area, and "
"I<stack_size> specifies the size of the stack pointed to by I<stack_base>."
msgstr ""
"B<__clone2>() fonctionne comme B<clone>(), sauf que I<stack_base> pointe sur "
"la plus petite adresse de la pile de l'enfant et que I<stack_size> indique "
"la taille de la pile sur laquelle pointe I<stack_base>."

#. type: SS
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "Linux 2.4 and earlier"
msgstr "Linux 2.4 et antérieurs"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"In Linux 2.4 and earlier, B<clone>()  does not take arguments I<parent_tid>, "
"I<tls>, and I<child_tid>."
msgstr ""
"Sous Linux\\ 2.4 et plus anciens, B<clone>() ne prend pas les paramètres "
"I<parent_tid>, I<tls>, et I<child_tid>."

#. type: SH
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "BUGS"
msgstr "BOGUES"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"GNU C library versions 2.3.4 up to and including 2.24 contained a wrapper "
"function for B<getpid>(2)  that performed caching of PIDs.  This caching "
"relied on support in the glibc wrapper for B<clone>(), but limitations in "
"the implementation meant that the cache was not up to date in some "
"circumstances.  In particular, if a signal was delivered to the child "
"immediately after the B<clone>()  call, then a call to B<getpid>(2)  in a "
"handler for the signal could return the PID of the calling process (\"the "
"parent\"), if the clone wrapper had not yet had a chance to update the PID "
"cache in the child.  (This discussion ignores the case where the child was "
"created using B<CLONE_THREAD>, when B<getpid>(2)  I<should> return the same "
"value in the child and in the process that called B<clone>(), since the "
"caller and the child are in the same thread group.  The stale-cache problem "
"also does not occur if the I<flags> argument includes B<CLONE_VM>.)  To get "
"the truth, it was sometimes necessary to use code such as the following:"
msgstr ""
"Les versions de la bibliothèque C GNU jusqu'à la 2.24 comprise contenaient "
"une fonction enveloppe pour B<getpid>(2) qui effectuait un cache des PID. Ce "
"cache nécessitait une prise en charge par l'enveloppe de B<clone>() de la "
"glibc, mais des limites dans l'implémentation faisaient que le cache pouvait "
"ne pas être à jour sous certaines circonstances. En particulier, si un "
"signal était distribué à un enfant juste après l'appel à B<clone>(), alors "
"un appel à B<getpid>(2) dans le gestionnaire de signaux du signal pouvait "
"renvoyer le PID du processus appelant (le parent), si l'enveloppe de clone "
"n'avait toujours pas eu le temps de mettre le cache de PID à jour pour "
"l'enfant. (Ce point ignore le cas où l'enfant a été créé en utilisant "
"B<CLONE_THREAD>, quand B<getpid>(2) I<doit> renvoyer la même valeur pour "
"l'enfant et pour le processus qui a appelé B<clone>(), puisque l'appelant et "
"l'enfant se trouvent dans le même groupe de threads. Ce problème de cache "
"n'apparaît pas non plus si le paramètre I<flags> contient B<CLONE_VM>.) Pour "
"obtenir la véritable valeur, il peut être nécessaire d'utiliser quelque "
"chose comme ceci :"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "#include E<lt>syscall.hE<gt>\n"
msgstr "#include E<lt>syscall.hE<gt>\n"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "pid_t mypid;\n"
msgstr "pid_t mypid;\n"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "mypid = syscall(SYS_getpid);\n"
msgstr "mypid = syscall(SYS_getpid);\n"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"Because of the stale-cache problem, as well as other problems noted in "
"B<getpid>(2), the PID caching feature was removed in glibc 2.25."
msgstr ""
"Suite à un problème de cache ancien, ainsi qu'à d'autres problèmes traités "
"dans B<getpid>(2), la fonctionnalité de mise en cache du PID a été supprimée "
"de la glibc 2.25."

#. type: SH
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "EXAMPLES"
msgstr "EXEMPLES"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"The following program demonstrates the use of B<clone>()  to create a child "
"process that executes in a separate UTS namespace.  The child changes the "
"hostname in its UTS namespace.  Both parent and child then display the "
"system hostname, making it possible to see that the hostname differs in the "
"UTS namespaces of the parent and child.  For an example of the use of this "
"program, see B<setns>(2)."
msgstr ""
"Le programme suivant décrit l'usage de B<clone>() dans le but de créer un "
"processus enfant qui s'exécute dans un espace de noms UTS distinct. Le "
"processus enfant change le nom d'hôte (hostname) dans son propre espace UTS. "
"Les processus parent et enfant affichent chacun le nom d'hôte qui leur "
"correspond, permettant ainsi de constater la différence des noms d'hôtes "
"dans leurs espaces de noms UTS respectifs. Pour un exemple d’utilisation de "
"ce programme, consultez B<setns>(2)."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"Within the sample program, we allocate the memory that is to be used for the "
"child's stack using B<mmap>(2)  rather than B<malloc>(3)  for the following "
"reasons:"
msgstr ""
"Dans le programme d'exemple, nous allouons la mémoire qui doit être utilisée "
"pour la pile de l'enfant en utilisant B<mmap>(2) au lieu de B<malloc>(3) "
"pour les raisons suivantes :"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"B<mmap>(2)  allocates a block of memory that starts on a page boundary and "
"is a multiple of the page size.  This is useful if we want to establish a "
"guard page (a page with protection B<PROT_NONE>)  at the end of the stack "
"using B<mprotect>(2)."
msgstr ""
"B<mmap>(2) alloue un bloc de mémoire commençant à la limite d'une page et "
"multiple de la taille de la page. Cela est utile si on veut établir une page "
"de protection (avec B<PROT_NONE>) à la fin de la pile en utilisant "
"B<mprotect>(2)."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"We can specify the B<MAP_STACK> flag to request a mapping that is suitable "
"for a stack.  For the moment, this flag is a no-op on Linux, but it exists "
"and has effect on some other systems, so we should include it for "
"portability."
msgstr ""
"On peut indiquer l'attribut B<MAP_STACK> pour demander une association "
"adaptée à une pile. Pour le moment, cet attribut n'est pas opérationnel sur "
"Linux, mais il existe et a des effets sur d'autres systèmes, donc on doit "
"l'inclure pour la portabilité."

#. type: SS
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "Program source"
msgstr "Source du programme"

#. type: Plain text
#: archlinux
#, fuzzy, no-wrap
#| msgid ""
#| "#define _GNU_SOURCE\n"
#| "#include E<lt>sys/wait.hE<gt>\n"
#| "#include E<lt>sys/utsname.hE<gt>\n"
#| "#include E<lt>sched.hE<gt>\n"
#| "#include E<lt>string.hE<gt>\n"
#| "#include E<lt>stdint.hE<gt>\n"
#| "#include E<lt>stdio.hE<gt>\n"
#| "#include E<lt>stdlib.hE<gt>\n"
#| "#include E<lt>unistd.hE<gt>\n"
#| "#include E<lt>sys/mman.hE<gt>\n"
msgid ""
"#define _GNU_SOURCE\n"
"#include E<lt>err.hE<gt>\n"
"#include E<lt>sched.hE<gt>\n"
"#include E<lt>signal.hE<gt>\n"
"#include E<lt>stdint.hE<gt>\n"
"#include E<lt>stdio.hE<gt>\n"
"#include E<lt>stdlib.hE<gt>\n"
"#include E<lt>string.hE<gt>\n"
"#include E<lt>sys/mman.hE<gt>\n"
"#include E<lt>sys/utsname.hE<gt>\n"
"#include E<lt>sys/wait.hE<gt>\n"
"#include E<lt>unistd.hE<gt>\n"
msgstr ""
"#define _GNU_SOURCE\n"
"#include E<lt>sys/wait.hE<gt>\n"
"#include E<lt>sys/utsname.hE<gt>\n"
"#include E<lt>sched.hE<gt>\n"
"#include E<lt>string.hE<gt>\n"
"#include E<lt>stdint.hE<gt>\n"
"#include E<lt>stdio.hE<gt>\n"
"#include E<lt>stdlib.hE<gt>\n"
"#include E<lt>unistd.hE<gt>\n"
"#include E<lt>sys/mman.hE<gt>\n"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid ""
"static int              /* Start function for cloned child */\n"
"childFunc(void *arg)\n"
"{\n"
"    struct utsname uts;\n"
msgstr ""
"static int              /* Commencer la fonction pour l'enfant cloné */\n"
"childFunc(void *arg)\n"
"{\n"
"    struct utsname uts;\n"

#. type: Plain text
#: archlinux debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-tumbleweed
#, fuzzy, no-wrap
#| msgid "    /* Change hostname in UTS namespace of child */\n"
msgid "    /* Change hostname in UTS namespace of child. */\n"
msgstr ""
"    /* Modifier le nom d'hôte dans l'espace de noms UTS du\n"
"       processus enfant */\n"

#. type: Plain text
#: archlinux
#, fuzzy, no-wrap
#| msgid ""
#| "    if (sethostname(arg, strlen(arg)) == -1)\n"
#| "        errExit(\"sethostname\");\n"
msgid ""
"    if (sethostname(arg, strlen(arg)) == -1)\n"
"        err(EXIT_FAILURE, \"sethostname\");\n"
msgstr ""
"    if (sethostname(arg, strlen(arg)) == -1)\n"
"        errExit(\"sethostname\");\n"

#. type: Plain text
#: archlinux debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-tumbleweed
#, fuzzy, no-wrap
#| msgid "    /* Retrieve and display hostname */\n"
msgid "    /* Retrieve and display hostname. */\n"
msgstr "    /* Récupérer et afficher le nom d'hôte */\n"

#. type: Plain text
#: archlinux
#, fuzzy, no-wrap
#| msgid ""
#| "    if (uname(&uts) == -1)\n"
#| "        errExit(\"uname\");\n"
#| "    printf(\"uts.nodename in child:  %s\\en\", uts.nodename);\n"
msgid ""
"    if (uname(&uts) == -1)\n"
"        err(EXIT_FAILURE, \"uname\");\n"
"    printf(\"uts.nodename in child:  %s\\en\", uts.nodename);\n"
msgstr ""
"    if (uname(&uts) == -1)\n"
"        errExit(\"uname\");\n"
"    printf(\"uts.nodename dans l'enfant :  %s\\en\", uts.nodename);\n"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid ""
"    /* Keep the namespace open for a while, by sleeping.\n"
"       This allows some experimentation--for example, another\n"
"       process might join the namespace. */\n"
msgstr ""
"    /* Rester en sommeil (fonction sleep) pour conserver l'espace\n"
"       de noms ouvert pendant un moment. Cela permet de réaliser\n"
"       quelques expérimentations — par exemple, un autre processus\n"
"       pourrait rejoindre l'espace de noms. */\n"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "    sleep(200);\n"
msgstr "    sleep(200);\n"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid ""
"    return 0;           /* Child terminates now */\n"
"}\n"
msgstr ""
"    return 0;           /* Le processus enfant se termine à ce moment */\n"
"}\n"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "#define STACK_SIZE (1024 * 1024)    /* Stack size for cloned child */\n"
msgstr ""
"#define STACK_SIZE (1024 * 1024)    /* Taille de la pile pour \n"
"                                       l'enfant cloné */\n"

#. type: Plain text
#: archlinux
#, fuzzy, no-wrap
#| msgid ""
#| "int\n"
#| "main(int argc, char *argv[])\n"
#| "{\n"
#| "    char *stack;                    /* Start of stack buffer */\n"
#| "    char *stackTop;                 /* End of stack buffer */\n"
#| "    pid_t pid;\n"
#| "    struct utsname uts;\n"
msgid ""
"int\n"
"main(int argc, char *argv[])\n"
"{\n"
"    char            *stack;         /* Start of stack buffer */\n"
"    char            *stackTop;      /* End of stack buffer */\n"
"    pid_t           pid;\n"
"    struct utsname  uts;\n"
msgstr ""
"int\n"
"main(int argc, char *argv[])\n"
"{\n"
"    char *stack;                    /* Début du tampon de la pile */\n"
"    char *stackTop;                 /* Fin du tampon de la pile */\n"
"    pid_t pid;\n"
"    struct utsname uts;\n"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid ""
"    if (argc E<lt> 2) {\n"
"        fprintf(stderr, \"Usage: %s E<lt>child-hostnameE<gt>\\en\", argv[0]);\n"
"        exit(EXIT_SUCCESS);\n"
"    }\n"
msgstr ""
"    if (argc E<lt> 2) {\n"
"        fprintf(stderr, \"Utilisation : %s E<lt>nom_d_hôte-enfantE<gt>\\en\", argv[0]);\n"
"        exit(EXIT_SUCCESS);\n"
"    }\n"

#. type: Plain text
#: archlinux debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-tumbleweed
#, fuzzy, no-wrap
#| msgid "    /* Allocate memory to be used for the stack of the child */\n"
msgid "    /* Allocate memory to be used for the stack of the child. */\n"
msgstr "    /* Allouer la mémoire à utiliser pour la pile du processus enfant */\n"

#. type: Plain text
#: archlinux
#, fuzzy, no-wrap
#| msgid ""
#| "    stack = mmap(NULL, STACK_SIZE, PROT_READ | PROT_WRITE,\n"
#| "                 MAP_PRIVATE | MAP_ANONYMOUS | MAP_STACK, -1, 0);\n"
#| "    if (stack == MAP_FAILED)\n"
#| "        errExit(\"mmap\");\n"
msgid ""
"    stack = mmap(NULL, STACK_SIZE, PROT_READ | PROT_WRITE,\n"
"                 MAP_PRIVATE | MAP_ANONYMOUS | MAP_STACK, -1, 0);\n"
"    if (stack == MAP_FAILED)\n"
"        err(EXIT_FAILURE, \"mmap\");\n"
msgstr ""
"    stack = mmap(NULL, STACK_SIZE, PROT_READ | PROT_WRITE,\n"
"                 MAP_PRIVATE | MAP_ANONYMOUS | MAP_STACK, -1, 0);\n"
"    if (stack == MAP_FAILED)\n"
"        errExit(\"mmap\");\n"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "    stackTop = stack + STACK_SIZE;  /* Assume stack grows downward */\n"
msgstr ""
"    stackTop = stack + STACK_SIZE;  /* On suppose que la pile grandit vers\n"
"                                       le bas */\n"

#. type: Plain text
#: archlinux debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-tumbleweed
#, fuzzy, no-wrap
#| msgid ""
#| "    /* Create child that has its own UTS namespace;\n"
#| "       child commences execution in childFunc() */\n"
msgid ""
"    /* Create child that has its own UTS namespace;\n"
"       child commences execution in childFunc(). */\n"
msgstr ""
"    /* Créer un processus enfant disposant de son propre\n"
"       espace de noms UTS ; le processus enfant débute\n"
"       son exécution dans childFunc() */\n"

#. type: Plain text
#: archlinux
#, fuzzy, no-wrap
#| msgid ""
#| "    pid = clone(childFunc, stackTop, CLONE_NEWUTS | SIGCHLD, argv[1]);\n"
#| "    if (pid == -1)\n"
#| "        errExit(\"clone\");\n"
#| "    printf(\"clone() returned %jd\\en\", (intmax_t) pid);\n"
msgid ""
"    pid = clone(childFunc, stackTop, CLONE_NEWUTS | SIGCHLD, argv[1]);\n"
"    if (pid == -1)\n"
"        err(EXIT_FAILURE, \"clone\");\n"
"    printf(\"clone() returned %jd\\en\", (intmax_t) pid);\n"
msgstr ""
"    pid = clone(childFunc, stackTop, CLONE_NEWUTS | SIGCHLD, argv[1]);\n"
"    if (pid == -1)\n"
"        errExit(\"clone\");\n"
"    printf(\"clone() a renvoyé %jd\\en\", (intmax_t) pid);\n"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "    /* Parent falls through to here */\n"
msgstr "    /* Le parent se retrouve ici */\n"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "    sleep(1);           /* Give child time to change its hostname */\n"
msgstr ""
"    sleep(1);           /* Laisser le temps au processus enfant de\n"
"                           changer son nom d'hôte */\n"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid ""
"    /* Display hostname in parent\\(aqs UTS namespace. This will be\n"
"       different from hostname in child\\(aqs UTS namespace. */\n"
msgstr ""
"    /* Afficher le nom d'hôte pour l'espace de noms UTS du processus parent.\n"
"       Celui-ci sera différent du nom d'hôte pour l'espace de noms UTS du\n"
"       processus enfant. */\n"

#. type: Plain text
#: archlinux
#, fuzzy, no-wrap
#| msgid ""
#| "    if (uname(&uts) == -1)\n"
#| "        errExit(\"uname\");\n"
#| "    printf(\"uts.nodename in parent: %s\\en\", uts.nodename);\n"
msgid ""
"    if (uname(&uts) == -1)\n"
"        err(EXIT_FAILURE, \"uname\");\n"
"    printf(\"uts.nodename in parent: %s\\en\", uts.nodename);\n"
msgstr ""
"    if (uname(&uts) == -1)\n"
"        errExit(\"uname\");\n"
"    printf(\"uts.nodename dans le parent : %s\\en\", uts.nodename);\n"

#. type: Plain text
#: archlinux
#, fuzzy, no-wrap
#| msgid ""
#| "    if (waitpid(pid, NULL, 0) == -1)    /* Wait for child */\n"
#| "        errExit(\"waitpid\");\n"
#| "    printf(\"child has terminated\\en\");\n"
msgid ""
"    if (waitpid(pid, NULL, 0) == -1)    /* Wait for child */\n"
"        err(EXIT_FAILURE, \"waitpid\");\n"
"    printf(\"child has terminated\\en\");\n"
msgstr ""
"    if (waitpid(pid, NULL, 0) == -1)    /* Attendre le processus enfant */\n"
"        errExit(\"waitpid\");\n"
"    printf(\"Fin du processus enfant\\en\");\n"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid ""
"    exit(EXIT_SUCCESS);\n"
"}\n"
msgstr ""
"    exit(EXIT_SUCCESS);\n"
"}\n"

#. #-#-#-#-#  archlinux: clone.2.pot (PACKAGE VERSION)  #-#-#-#-#
#.  SRC END
#. type: SH
#. #-#-#-#-#  debian-bullseye: clone.2.pot (PACKAGE VERSION)  #-#-#-#-#
#. type: SH
#. #-#-#-#-#  debian-unstable: clone.2.pot (PACKAGE VERSION)  #-#-#-#-#
#. type: SH
#. #-#-#-#-#  fedora-37: clone.2.pot (PACKAGE VERSION)  #-#-#-#-#
#. type: SH
#. #-#-#-#-#  fedora-rawhide: clone.2.pot (PACKAGE VERSION)  #-#-#-#-#
#. type: SH
#. #-#-#-#-#  mageia-cauldron: clone.2.pot (PACKAGE VERSION)  #-#-#-#-#
#. type: SH
#. #-#-#-#-#  opensuse-leap-15-5: clone.2.pot (PACKAGE VERSION)  #-#-#-#-#
#. type: SH
#. #-#-#-#-#  opensuse-tumbleweed: clone.2.pot (PACKAGE VERSION)  #-#-#-#-#
#. type: SH
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "SEE ALSO"
msgstr "VOIR AUSSI"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"B<fork>(2), B<futex>(2), B<getpid>(2), B<gettid>(2), B<kcmp>(2), B<mmap>(2), "
"B<pidfd_open>(2), B<set_thread_area>(2), B<set_tid_address>(2), B<setns>(2), "
"B<tkill>(2), B<unshare>(2), B<wait>(2), B<capabilities>(7), "
"B<namespaces>(7), B<pthreads>(7)"
msgstr ""
"B<fork>(2), B<futex>(2), B<getpid>(2), B<gettid>(2), B<kcmp>(2), B<mmap>(2), "
"B<pidfd_open>(2), B<set_thread_area>(2), B<set_tid_address>(2), B<setns>(2), "
"B<tkill>(2), B<unshare>(2), B<wait>(2), B<capabilities>(7), "
"B<namespaces>(7), B<pthreads>(7)"

#. type: TH
#: debian-bullseye
#, no-wrap
msgid "2020-11-01"
msgstr "1 novembre 2020"

#. type: TH
#: debian-bullseye debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "Linux"
msgstr "Linux"

#. type: TH
#: debian-bullseye debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "Linux Programmer's Manual"
msgstr "Manuel du programmeur Linux"

#. type: Plain text
#: debian-bullseye
#, no-wrap
msgid "B<long clone3(struct clone_args *>I<cl_args>B<, size_t >I<size>B<);>\n"
msgstr "B<long clone3(struct clone_args *>I<cl_args>B<, size_t >I<size>B<);>\n"

#. type: Plain text
#: debian-bullseye
msgid "I<Note>: There is not yet a glibc wrapper for B<clone3>(); see NOTES."
msgstr ""
"I<Remarque> : il n'y pas encore d'enveloppe glibc pour B<clone3>() ; voir "
"les REMARQUES."

#. type: Plain text
#: debian-bullseye
#, no-wrap
msgid ""
"struct clone_args {\n"
"    u64 flags;        /* Flags bit mask */\n"
"    u64 pidfd;        /* Where to store PID file descriptor\n"
"                         (I<pid_t *>) */\n"
"    u64 child_tid;    /* Where to store child TID,\n"
"                         in child\\(aqs memory (I<pid_t *>) */\n"
"    u64 parent_tid;   /* Where to store child TID,\n"
"                         in parent\\(aqs memory (I<int *>) */\n"
"    u64 exit_signal;  /* Signal to deliver to parent on\n"
"                         child termination */\n"
"    u64 stack;        /* Pointer to lowest byte of stack */\n"
"    u64 stack_size;   /* Size of stack */\n"
"    u64 tls;          /* Location of new TLS */\n"
"    u64 set_tid;      /* Pointer to a I<pid_t> array\n"
"                         (since Linux 5.5) */\n"
"    u64 set_tid_size; /* Number of elements in I<set_tid>\n"
"                         (since Linux 5.5) */\n"
"    u64 cgroup;       /* File descriptor for target cgroup\n"
"                         of child (since Linux 5.7) */\n"
"};\n"
msgstr ""
"struct clone_args {\n"
"    u64 flags;        /* Masque de bit d'attribut */\n"
"    u64 pidfd;        /* Où stocker le descripteur de fichier du PID\n"
"                         (I<pid_t *>) */\n"
"    u64 child_tid;    /* Où stocker le TID enfant,\n"
"                         dans la mémoire de l'enfant\\(aqs memory (I<pid_t *>) */\n"
"    u64 parent_tid;   /* Où stocker le TID enfant,\n"
"                         dans la mémoire du parent\\(aqs memory (I<int *>) */\n"
"    u64 exit_signal;  /* Signal à envoyer au parent quand\n"
"                         l'efant se termine */\n"
"    u64 stack;        /* Pointeur vers l'octet le plus faible de la pile */\n"
"    u64 stack_size;   /* Taille de la pile */\n"
"    u64 tls;          /* Emplacement du nouveau TLS */\n"
"    u64 set_tid;      /* Pointeur vers un tableau I<pid_t>\n"
"                         (depuis Linux 5.5) */\n"
"    u64 set_tid_size; /* Nombre d'éléments dans I<set_tid>\n"
"                         (depuis Linux 5.5) */\n"
"    u64 cgroup;       /* Descripteur de fichier du cgroup cible\n"
"                         de l'enfant (depuis Linux 5.7) */\n"
"};\n"

#. type: Plain text
#: debian-bullseye
msgid ""
"The PID in the PID namespaces outside the two innermost PID namespaces will "
"be selected the same way as any other PID is selected."
msgstr ""
"Le PID dans un espace de noms de PID en dehors des deux espaces de noms "
"intermédiaires sera sélectionné de la même manière qu'on sélectionne "
"n'importe quel autre PID."

#. type: Plain text
#: debian-bullseye
msgid ""
"Store the child thread ID at the location pointed to by I<child_tid> "
"(B<clone>())  or I<cl_args.child_tid> (B<clone3>())  in the child's memory.  "
"The store operation completes before the clone call returns control to user "
"space in the child process.  (Note that the store operation may not have "
"completed before the clone call returns in the parent process, which will be "
"relevant if the B<CLONE_VM> flag is also employed.)"
msgstr ""
"Enregistrer l'ID du thread de l'enfant là où pointe I<child_tid> "
"((B<clone>()) ou I<cl_args.child_tid> (B<clone3>()) dans la mémoire de "
"l'enfant. L'opération d'enregistrement se termine avant que l'appel clone ne "
"redonne le contrôle à l'espace utilisateur dans le processus enfant "
"(remarquez que l'opération d'enregistrement se termine avant que l'appel "
"clone ne renvoie au processus parent, ce qui sera pertinent si l'attribut "
"B<CLONE_VM> est également utilisé)."

#. type: Plain text
#: debian-bullseye opensuse-leap-15-5
msgid ""
"Note that it is the parent process, as returned by B<getppid>(2), which is "
"signaled when the child terminates, so that if B<CLONE_PARENT> is set, then "
"the parent of the calling process, rather than the calling process itself, "
"will be signaled."
msgstr ""
"Remarquez que c'est le processus parent, tel qu'indiqué par B<getppid>(2), "
"qui est notifié lors de la fin de l'enfant. Ainsi, si B<CLONE_PARENT> est "
"présent, alors c'est le parent du processus appelant, et non ce dernier, qui "
"sera notifié."

#. type: Plain text
#: debian-bullseye debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-tumbleweed
msgid ""
"The interpretation of I<tls> and the resulting effect is architecture "
"dependent.  On x86, I<tls> is interpreted as a I<struct user_desc\\ *> (see "
"B<set_thread_area>(2)).  On x86-64 it is the new value to be set for the %fs "
"base register (see the B<ARCH_SET_FS> argument to B<arch_prctl>(2)).  On "
"architectures with a dedicated TLS register, it is the new value of that "
"register."
msgstr ""
"L'interprétation de I<tls> et les effets qui en découlent dépendent de "
"l'architecture. Sur x86, I<tls> est interprété comme une I<struct "
"user_desc\\ *> (voir B<set_thread_area>(2)). Sur x86-64, il s'agit de la "
"nouvelle valeur à positionner pour le registre de base %fs (voir le "
"paramètre B<ARCH_SET_FS> de B<arch_prctl>(2)). Sur les architectures ayant "
"un registre TLS dédié, il s'agit de la nouvelle valeur de ce registre."

#.  Precisely: Linux 2.6.0-test6
#. type: Plain text
#: debian-bullseye
msgid ""
"Since Linux 2.6.0, the I<flags> mask must also include B<CLONE_VM> if "
"B<CLONE_SIGHAND> is specified"
msgstr ""
"Depuis Linux 2.6.0, le masque I<flags> doit aussi inclure B<CLONE_VM> si "
"B<CLONE_SIGHAND> est spécifié"

#. type: Plain text
#: debian-bullseye
msgid ""
"If a process-directed signal is delivered to a thread group, and the thread "
"group has installed a handler for the signal, then the handler will be "
"invoked in exactly one, arbitrarily selected member of the thread group that "
"has not blocked the signal.  If multiple threads in a group are waiting to "
"accept the same signal using B<sigwaitinfo>(2), the kernel will arbitrarily "
"select one of these threads to receive the signal."
msgstr ""
"Si un signal adressé à un processus est envoyé à un groupe de threads, et si "
"le groupe a installé un gestionnaire pour ce signal, alors le gestionnaire "
"sera exécuté dans exactement un des membres du groupe de threads, choisi de "
"façon arbitraire parmi ceux qui n'ont pas bloqué ce signal. Si plusieurs "
"threads dans un groupe attendent le même signal en utilisant "
"B<sigwaitinfo>(2), le noyau choisira arbitrairement l'un d'entre eux pour "
"recevoir le signal."

#. type: Plain text
#: debian-bullseye
msgid ""
"If the B<CLONE_VM> flag is specified and the B<CLONE_VM> flag is not "
"specified, then any alternate signal stack that was established by "
"B<sigaltstack>(2)  is cleared in the child process."
msgstr ""
"Si l'attribut B<CLONE_VM> est indiqué et si l'attribut B<CLONE_VM> ne l'est "
"pas, toute autre pile de signal mise en place par B<sigaltstack>(2) sera "
"vidée dans le processus enfant."

#.  gettid(2) returns current->pid;
#.  getpid(2) returns current->tgid;
#. type: Plain text
#: debian-bullseye opensuse-leap-15-5
msgid ""
"On success, the thread ID of the child process is returned in the caller's "
"thread of execution.  On failure, -1 is returned in the caller's context, no "
"child process will be created, and I<errno> will be set appropriately."
msgstr ""
"En cas de réussite, le TID du processus enfant est renvoyé dans le thread "
"d'exécution de l'appelant. En cas d'échec, B<-1> est renvoyé dans le "
"contexte de l'appelant, aucun enfant n'est créé, et I<errno> contiendra le "
"code d'erreur."

#. type: Plain text
#: debian-bullseye
msgid "I<stack> was not aligned to a 126-bit boundary."
msgstr "I<stack> n'était pas aligné sur une limite de 126 bits."

#. type: SH
#: debian-bullseye debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "CONFORMING TO"
msgstr "CONFORMITÉ"

#. type: Plain text
#: debian-bullseye
msgid ""
"Glibc does not provide a wrapper for B<clone3>(); call it using "
"B<syscall>(2)."
msgstr ""
"La glibc ne fournit pas d'enveloppe pour B<clone3>() ; appelez-la en "
"utilisant B<syscall>(2)."

#. type: Plain text
#: debian-bullseye debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-tumbleweed
#, no-wrap
msgid ""
"#define _GNU_SOURCE\n"
"#include E<lt>sys/wait.hE<gt>\n"
"#include E<lt>sys/utsname.hE<gt>\n"
"#include E<lt>sched.hE<gt>\n"
"#include E<lt>string.hE<gt>\n"
"#include E<lt>stdint.hE<gt>\n"
"#include E<lt>stdio.hE<gt>\n"
"#include E<lt>stdlib.hE<gt>\n"
"#include E<lt>unistd.hE<gt>\n"
"#include E<lt>sys/mman.hE<gt>\n"
msgstr ""
"#define _GNU_SOURCE\n"
"#include E<lt>sys/wait.hE<gt>\n"
"#include E<lt>sys/utsname.hE<gt>\n"
"#include E<lt>sched.hE<gt>\n"
"#include E<lt>string.hE<gt>\n"
"#include E<lt>stdint.hE<gt>\n"
"#include E<lt>stdio.hE<gt>\n"
"#include E<lt>stdlib.hE<gt>\n"
"#include E<lt>unistd.hE<gt>\n"
"#include E<lt>sys/mman.hE<gt>\n"

#. type: Plain text
#: debian-bullseye debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid ""
"#define errExit(msg)    do { perror(msg); exit(EXIT_FAILURE); \\e\n"
"                        } while (0)\n"
msgstr ""
"#define errExit(msg)    do { perror(msg); exit(EXIT_FAILURE); \\e\n"
"                        } while (0)\n"

#. type: Plain text
#: debian-bullseye opensuse-leap-15-5
#, no-wrap
msgid "    /* Change hostname in UTS namespace of child */\n"
msgstr ""
"    /* Modifier le nom d'hôte dans l'espace de noms UTS du\n"
"       processus enfant */\n"

#. type: Plain text
#: debian-bullseye debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid ""
"    if (sethostname(arg, strlen(arg)) == -1)\n"
"        errExit(\"sethostname\");\n"
msgstr ""
"    if (sethostname(arg, strlen(arg)) == -1)\n"
"        errExit(\"sethostname\");\n"

#. type: Plain text
#: debian-bullseye opensuse-leap-15-5
#, no-wrap
msgid "    /* Retrieve and display hostname */\n"
msgstr "    /* Récupérer et afficher le nom d'hôte */\n"

#. type: Plain text
#: debian-bullseye debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid ""
"    if (uname(&uts) == -1)\n"
"        errExit(\"uname\");\n"
"    printf(\"uts.nodename in child:  %s\\en\", uts.nodename);\n"
msgstr ""
"    if (uname(&uts) == -1)\n"
"        errExit(\"uname\");\n"
"    printf(\"uts.nodename dans l'enfant :  %s\\en\", uts.nodename);\n"

#. type: Plain text
#: debian-bullseye debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid ""
"int\n"
"main(int argc, char *argv[])\n"
"{\n"
"    char *stack;                    /* Start of stack buffer */\n"
"    char *stackTop;                 /* End of stack buffer */\n"
"    pid_t pid;\n"
"    struct utsname uts;\n"
msgstr ""
"int\n"
"main(int argc, char *argv[])\n"
"{\n"
"    char *stack;                    /* Début du tampon de la pile */\n"
"    char *stackTop;                 /* Fin du tampon de la pile */\n"
"    pid_t pid;\n"
"    struct utsname uts;\n"

#. type: Plain text
#: debian-bullseye
#, no-wrap
msgid "    /* Allocate memory to be used for the stack of the child */\n"
msgstr "    /* Allouer la mémoire à utiliser pour la pile du processus enfant */\n"

#. type: Plain text
#: debian-bullseye debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-tumbleweed
#, no-wrap
msgid ""
"    stack = mmap(NULL, STACK_SIZE, PROT_READ | PROT_WRITE,\n"
"                 MAP_PRIVATE | MAP_ANONYMOUS | MAP_STACK, -1, 0);\n"
"    if (stack == MAP_FAILED)\n"
"        errExit(\"mmap\");\n"
msgstr ""
"    stack = mmap(NULL, STACK_SIZE, PROT_READ | PROT_WRITE,\n"
"                 MAP_PRIVATE | MAP_ANONYMOUS | MAP_STACK, -1, 0);\n"
"    if (stack == MAP_FAILED)\n"
"        errExit(\"mmap\");\n"

#. type: Plain text
#: debian-bullseye opensuse-leap-15-5
#, no-wrap
msgid ""
"    /* Create child that has its own UTS namespace;\n"
"       child commences execution in childFunc() */\n"
msgstr ""
"    /* Créer un processus enfant disposant de son propre\n"
"       espace de noms UTS ; le processus enfant débute\n"
"       son exécution dans childFunc() */\n"

#. type: Plain text
#: debian-bullseye debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-tumbleweed
#, no-wrap
msgid ""
"    pid = clone(childFunc, stackTop, CLONE_NEWUTS | SIGCHLD, argv[1]);\n"
"    if (pid == -1)\n"
"        errExit(\"clone\");\n"
"    printf(\"clone() returned %jd\\en\", (intmax_t) pid);\n"
msgstr ""
"    pid = clone(childFunc, stackTop, CLONE_NEWUTS | SIGCHLD, argv[1]);\n"
"    if (pid == -1)\n"
"        errExit(\"clone\");\n"
"    printf(\"clone() a renvoyé %jd\\en\", (intmax_t) pid);\n"

#. type: Plain text
#: debian-bullseye debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid ""
"    if (uname(&uts) == -1)\n"
"        errExit(\"uname\");\n"
"    printf(\"uts.nodename in parent: %s\\en\", uts.nodename);\n"
msgstr ""
"    if (uname(&uts) == -1)\n"
"        errExit(\"uname\");\n"
"    printf(\"uts.nodename dans le parent : %s\\en\", uts.nodename);\n"

#. type: Plain text
#: debian-bullseye debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid ""
"    if (waitpid(pid, NULL, 0) == -1)    /* Wait for child */\n"
"        errExit(\"waitpid\");\n"
"    printf(\"child has terminated\\en\");\n"
msgstr ""
"    if (waitpid(pid, NULL, 0) == -1)    /* Attendre le processus enfant */\n"
"        errExit(\"waitpid\");\n"
"    printf(\"Fin du processus enfant\\en\");\n"

#. type: SH
#: debian-bullseye debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-leap-15-5
#, no-wrap
msgid "COLOPHON"
msgstr "COLOPHON"

#. type: Plain text
#: debian-bullseye
msgid ""
"This page is part of release 5.10 of the Linux I<man-pages> project.  A "
"description of the project, information about reporting bugs, and the latest "
"version of this page, can be found at \\%https://www.kernel.org/doc/man-"
"pages/."
msgstr ""
"Cette page fait partie de la publication 5.10 du projet I<man-pages> Linux. "
"Une description du projet et des instructions pour signaler des anomalies et "
"la dernière version de cette page peuvent être trouvées à l'adresse \\"
"%https://www.kernel.org/doc/man-pages/."

#. type: TH
#: debian-unstable fedora-37 fedora-rawhide mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "2021-03-22"
msgstr "22 mars 2021"

#. type: Plain text
#: debian-unstable fedora-37 fedora-rawhide mageia-cauldron
msgid ""
"This page is part of release 5.13 of the Linux I<man-pages> project.  A "
"description of the project, information about reporting bugs, and the latest "
"version of this page, can be found at \\%https://www.kernel.org/doc/man-"
"pages/."
msgstr ""
"Cette page fait partie de la publication 5.13 du projet I<man-pages> Linux. "
"Une description du projet et des instructions pour signaler des anomalies et "
"la dernière version de cette page peuvent être trouvées à l'adresse \\"
"%https://www.kernel.org/doc/man-pages/."

#. type: TH
#: opensuse-leap-15-5
#, no-wrap
msgid "2017-09-15"
msgstr "15 septembre 2017"

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid "clone, __clone2, clone3 - create a child process"
msgid "clone, __clone2 - create a child process"
msgstr "clone, __clone2, clone3 - Créer un processus enfant (child)"

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy, no-wrap
#| msgid ""
#| "B<int clone(int (*>I<fn>B<)(void *), void *>I<stack>B<, int >I<flags>B<, void *>I<arg>B<, ... >\n"
#| "B<          /* pid_t *>I<parent_tid>B<, void *>I<tls>B<, pid_t *>I<child_tid>B< */ );>\n"
msgid ""
"B<int clone(int (*>I<fn>B<)(void *), void *>I<child_stack>B<,>\n"
"B<          int >I<flags>B<, void *>I<arg>B<, ... >\n"
"B<          /* pid_t *>I<ptid>B<, void *>I<newtls>B<, pid_t *>I<ctid>B< */ );>\n"
msgstr ""
"B<int clone(int (*>I<fn>B<)(void *), void *>I<stack>B<, int >I<flags>B<, void *>I<arg>B<, ... >\n"
"B<          /* pid_t *>I<parent_tid>B<, void *>I<tls>B<, pid_t *>I<child_tid>B< */ );>\n"

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy, no-wrap
#| msgid "/* For the prototype of the raw clone() system call, see NOTES */\n"
msgid "/* For the prototype of the raw system call, see NOTES */\n"
msgstr "/* Pour le prototype de l'appel système clone() brut, voir REMARQUES */\n"

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "These system calls create a new (\"child\") process, in a manner similar "
#| "to B<fork>(2)."
msgid "B<clone>()  creates a new process, in a manner similar to B<fork>(2)."
msgstr ""
"Ces appels système créent un nouveau processus « enfant », de façon analogue "
"à B<fork>(2)."

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "The glibc B<clone>()  wrapper function and the underlying system call on "
#| "which it is based.  The main text describes the wrapper function; the "
#| "differences for the raw system call are described toward the end of this "
#| "page."
msgid ""
"This page describes both the glibc B<clone>()  wrapper function and the "
"underlying system call on which it is based.  The main text describes the "
"wrapper function; the differences for the raw system call are described "
"toward the end of this page."
msgstr ""
"Cette page présente à la fois la fonction enveloppe B<clone>() de la glibc "
"et l'appel système sous-jacent sur lequel elle s'appuie. Le texte principal "
"décrit la fonction enveloppe ; les différences avec l'appel système brut "
"sont précisées vers la fin de cette page."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"Unlike B<fork>(2), B<clone>()  allows the child process to share parts of "
"its execution context with the calling process, such as the virtual address "
"space, the table of file descriptors, and the table of signal handlers.  "
"(Note that on this manual page, \"calling process\" normally corresponds to "
"\"parent process\".  But see the description of B<CLONE_PARENT> below.)"
msgstr ""

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "One use of these systems calls is to implement threads: multiple flows of "
#| "control in a program that run concurrently in a shared address space."
msgid ""
"One use of B<clone>()  is to implement threads: multiple flows of control in "
"a program that run concurrently in a shared address space."
msgstr ""
"Une utilisation de ces appels systèmes consiste à implémenter des "
"threads\\ : un programme est scindé en plusieurs lignes de contrôle, "
"s'exécutant simultanément dans un espace mémoire partagée."

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "When the child process is created with the B<clone>()  wrapper function, "
#| "it commences execution by calling the function pointed to by the argument "
#| "I<fn>.  (This differs from B<fork>(2), where execution continues in the "
#| "child from the point of the B<fork>(2)  call.)  The I<arg> argument is "
#| "passed as the argument of the function I<fn>."
msgid ""
"When the child process is created with B<clone>(), it commences execution by "
"calling the function pointed to by the argument I<fn>.  (This differs from "
"B<fork>(2), where execution continues in the child from the point of the "
"B<fork>(2)  call.)  The I<arg> argument is passed as the argument of the "
"function I<fn>."
msgstr ""
"Quand le processus enfant est créé par la fonction enveloppe B<clone>(), il "
"débute son exécution par un appel à la fonction vers laquelle pointe "
"l'argument I<fn> (cela est différent de B<fork>(2), pour lequel l'exécution "
"continue dans le processus enfant à partir du moment de l'appel de "
"B<fork>(2)). L'argument I<arg> est passé comme argument de la fonction I<fn>."

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "The I<stack> argument specifies the location of the stack used by the "
#| "child process.  Since the child and calling process may share memory, it "
#| "is not possible for the child process to execute in the same stack as the "
#| "calling process.  The calling process must therefore set up memory space "
#| "for the child stack and pass a pointer to this space to B<clone>().  "
#| "Stacks grow downward on all processors that run Linux (except the HP PA "
#| "processors), so I<stack> usually points to the topmost address of the "
#| "memory space set up for the child stack.  Note that B<clone>()  does not "
#| "provide a means whereby the caller can inform the kernel of the size of "
#| "the stack area."
msgid ""
"The I<child_stack> argument specifies the location of the stack used by the "
"child process.  Since the child and calling process may share memory, it is "
"not possible for the child process to execute in the same stack as the "
"calling process.  The calling process must therefore set up memory space for "
"the child stack and pass a pointer to this space to B<clone>().  Stacks grow "
"downward on all processors that run Linux (except the HP PA processors), so "
"I<child_stack> usually points to the topmost address of the memory space set "
"up for the child stack."
msgstr ""
"L'argument I<stack> indique l'emplacement de la pile utilisée par le "
"processus enfant. Comme les processus enfant et appelant peuvent partager de "
"la mémoire, il n'est généralement pas possible pour l'enfant d'utiliser la "
"même pile que son parent. Le processus appelant doit donc préparer un espace "
"mémoire pour stocker la pile de son enfant, et transmettre à B<clone> un "
"pointeur sur cet emplacement. Les piles croissent vers le bas sur tous les "
"processeurs implémentant Linux (sauf le HP PA), donc I<stack> doit pointer "
"sur la plus haute adresse de l'espace mémoire prévu pour la pile du "
"processus enfant. Remarquez que B<clone>() ne fournit aucun moyen pour que "
"l'appelant puisse informer le noyau de la taille de la zone de la pile."

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "When the child process terminates, a signal may be sent to the parent.  "
#| "The termination signal is specified in the low byte of I<flags> "
#| "(B<clone>())  or in I<cl_args.exit_signal> (B<clone3>()).  If this signal "
#| "is specified as anything other than B<SIGCHLD>, then the parent process "
#| "must specify the B<__WALL> or B<__WCLONE> options when waiting for the "
#| "child with B<wait>(2).  If no signal (i.e., zero) is specified, then the "
#| "parent process is not signaled when the child terminates."
msgid ""
"The low byte of I<flags> contains the number of the I<termination signal> "
"sent to the parent when the child dies.  If this signal is specified as "
"anything other than B<SIGCHLD>, then the parent process must specify the "
"B<__WALL> or B<__WCLONE> options when waiting for the child with "
"B<wait>(2).  If no signal is specified, then the parent process is not "
"signaled when the child terminates."
msgstr ""
"Quand le processus enfant se termine, un signal peut être envoyé au parent. "
"Le signal de fin est indiqué dans l'octet de poids faible de I<flags> "
"(B<clone>()) ou dans I<cl_args.exit_signal> (B<clone3>()). Si ce signal est "
"différent de B<SIGCHLD>, le processus parent doit également spécifier les "
"options B<__WALL> ou B<__WCLONE> lorsqu'il attend la fin de l'enfant avec "
"B<wait>(2). Si aucun signal n'est indiqué (donc zéro), le processus parent "
"ne sera pas notifié de la terminaison de l'enfant."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"I<flags> may also be bitwise-ORed with zero or more of the following "
"constants, in order to specify what is shared between the calling process "
"and the child process:"
msgstr ""

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "Clear (zero) the child thread ID at the location pointed to by "
#| "I<child_tid> (B<clone>())  or I<cl_args.child_tid> (B<clone3>())  in "
#| "child memory when the child exits, and do a wakeup on the futex at that "
#| "address.  The address involved may be changed by the "
#| "B<set_tid_address>(2)  system call.  This is used by threading libraries."
msgid ""
"Clear (zero) the child thread ID at the location I<ctid> in child memory "
"when the child exits, and do a wakeup on the futex at that address.  The "
"address involved may be changed by the B<set_tid_address>(2)  system call.  "
"This is used by threading libraries."
msgstr ""
"Effacer (zéro) l'ID du thread enfant situé là où pointe I<child_tid> "
"(B<clone>()) ou I<cl_args.child_tid> (B<clone3>()) dans la mémoire de "
"l'enfant lorsqu'il existe, et provoquer le réveil avec le futex à cette "
"adresse. L'adresse concernée peut être modifiée par l'appel système "
"B<set_tid_address>(2). Cela est utilisé dans les bibliothèques de gestion de "
"threads."

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "Store the child thread ID at the location pointed to by I<parent_tid> "
#| "(B<clone>())  or I<cl_args.child_tid> (B<clone3>())  in the parent's "
#| "memory.  (In Linux 2.5.32-2.5.48 there was a flag B<CLONE_SETTID> that "
#| "did this.)  The store operation completes before the clone call returns "
#| "control to user space."
msgid ""
"Store the child thread ID at the location I<ctid> in the child's memory.  "
"The store operation completes before B<clone>()  returns control to user "
"space."
msgstr ""
"Enregistrer l'ID du thread enfant à l'endroit vers lequel pointe "
"I<parent_tid> (B<clone>()) ou I<cl_args.child_tid> (B<clone3>()) dans la "
"mémoire du parent. (Dans Linux 2.5.32-2.5.48 il y a un attribut "
"B<CLONE_SETTID> qui fait cela.) L'opération d'enregistrement se termine "
"avant que l'appel clone ne redonne le contrôle à l'espace utilisateur."

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "If B<CLONE_FILES> is not set, the child process inherits a copy of all "
#| "file descriptors opened in the calling process at the time of the clone "
#| "call.  Subsequent operations that open or close file descriptors, or "
#| "change file descriptor flags, performed by either the calling process or "
#| "the child process do not affect the other process.  Note, however, that "
#| "the duplicated file descriptors in the child refer to the same open file "
#| "descriptions as the corresponding file descriptors in the calling "
#| "process, and thus share file offsets and file status flags (see "
#| "B<open>(2))."
msgid ""
"If B<CLONE_FILES> is not set, the child process inherits a copy of all file "
"descriptors opened in the calling process at the time of B<clone>().  "
"Subsequent operations that open or close file descriptors, or change file "
"descriptor flags, performed by either the calling process or the child "
"process do not affect the other process.  Note, however, that the duplicated "
"file descriptors in the child refer to the same open file descriptions as "
"the corresponding file descriptors in the calling process, and thus share "
"file offsets and file status flags (see B<open>(2))."
msgstr ""
"Si B<CLONE_FILES> n'est pas positionné, le processus enfant hérite d'une "
"copie des descripteurs de fichier ouverts par l'appelant au moment de "
"l'appel B<clone>(). Les opérations d'ouverture et de fermeture ou de "
"modification d'attributs du descripteur de fichier subséquentes, effectuées "
"par le processus appelant ou son enfant, ne concernent pas l'autre "
"processus. Remarquez toutefois que les copies des descripteurs de fichier "
"dans l'enfant sont associées aux mêmes descriptions de fichiers ouverts que "
"les descripteurs de fichier correspondants dans le processus appelant, "
"partageant ainsi les attributs de position et d’états du fichier (consultez "
"B<open>(2))."

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "If B<CLONE_FS> is not set, the child process works on a copy of the "
#| "filesystem information of the calling process at the time of the clone "
#| "call.  Calls to B<chroot>(2), B<chdir>(2), or B<umask>(2)  performed "
#| "later by one of the processes do not affect the other process."
msgid ""
"If B<CLONE_FS> is not set, the child process works on a copy of the "
"filesystem information of the calling process at the time of the B<clone>()  "
"call.  Calls to B<chroot>(2), B<chdir>(2), or B<umask>(2)  performed later "
"by one of the processes do not affect the other process."
msgstr ""
"Si B<CLONE_FS> n'est pas positionné, le processus enfant travaille sur une "
"copie des informations de l'appelant concernant le système de fichiers au "
"moment de l'appel clone. Les appels à B<chroot>(2), B<chdir>(2), B<umask>(2) "
"effectués ensuite par un processus n'affectent pas l'autre processus."

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "Create the process in a new cgroup namespace.  If this flag is not set, "
#| "then (as with B<fork>(2))  the process is created in the same cgroup "
#| "namespaces as the calling process."
msgid ""
"Create the process in a new cgroup namespace.  If this flag is not set, then "
"(as with B<fork>(2))  the process is created in the same cgroup namespaces "
"as the calling process.  This flag is intended for the implementation of "
"containers."
msgstr ""
"Créer le processus dans un nouvel espace de noms cgroup. Si cet attribut "
"n'est pas invoqué, alors (comme pour B<fork>(2)) le processus est créé dans "
"le même espace de noms cgroup que le processus appelant."

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "If B<CLONE_NEWIPC> is set, then create the process in a new IPC "
#| "namespace.  If this flag is not set, then (as with B<fork>(2)), the "
#| "process is created in the same IPC namespace as the calling process."
msgid ""
"If B<CLONE_NEWIPC> is set, then create the process in a new IPC namespace.  "
"If this flag is not set, then (as with B<fork>(2)), the process is created "
"in the same IPC namespace as the calling process.  This flag is intended for "
"the implementation of containers."
msgstr ""
"Si B<CLONE_NEWIPC> est invoqué, alors le processus est créé dans un nouvel "
"espace de noms utilisateur IPC. Si cet attribut n'est pas invoqué, alors "
"(comme pour B<fork>(2)) le processus est créé dans le même espace de noms "
"utilisateur IPC que le processus appelant."

#.  commit 7eafd7c74c3f2e67c27621b987b28397110d643f
#.  https://lwn.net/Articles/312232/
#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"An IPC namespace provides an isolated view of System\\ V IPC objects (see "
"B<svipc>(7))  and (since Linux 2.6.30)  POSIX message queues (see "
"B<mq_overview>(7)).  The common characteristic of these IPC mechanisms is "
"that IPC objects are identified by mechanisms other than filesystem "
"pathnames."
msgstr ""

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"Objects created in an IPC namespace are visible to all other processes that "
"are members of that namespace, but are not visible to processes in other IPC "
"namespaces."
msgstr ""

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"When an IPC namespace is destroyed (i.e., when the last process that is a "
"member of the namespace terminates), all IPC objects in the namespace are "
"automatically destroyed."
msgstr ""
"Lors de la destruction d’un espace de noms IPC (c’est-à-dire quand le "
"dernier processus membre de cet espace de noms se termine), tous les objets "
"IPC de cet espace de noms sont détruits automatiquement."

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid "For further information on IPC namespaces, see B<ipc_namespaces>(7)."
msgid "For further information on IPC namespaces, see B<namespaces>(7)."
msgstr ""
"Pour plus d'informations sur les espaces de noms IPC, reportez vous à "
"B<ipc_namespaces>(7)."

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "If B<CLONE_NEWNET> is set, then create the process in a new network "
#| "namespace.  If this flag is not set, then (as with B<fork>(2))  the "
#| "process is created in the same network namespace as the calling process."
msgid ""
"If B<CLONE_NEWNET> is set, then create the process in a new network "
"namespace.  If this flag is not set, then (as with B<fork>(2))  the process "
"is created in the same network namespace as the calling process.  This flag "
"is intended for the implementation of containers."
msgstr ""
"Si B<CLONE_NEWNET> est invoqué, alors le processus est créé dans un nouvel "
"espace de noms réseau. Si cet attribut n'est pas invoqué, alors (comme pour "
"B<fork>(2)) le processus est créé dans le même espace de noms réseau que le "
"processus appelant."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"A network namespace provides an isolated view of the networking stack "
"(network device interfaces, IPv4 and IPv6 protocol stacks, IP routing "
"tables, firewall rules, the I</proc/net> and I</sys/class/net> directory "
"trees, sockets, etc.).  A physical network device can live in exactly one "
"network namespace.  A virtual network (B<veth>(4))  device pair provides a "
"pipe-like abstraction that can be used to create tunnels between network "
"namespaces, and can be used to create a bridge to a physical network device "
"in another namespace."
msgstr ""

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"When a network namespace is freed (i.e., when the last process in the "
"namespace terminates), its physical network devices are moved back to the "
"initial network namespace (not to the parent of the process).  For further "
"information on network namespaces, see B<namespaces>(7)."
msgstr ""

#.  See https://lwn.net/Articles/543273/
#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "Only a privileged process (B<CAP_SYS_ADMIN>)  can employ B<CLONE_NEWNS>.  "
#| "It is not permitted to specify both B<CLONE_NEWNS> and B<CLONE_FS> in the "
#| "same clone call."
msgid ""
"Only a privileged process (B<CAP_SYS_ADMIN>)  can employ B<CLONE_NEWNS>.  It "
"is not permitted to specify both B<CLONE_NEWNS> and B<CLONE_FS> in the same "
"B<clone>()  call."
msgstr ""
"Seul un processus disposant de privilèges (B<CAP_SYS_ADMIN>) peut utiliser "
"l'attribut B<CLONE_NEWNS>. Il n'est pas possible de spécifier à la fois "
"B<CLONE_NEWNS> et B<CLONE_FS> pour le même appel clone."

#.  This explanation draws a lot of details from
#.  http://lwn.net/Articles/259217/
#.  Authors: Pavel Emelyanov <xemul@openvz.org>
#.  and Kir Kolyshkin <kir@openvz.org>
#.  The primary kernel commit is 30e49c263e36341b60b735cbef5ca37912549264
#.  Author: Pavel Emelyanov <xemul@openvz.org>
#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "If B<CLONE_NEWPID> is set, then create the process in a new PID "
#| "namespace.  If this flag is not set, then (as with B<fork>(2))  the "
#| "process is created in the same PID namespace as the calling process."
msgid ""
"If B<CLONE_NEWPID> is set, then create the process in a new PID namespace.  "
"If this flag is not set, then (as with B<fork>(2))  the process is created "
"in the same PID namespace as the calling process.  This flag is intended for "
"the implementation of containers."
msgstr ""
"Si B<CLONE_NEWPID> est invoqué, alors le processus est créé dans un nouvel "
"espace de noms PID. Si cet attribut n'est pas invoqué, alors (comme pour "
"B<fork>(2)) le processus est créé dans le même espace de noms PID que le "
"processus appelant."

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "If B<CLONE_NEWUTS> is set, then create the process in a new UTS "
#| "namespace, whose identifiers are initialized by duplicating the "
#| "identifiers from the UTS namespace of the calling process.  If this flag "
#| "is not set, then (as with B<fork>(2))  the process is created in the same "
#| "UTS namespace as the calling process."
msgid ""
"If B<CLONE_NEWUTS> is set, then create the process in a new UTS namespace, "
"whose identifiers are initialized by duplicating the identifiers from the "
"UTS namespace of the calling process.  If this flag is not set, then (as "
"with B<fork>(2))  the process is created in the same UTS namespace as the "
"calling process.  This flag is intended for the implementation of containers."
msgstr ""
"Si B<CLONE_NEWUTS> est défini, créez le processus dans un nouvel espace de "
"noms UTS, dont les identifiants sont initialisés en dupliquant les "
"identifiants de l'espace de noms UTS du processus appelant. Si cet attribut "
"n'est pas défini, alors (comme pour B<fork>(2)) le processus est créé dans "
"le même espace de noms UTS que le processus appelant."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"A UTS namespace is the set of identifiers returned by B<uname>(2); among "
"these, the domain name and the hostname can be modified by "
"B<setdomainname>(2)  and B<sethostname>(2), respectively.  Changes made to "
"the identifiers in a UTS namespace are visible to all other processes in the "
"same namespace, but are not visible to processes in other UTS namespaces."
msgstr ""

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid "For further information on UTS namespaces, see B<uts_namespaces>(7)."
msgid "For further information on UTS namespaces, see B<namespaces>(7)."
msgstr ""
"Pour obtenir plus d'informations sur les espaces de noms UTS, consultez "
"B<namespaces>(7)."

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "Store the child thread ID at the location pointed to by I<parent_tid> "
#| "(B<clone>())  or I<cl_args.child_tid> (B<clone3>())  in the parent's "
#| "memory.  (In Linux 2.5.32-2.5.48 there was a flag B<CLONE_SETTID> that "
#| "did this.)  The store operation completes before the clone call returns "
#| "control to user space."
msgid ""
"Store the child thread ID at the location I<ptid> in the parent's memory.  "
"(In Linux 2.5.32-2.5.48 there was a flag B<CLONE_SETTID> that did this.)  "
"The store operation completes before B<clone>()  returns control to user "
"space."
msgstr ""
"Enregistrer l'ID du thread enfant à l'endroit vers lequel pointe "
"I<parent_tid> (B<clone>()) ou I<cl_args.child_tid> (B<clone3>()) dans la "
"mémoire du parent. (Dans Linux 2.5.32-2.5.48 il y a un attribut "
"B<CLONE_SETTID> qui fait cela.) L'opération d'enregistrement se termine "
"avant que l'appel clone ne redonne le contrôle à l'espace utilisateur."

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "If B<CLONE_PID> is set, the child process is created with the same "
#| "process ID as the calling process.  This is good for hacking the system, "
#| "but otherwise of not much use.  From Linux 2.3.21 onward, this flag could "
#| "be specified only by the system boot process (PID 0).  The flag "
#| "disappeared completely from the kernel sources in Linux 2.5.16.  "
#| "Subsequently, the kernel silently ignored this bit if it was specified in "
#| "the I<flags> mask.  Much later, the same bit was recycled for use as the "
#| "B<CLONE_PIDFD> flag."
msgid ""
"If B<CLONE_PID> is set, the child process is created with the same process "
"ID as the calling process.  This is good for hacking the system, but "
"otherwise of not much use.  From Linux 2.3.21 onward, this flag could be "
"specified only by the system boot process (PID 0).  The flag disappeared "
"completely from the kernel sources in Linux 2.5.16.  Since then, the kernel "
"silently ignores this bit if it is specified in I<flags>."
msgstr ""
"Si l'attribut B<CLONE_PID> est positionné, les processus appelant et enfant "
"ont le même numéro de processus. C'est bien pour hacker le système, mais "
"autrement il n'est plus utilisé. Depuis Linux 2.3.21, cet attribut ne peut "
"être utilisé que par le processus de démarrage du système (PID 0). Il a "
"disparu dans Linux 2.5.16. Si bien que le noyau ignorait silencieusement le "
"bit s'il était indiqué dans le masque I<flags>. Bien plus tard, le même bit "
"a été recyclé pour être utilisé comme attribut de B<CLONE_PIDFD>."

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid "The TLS (Thread Local Storage) descriptor is set to I<tls>."
msgid "The TLS (Thread Local Storage) descriptor is set to I<newtls>."
msgstr "Le descripteur TLS (Thread Local Storage) est positionné sur I<tls>."

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "The interpretation of I<tls> and the resulting effect is architecture "
#| "dependent.  On x86, I<tls> is interpreted as a I<struct user_desc\\ *> "
#| "(see B<set_thread_area>(2)).  On x86-64 it is the new value to be set for "
#| "the %fs base register (see the B<ARCH_SET_FS> argument to "
#| "B<arch_prctl>(2)).  On architectures with a dedicated TLS register, it is "
#| "the new value of that register."
msgid ""
"The interpretation of I<newtls> and the resulting effect is architecture "
"dependent.  On x86, I<newtls> is interpreted as a I<struct user_desc\\ *> "
"(see B<set_thread_area>(2)).  On x86-64 it is the new value to be set for "
"the %fs base register (see the B<ARCH_SET_FS> argument to "
"B<arch_prctl>(2)).  On architectures with a dedicated TLS register, it is "
"the new value of that register."
msgstr ""
"L'interprétation de I<tls> et les effets qui en découlent dépendent de "
"l'architecture. Sur x86, I<tls> est interprété comme une I<struct "
"user_desc\\ *> (voir B<set_thread_area>(2)). Sur x86-64, il s'agit de la "
"nouvelle valeur à positionner pour le registre de base %fs (voir le "
"paramètre B<ARCH_SET_FS> de B<arch_prctl>(2)). Sur les architectures ayant "
"un registre TLS dédié, il s'agit de la nouvelle valeur de ce registre."

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "If B<CLONE_SIGHAND> is not set, the child process inherits a copy of the "
#| "signal handlers of the calling process at the time of the clone call.  "
#| "Calls to B<sigaction>(2)  performed later by one of the processes have no "
#| "effect on the other process."
msgid ""
"If B<CLONE_SIGHAND> is not set, the child process inherits a copy of the "
"signal handlers of the calling process at the time B<clone>()  is called.  "
"Calls to B<sigaction>(2)  performed later by one of the processes have no "
"effect on the other process."
msgstr ""
"Si B<CLONE_SIGHAND> n'est pas utilisé, le processus enfant hérite d'une "
"copie des gestionnaires de signaux de l'appelant lors de l'invocation de "
"B<clone>(). Les appels à B<sigaction>(2) effectués ensuite depuis un "
"processus n'ont pas d'effets sur l'autre processus."

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "Since Linux 2.6.0, the I<flags> mask must also include B<CLONE_VM> if "
#| "B<CLONE_SIGHAND> is specified"
msgid ""
"Since Linux 2.6.0-test6, I<flags> must also include B<CLONE_VM> if "
"B<CLONE_SIGHAND> is specified"
msgstr ""
"Depuis Linux 2.6.0, le masque I<flags> doit aussi inclure B<CLONE_VM> si "
"B<CLONE_SIGHAND> est spécifié"

#. type: TP
#: opensuse-leap-15-5
#, fuzzy, no-wrap
#| msgid "B<CLONE_STOPPED> (since Linux 2.6.0)"
msgid "B<CLONE_STOPPED> (since Linux 2.6.0-test2)"
msgstr "B<CLONE_STOPPED> (depuis Linux 2.6.0)"

#. type: TP
#: opensuse-leap-15-5
#, fuzzy, no-wrap
#| msgid "B<CLONE_THREAD> (since Linux 2.4.0)"
msgid "B<CLONE_THREAD> (since Linux 2.4.0-test8)"
msgstr "B<CLONE_THREAD> (depuis Linux 2.4.0)"

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "The threads within a group can be distinguished by their (system-wide)  "
#| "unique thread IDs (TID).  A new thread's TID is available as the function "
#| "result returned to the caller, and a thread can obtain its own TID using "
#| "B<gettid>(2)."
msgid ""
"The threads within a group can be distinguished by their (system-wide)  "
"unique thread IDs (TID).  A new thread's TID is available as the function "
"result returned to the caller of B<clone>(), and a thread can obtain its own "
"TID using B<gettid>(2)."
msgstr ""
"Les threads dans un groupe peuvent être distingués par leur identifiant de "
"thread (TID, unique sur le système). Le TID d'un nouveau thread est renvoyé "
"par B<clone>() au processus appelant, et un thread peut obtenir son propre "
"TID en utilisant B<gettid>(2)."

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "When a clone call is made without specifying B<CLONE_THREAD>, then the "
#| "resulting thread is placed in a new thread group whose TGID is the same "
#| "as the thread's TID.  This thread is the I<leader> of the new thread "
#| "group."
msgid ""
"When a call is made to B<clone>()  without specifying B<CLONE_THREAD>, then "
"the resulting thread is placed in a new thread group whose TGID is the same "
"as the thread's TID.  This thread is the I<leader> of the new thread group."
msgstr ""
"Quand clone est appelé sans positionner B<CLONE_THREAD>, le nouveau thread "
"est placé dans un nouveau groupe de thread dont le TGID est identique au TID "
"du nouveau thread. Ce thread est le I<leader> du nouveau groupe."

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "A new thread created with B<CLONE_THREAD> has the same parent process as "
#| "the process that made the clone call (i.e., like B<CLONE_PARENT>), so "
#| "that calls to B<getppid>(2)  return the same value for all of the threads "
#| "in a thread group.  When a B<CLONE_THREAD> thread terminates, the thread "
#| "that created it is not sent a B<SIGCHLD> (or other termination) signal; "
#| "nor can the status of such a thread be obtained using B<wait>(2).  (The "
#| "thread is said to be I<detached>.)"
msgid ""
"A new thread created with B<CLONE_THREAD> has the same parent process as the "
"caller of B<clone>()  (i.e., like B<CLONE_PARENT>), so that calls to "
"B<getppid>(2)  return the same value for all of the threads in a thread "
"group.  When a B<CLONE_THREAD> thread terminates, the thread that created it "
"using B<clone>()  is not sent a B<SIGCHLD> (or other termination) signal; "
"nor can the status of such a thread be obtained using B<wait>(2).  (The "
"thread is said to be I<detached>.)"
msgstr ""
"Un nouveau thread créé en utilisant B<CLONE_THREAD> a le même processus "
"parent que l'appelant de B<clone>() (de même qu'avec B<CLONE_PARENT>), ainsi "
"les appels à B<getppid>(2) renvoient la même valeur à tous les threads dans "
"un même groupe. Lorsqu'un thread créé avec B<CLONE_THREAD> termine, le "
"thread qui a appelé B<clone>() pour le créer ne reçoit pas le signal "
"B<SIGCHLD> (ou autre notification de terminaison)\\ ; de même, l'état d'un "
"tel thread ne peut pas être obtenu par B<wait>(2). Le thread est dit "
"I<détaché>."

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "Since Linux 2.5.35, the I<flags> mask must also include B<CLONE_SIGHAND> "
#| "if B<CLONE_THREAD> is specified (and note that, since Linux 2.6.0, "
#| "B<CLONE_SIGHAND> also requires B<CLONE_VM> to be included)."
msgid ""
"Since Linux 2.5.35, I<flags> must also include B<CLONE_SIGHAND> if "
"B<CLONE_THREAD> is specified (and note that, since Linux 2.6.0-test6, "
"B<CLONE_SIGHAND> also requires B<CLONE_VM> to be included)."
msgstr ""
"Depuis Linux 2.5.35, le masque I<flags> doit aussi inclure B<CLONE_SIGHAND> "
"si B<CLONE_THREAD> est spécifié (et remarquez que depuis Linux 2.6.0, "
"B<CLONE_SIGHAND> a également besoin de B<CLONE_VM>)."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"Signals may be sent to a thread group as a whole (i.e., a TGID) using "
"B<kill>(2), or to a specific thread (i.e., TID) using B<tgkill>(2)."
msgstr ""

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"Each thread has its own signal mask, as set by B<sigprocmask>(2), but "
"signals can be pending either: for the whole process (i.e., deliverable to "
"any member of the thread group), when sent with B<kill>(2); or for an "
"individual thread, when sent with B<tgkill>(2).  A call to B<sigpending>(2)  "
"returns a signal set that is the union of the signals pending for the whole "
"process and the signals that are pending for the calling thread."
msgstr ""

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "If a process-directed signal is delivered to a thread group, and the "
#| "thread group has installed a handler for the signal, then the handler "
#| "will be invoked in exactly one, arbitrarily selected member of the thread "
#| "group that has not blocked the signal.  If multiple threads in a group "
#| "are waiting to accept the same signal using B<sigwaitinfo>(2), the kernel "
#| "will arbitrarily select one of these threads to receive the signal."
msgid ""
"If B<kill>(2)  is used to send a signal to a thread group, and the thread "
"group has installed a handler for the signal, then the handler will be "
"invoked in exactly one, arbitrarily selected member of the thread group that "
"has not blocked the signal.  If multiple threads in a group are waiting to "
"accept the same signal using B<sigwaitinfo>(2), the kernel will arbitrarily "
"select one of these threads to receive a signal sent using B<kill>(2)."
msgstr ""
"Si un signal adressé à un processus est envoyé à un groupe de threads, et si "
"le groupe a installé un gestionnaire pour ce signal, alors le gestionnaire "
"sera exécuté dans exactement un des membres du groupe de threads, choisi de "
"façon arbitraire parmi ceux qui n'ont pas bloqué ce signal. Si plusieurs "
"threads dans un groupe attendent le même signal en utilisant "
"B<sigwaitinfo>(2), le noyau choisira arbitrairement l'un d'entre eux pour "
"recevoir le signal."

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "If B<CLONE_VM> is not set, the child process runs in a separate copy of "
#| "the memory space of the calling process at the time of the clone call.  "
#| "Memory writes or file mappings/unmappings performed by one of the "
#| "processes do not affect the other, as with B<fork>(2)."
msgid ""
"If B<CLONE_VM> is not set, the child process runs in a separate copy of the "
"memory space of the calling process at the time of B<clone>().  Memory "
"writes or file mappings/unmappings performed by one of the processes do not "
"affect the other, as with B<fork>(2)."
msgstr ""
"Si B<CLONE_VM> n'est pas actif, le processus enfant utilisera une copie "
"distincte de l'espace mémoire de l'appelant au moment de l'appel clone. Les "
"écritures ou les associations/désassociations de fichiers en mémoire "
"effectuées par un processus n'affectent pas l'autre processus, comme cela se "
"passe avec B<fork>(2)."

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "Note that the glibc B<clone>()  wrapper function makes some changes in "
#| "the memory pointed to by I<stack> (changes required to set the stack up "
#| "correctly for the child)  I<before> invoking the B<clone>()  system "
#| "call.  So, in cases where B<clone>()  is used to recursively create "
#| "children, do not use the buffer employed for the parent's stack as the "
#| "stack of the child."
msgid ""
"Note that the glibc B<clone>()  wrapper function makes some changes in the "
"memory pointed to by I<child_stack> (changes required to set the stack up "
"correctly for the child)  I<before> invoking the B<clone>()  system call.  "
"So, in cases where B<clone>()  is used to recursively create children, do "
"not use the buffer employed for the parent's stack as the stack of the child."
msgstr ""
"Remarquez que la fonction enveloppe B<clone>() de la glibc effectue des "
"changements dans la mémoire vers laquelle pointe I<stack> (ce sont des "
"changements nécessaires pour positionner correctement la pile pour l'enfant) "
"I<avant> de recourir à l'appel système B<clone>(). Dès lors, lorsque "
"B<clone>() est utilisé pour créer des enfants de manière récursive, "
"n'utilisez pas le tampon servant à la pile du parent en tant que pile de "
"l'enfant."

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "In contrast to the glibc wrapper, the raw B<clone>()  system call accepts "
#| "NULL as a I<stack> argument (and B<clone3>()  likewise allows I<cl_args."
#| "stack> to be NULL).  In this case, the child uses a duplicate of the "
#| "parent's stack.  (Copy-on-write semantics ensure that the child gets "
#| "separate copies of stack pages when either process modifies the stack.)  "
#| "In this case, for correct operation, the B<CLONE_VM> option should not be "
#| "specified.  (If the child I<shares> the parent's memory because of the "
#| "use of the B<CLONE_VM> flag, then no copy-on-write duplication occurs and "
#| "chaos is likely to result.)"
msgid ""
"Another difference for the raw B<clone>()  system call is that the "
"I<child_stack> argument may be NULL, in which case the child uses a "
"duplicate of the parent's stack.  (Copy-on-write semantics ensure that the "
"child gets separate copies of stack pages when either process modifies the "
"stack.)  In this case, for correct operation, the B<CLONE_VM> option should "
"not be specified.  (If the child I<shares> the parent's memory because of "
"the use of the B<CLONE_VM> flag, then no copy-on-write duplication occurs "
"and chaos is likely to result.)"
msgstr ""
"Contrairement à l'enveloppe de la glibc, l'appel système brut B<clone>() "
"accepte NULL en paramètre de I<stack> (et de même, B<clone3>() permet à "
"I<cl_args.stack> d'être NULL). Dans ce cas l'enfant utilise une copie de la "
"pile du parent (la sémantique de copie-en-écriture assure que l'enfant "
"recevra une copie indépendante des pages de la pile dès qu'un des deux "
"processus la modifiera). Pour que cela fonctionne, il faut naturellement que "
"B<CLONE_VM> ne soit pas présent (si l'enfant I<partage> la mémoire du parent "
"du fait d'une utilisation de B<CLONE_VM>, aucune duplication via la copie-en-"
"écriture ne se produit et il peut s'ensuivre probablement un grand chaos)."

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy, no-wrap
#| msgid ""
#| "B<long clone(unsigned long >I<flags>B<, void *>I<stack>B<,>\n"
#| "B<           int *>I<parent_tid>B<, int *>I<child_tid>B<,>\n"
#| "B<           unsigned long >I<tls>B<);>\n"
msgid ""
"B<long clone(unsigned long >I<flags>B<, void *>I<child_stack>B<,>\n"
"B<           int *>I<ptid>B<, int *>I<ctid>B<,>\n"
"B<           unsigned long >I<newtls>B<);>\n"
msgstr ""
"B<long clone(unsigned long >I<flags>B<, void *>I<stack>B<,>\n"
"B<           int *>I<parent_tid>B<, int *>I<child_tid>B<,>\n"
"B<           unsigned long >I<tls>B<);>\n"

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy, no-wrap
#| msgid ""
#| "B<long clone(unsigned long >I<flags>B<, void *>I<stack>B<,>\n"
#| "B<          int *>I<parent_tid>B<, unsigned long >I<tls>B<,>\n"
#| "B<          int *>I<child_tid>B<);>\n"
msgid ""
"B<long clone(unsigned long >I<flags>B<, void *>I<child_stack>B<,>\n"
"B<          int *>I<ptid>B<, unsigned long >I<newtls>B<,>\n"
"B<          int *>I<ctid>B<);>\n"
msgstr ""
"B<long clone(unsigned long >I<flags>B<, void *>I<stack>B<,>\n"
"B<          int *>I<parent_tid>B<, unsigned long >I<tls>B<,>\n"
"B<          int *>I<child_tid>B<);>\n"

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy, no-wrap
#| msgid ""
#| "B<long clone(void *>I<stack>B<, unsigned long >I<flags>B<,>\n"
#| "B<           int *>I<parent_tid>B<, int *>I<child_tid>B<,>\n"
#| "B<           unsigned long >I<tls>B<);>\n"
msgid ""
"B<long clone(void *>I<child_stack>B<, unsigned long >I<flags>B<,>\n"
"B<           int *>I<ptid>B<, int *>I<ctid>B<,>\n"
"B<           unsigned long >I<newtls>B<);>\n"
msgstr ""
"B<long clone(void *>I<stack>B<, unsigned long >I<flags>B<,>\n"
"B<           int *>I<parent_tid>B<, int *>I<child_tid>B<,>\n"
"B<           unsigned long >I<tls>B<);>\n"

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy, no-wrap
#| msgid ""
#| "B<long clone(unsigned long >I<flags>B<, void *>I<stack>B<,>\n"
#| "B<           int >I<stack_size>B<,>         /* Size of stack */\n"
#| "B<           int *>I<parent_tid>B<, int *>I<child_tid>B<,>\n"
#| "B<           unsigned long >I<tls>B<);>\n"
msgid ""
"B<long clone(unsigned long >I<flags>B<, void *>I<child_stack>B<,>\n"
"B<           int >I<stack_size>B<,>         /* Size of stack */\n"
"B<           int *>I<ptid>B<, int *>I<ctid>B<,>\n"
"B<           unsigned long >I<newtls>B<);>\n"
msgstr ""
"B<long clone(unsigned long >I<flags>B<, void *>I<stack>B<,>\n"
"B<           int >I<stack_size>B<,>         /* Taille de la pile */\n"
"B<           int *>I<parent_tid>B<, int *>I<child_tid>B<,>\n"
"B<           unsigned long >I<tls>B<);>\n"

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy, no-wrap
#| msgid ""
#| "B<int __clone2(int (*>I<fn>B<)(void *), >\n"
#| "B<             void *>I<stack_base>B<, size_t >I<stack_size>B<,>\n"
#| "B<             int >I<flags>B<, void *>I<arg>B<, ... >\n"
#| "B<          /* pid_t *>I<parent_tid>B<, struct user_desc *>I<tls>B<,>\n"
#| "B<             pid_t *>I<child_tid>B< */ );>\n"
msgid ""
"B<int __clone2(int (*>I<fn>B<)(void *), >\n"
"B<             void *>I<child_stack_base>B<, size_t >I<stack_size>B<,>\n"
"B<             int >I<flags>B<, void *>I<arg>B<, ... >\n"
"B<          /* pid_t *>I<ptid>B<, struct user_desc *>I<tls>B<, pid_t *>I<ctid>B< */ );>\n"
msgstr ""
"B<int __clone2(int (*>I<fn>B<)(void *), >\n"
"B<             void *>I<stack_base>B<, size_t >I<stack_size>B<,>\n"
"B<             int >I<flags>B<, void *>I<arg>B<, ... >\n"
"B<          /* pid_t *>I<parent_tid>B<, struct user_desc *>I<tls>B<,>\n"
"B<             pid_t *>I<child_tid>B< */ );>\n"

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"The prototype shown above is for the glibc wrapper function; the raw system "
"call interface has no I<fn> or I<arg> argument, and changes the order of the "
"arguments so that I<flags> is the first argument, and I<tls> is the last "
"argument."
msgstr ""

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "B<__clone2>()  operates in the same way as B<clone>(), except that "
#| "I<stack_base> points to the lowest address of the child's stack area, and "
#| "I<stack_size> specifies the size of the stack pointed to by I<stack_base>."
msgid ""
"B<__clone2>()  operates in the same way as B<clone>(), except that "
"I<child_stack_base> points to the lowest address of the child's stack area, "
"and I<stack_size> specifies the size of the stack pointed to by "
"I<child_stack_base>."
msgstr ""
"B<__clone2>() fonctionne comme B<clone>(), sauf que I<stack_base> pointe sur "
"la plus petite adresse de la pile de l'enfant et que I<stack_size> indique "
"la taille de la pile sur laquelle pointe I<stack_base>."

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "In Linux 2.4 and earlier, B<clone>()  does not take arguments "
#| "I<parent_tid>, I<tls>, and I<child_tid>."
msgid ""
"In Linux 2.4 and earlier, B<clone>()  does not take arguments I<ptid>, "
"I<tls>, and I<ctid>."
msgstr ""
"Sous Linux\\ 2.4 et plus anciens, B<clone>() ne prend pas les paramètres "
"I<parent_tid>, I<tls>, et I<child_tid>."

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "B<CLONE_SIGHAND> was specified in the I<flags> mask, but B<CLONE_VM> was "
#| "not.  (Since Linux 2.6.0.)"
msgid ""
"B<CLONE_SIGHAND> was specified, but B<CLONE_VM> was not.  (Since Linux 2.6.0-"
"test6.)"
msgstr ""
"B<CLONE_SIGHAND> a été spécifié dans le masque I<flags>, mais pas "
"B<CLONE_VM> (depuis Linux 2.6.0)."

#.  .TP
#.  .B EINVAL
#.  Precisely one of
#.  .B CLONE_DETACHED
#.  and
#.  .B CLONE_THREAD
#.  was specified.
#.  (Since Linux 2.6.0-test6.)
#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "B<CLONE_THREAD> was specified in the I<flags> mask, but B<CLONE_SIGHAND> "
#| "was not.  (Since Linux 2.5.35.)"
msgid ""
"B<CLONE_THREAD> was specified, but B<CLONE_SIGHAND> was not.  (Since Linux "
"2.5.35.)"
msgstr ""
"B<CLONE_THREAD> a été spécifié dans le masque I<flags>, mais pas "
"B<CLONE_SIGHAND>  (depuis Linux 2.5.35)."

#.  commit e66eded8309ebf679d3d3c1f5820d1f2ca332c71
#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "Both B<CLONE_FS> and B<CLONE_NEWNS> were specified in the I<flags> mask."
msgid "Both B<CLONE_FS> and B<CLONE_NEWNS> were specified in I<flags>."
msgstr ""
"Tant B<CLONE_FS> que B<CLONE_NEWNS> ont été indiqués dans le masque I<flags>."

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "Both B<CLONE_NEWUSER> and B<CLONE_FS> were specified in the I<flags> mask."
msgid "Both B<CLONE_NEWUSER> and B<CLONE_FS> were specified in I<flags>."
msgstr ""
"Tant B<CLONE_NEWUSER> que B<CLONE_FS> ont été indiqués dans le masque "
"I<flags>."

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "Both B<CLONE_NEWIPC> and B<CLONE_SYSVSEM> were specified in the I<flags> "
#| "mask."
msgid "Both B<CLONE_NEWIPC> and B<CLONE_SYSVSEM> were specified in I<flags>."
msgstr ""
"Tant B<CLONE_NEWIPC> que B<CLONE_SYSVSEM> ont été indiqués dans le masque "
"I<flags>."

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "One (or both) of B<CLONE_NEWPID> or B<CLONE_NEWUSER> and one (or both) of "
#| "B<CLONE_THREAD> or B<CLONE_PARENT> were specified in the I<flags> mask."
msgid ""
"One (or both) of B<CLONE_NEWPID> or B<CLONE_NEWUSER> and one (or both) of "
"B<CLONE_THREAD> or B<CLONE_PARENT> were specified in I<flags>."
msgstr ""
"B<CLONE_NEWPID> ou B<CLONE_NEWUSER>, et B<CLONE_THREAD> ou B<CLONE_PARENT>, "
"ont été indiqués, seuls ou ensemble, dans le masque I<flags>."

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "Returned by the glibc B<clone>()  wrapper function when I<fn> or I<stack> "
#| "is specified as NULL."
msgid ""
"Returned by the glibc B<clone>()  wrapper function when I<fn> or "
"I<child_stack> is specified as NULL."
msgstr ""
"Renvoyée par l'enveloppe glibc de B<clone>() quand I<fn> ou I<stack> valent "
"NULL."

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "B<CLONE_NEWIPC> was specified in the I<flags> mask, but the kernel was "
#| "not configured with the B<CONFIG_SYSVIPC> and B<CONFIG_IPC_NS> options."
msgid ""
"B<CLONE_NEWIPC> was specified in I<flags>, but the kernel was not configured "
"with the B<CONFIG_SYSVIPC> and B<CONFIG_IPC_NS> options."
msgstr ""
"B<CLONE_NEWIPC> a été spécifié dans le masque I<flags>, mais le noyau n'a "
"pas été configuré avec les options B<CONFIG_SYSVIPC> et B<CONFIG_IPC_NS>."

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "B<CLONE_NEWNET> was specified in the I<flags> mask, but the kernel was "
#| "not configured with the B<CONFIG_NET_NS> option."
msgid ""
"B<CLONE_NEWNET> was specified in I<flags>, but the kernel was not configured "
"with the B<CONFIG_NET_NS> option."
msgstr ""
"B<CLONE_NEWNET> a été spécifié dans le masque I<flags>, mais le noyau n'a "
"pas été configuré avec l'option B<CONFIG_NET_NS>."

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "B<CLONE_NEWPID> was specified in the I<flags> mask, but the kernel was "
#| "not configured with the B<CONFIG_PID_NS> option."
msgid ""
"B<CLONE_NEWPID> was specified in I<flags>, but the kernel was not configured "
"with the B<CONFIG_PID_NS> option."
msgstr ""
"B<CLONE_NEWPID> a été spécifié dans le masque I<flags>, mais le noyau n'a "
"pas été configuré avec l'option B<CONFIG_PID_NS>."

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "B<CLONE_NEWUTS> was specified in the I<flags> mask, but the kernel was "
#| "not configured with the B<CONFIG_UTS_NS> option."
msgid ""
"B<CLONE_NEWUTS> was specified in I<flags>, but the kernel was not configured "
"with the B<CONFIG_UTS> option."
msgstr ""
"B<CLONE_NEWUTS> a été spécifié dans le masque I<flags>, mais le noyau n'a "
"pas été configuré avec l'option B<CONFIG_UTS_NS>."

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "I<stack> is not aligned to a suitable boundary for this architecture.  "
#| "For example, on aarch64, I<stack> must be a multiple of 16."
msgid ""
"I<child_stack> is not aligned to a suitable boundary for this architecture.  "
"For example, on aarch64, I<child_stack> must be a multiple of 16."
msgstr ""
"I<stack> n'est pas alignée sur une limite adaptée à cette architecture. Par "
"exemple, sur arch64, I<stack> doit être un multiple de 16."

#.  commit f2302505775fd13ba93f034206f1e2a587017929
#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "B<CLONE_NEWPID> was specified in the I<flags> mask, but the limit on the "
#| "nesting depth of PID namespaces would have been exceeded; see "
#| "B<pid_namespaces>(7)."
msgid ""
"B<CLONE_NEWPID> was specified in flags, but the limit on the nesting depth "
"of PID namespaces would have been exceeded; see B<pid_namespaces>(7)."
msgstr ""
"B<CLONE_NEWPID> a été spécifié dans le masque I<flags>, et l'appel "
"provoquerait un dépassement de la limite du nombre maximal d'espaces de noms "
"utilisateur imbriqués. Consultez B<pid_namespaces>(7)."

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "B<CLONE_NEWUSER> was specified in the I<flags> mask, and the call would "
#| "cause the limit on the number of nested user namespaces to be exceeded.  "
#| "See B<user_namespaces>(7)."
msgid ""
"B<CLONE_NEWUSER> was specified in I<flags>, and the call would cause the "
"limit on the number of nested user namespaces to be exceeded.  See "
"B<user_namespaces>(7)."
msgstr ""
"B<CLONE_NEWUSER> a été spécifié dans le masque I<flags>, et l'appel "
"provoquerait un dépassement de la limite du nombre maximal d'espaces de noms "
"utilisateur imbriqués. Consultez B<user_namespaces>(7)."

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "One of the values in the I<flags> mask specified the creation of a new "
#| "user namespace, but doing so would have caused the limit defined by the "
#| "corresponding file in I</proc/sys/user> to be exceeded.  For further "
#| "details, see B<namespaces>(7)."
msgid ""
"One of the values in I<flags> specified the creation of a new user "
"namespace, but doing so would have caused the limit defined by the "
"corresponding file in I</proc/sys/user> to be exceeded.  For further "
"details, see B<namespaces>(7)."
msgstr ""
"Une des valeurs dans le masque I<flags> indiquait de créer un nouvel espace "
"de noms utilisateur, mais cela aurait provoqué un dépassement de la limite "
"définie par le fichier correspondant dans I</proc/sys/user>. Pour plus de "
"détails, voir B<namespaces>(7)."

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "B<CLONE_NEWUSER> was specified in the I<flags> mask, but either the "
#| "effective user ID or the effective group ID of the caller does not have a "
#| "mapping in the parent namespace (see B<user_namespaces>(7))."
msgid ""
"B<CLONE_NEWUSER> was specified in I<flags>, but either the effective user ID "
"or the effective group ID of the caller does not have a mapping in the "
"parent namespace (see B<user_namespaces>(7))."
msgstr ""
"B<CLONE_NEWUSER> a été spécifié dans le masque I<flags>, mais l'identifiant "
"utilisateur effectif ou l'identifiant de groupe effectif de l'appelant n'a "
"pas de correspondance dans l'espace de noms parent (consultez "
"B<user_namespaces>(7))."

#.  commit 3151527ee007b73a0ebd296010f1c0454a919c7d
#.  FIXME What is the rationale for this restriction?
#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "B<CLONE_NEWUSER> was specified in the I<flags> mask and the caller is in "
#| "a chroot environment (i.e., the caller's root directory does not match "
#| "the root directory of the mount namespace in which it resides)."
msgid ""
"B<CLONE_NEWUSER> was specified in I<flags> and the caller is in a chroot "
"environment (i.e., the caller's root directory does not match the root "
"directory of the mount namespace in which it resides)."
msgstr ""
"B<CLONE_NEWUSER> a été spécifié dans le masque I<flags> et l'appelant se "
"trouve dans un environnement chroot (c'est-à-dire que le répertoire racine "
"de l'appelant ne correspond pas au répertoire racine de l'espace de noms "
"montage dans lequel il se trouve)."

#.  .SH VERSIONS
#.  There is no entry for
#.  .BR clone ()
#.  in libc5.
#.  glibc2 provides
#.  .BR clone ()
#.  as described in this manual page.
#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "B<CLONE_NEWUSER> was specified in the I<flags> mask, and the limit on the "
#| "number of nested user namespaces would be exceeded.  See the discussion "
#| "of the B<ENOSPC> error above."
msgid ""
"B<CLONE_NEWUSER> was specified in I<flags>, and the limit on the number of "
"nested user namespaces would be exceeded.  See the discussion of the "
"B<ENOSPC> error above."
msgstr ""
"B<CLONE_NEWUSER> a été spécifié dans le masque I<flags>, et l'appel "
"provoquerait un dépassement de la limite du nombre maximal d'espaces de noms "
"utilisateur imbriqués. Voir le point sur l'erreur B<ENOSPC> ci-dessus."

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "This call is Linux-specific, and should not be used in programs intended "
#| "to be portable."
msgid ""
"B<clone>()  is Linux-specific and should not be used in programs intended to "
"be portable."
msgstr ""
"Cet appel système est spécifique à Linux et ne devrait pas être employé dans "
"des programmes destinés à être portables."

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "Handlers registered using B<pthread_atfork>(3)  are not executed during a "
#| "clone call."
msgid ""
"Handlers registered using B<pthread_atfork>(3)  are not executed during a "
"call to B<clone>()."
msgstr ""
"Les gestionnaires enregistrés en utilisant B<pthread_atfork>(3) ne sont pas "
"exécutés pendant un appel clone."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"For a while there was B<CLONE_DETACHED> (introduced in 2.5.32): parent wants "
"no child-exit signal.  In Linux 2.6.2, the need to give this flag together "
"with B<CLONE_THREAD> disappeared.  This flag is still defined, but has no "
"effect."
msgstr ""

#. type: SH
#: opensuse-leap-15-5
#, no-wrap
msgid "EXAMPLE"
msgstr "EXEMPLE"

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy, no-wrap
#| msgid ""
#| "#define _GNU_SOURCE\n"
#| "#include E<lt>sys/wait.hE<gt>\n"
#| "#include E<lt>sys/utsname.hE<gt>\n"
#| "#include E<lt>sched.hE<gt>\n"
#| "#include E<lt>string.hE<gt>\n"
#| "#include E<lt>stdio.hE<gt>\n"
#| "#include E<lt>stdlib.hE<gt>\n"
#| "#include E<lt>unistd.hE<gt>\n"
#| "#include E<lt>sys/mman.hE<gt>\n"
msgid ""
"#define _GNU_SOURCE\n"
"#include E<lt>sys/wait.hE<gt>\n"
"#include E<lt>sys/utsname.hE<gt>\n"
"#include E<lt>sched.hE<gt>\n"
"#include E<lt>string.hE<gt>\n"
"#include E<lt>stdio.hE<gt>\n"
"#include E<lt>stdlib.hE<gt>\n"
"#include E<lt>unistd.hE<gt>\n"
msgstr ""
"#define _GNU_SOURCE\n"
"#include E<lt>sys/wait.hE<gt>\n"
"#include E<lt>sys/utsname.hE<gt>\n"
"#include E<lt>sched.hE<gt>\n"
"#include E<lt>string.hE<gt>\n"
"#include E<lt>stdio.hE<gt>\n"
"#include E<lt>stdlib.hE<gt>\n"
"#include E<lt>unistd.hE<gt>\n"
"#include E<lt>sys/mman.hE<gt>\n"

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy, no-wrap
#| msgid "    /* Allocate memory to be used for the stack of the child */\n"
msgid "    /* Allocate stack for child */\n"
msgstr "    /* Allouer la mémoire à utiliser pour la pile du processus enfant */\n"

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy, no-wrap
#| msgid "    stackTop = stack + STACK_SIZE;  /* Assume stack grows downward */\n"
msgid ""
"    stack = malloc(STACK_SIZE);\n"
"    if (stack == NULL)\n"
"        errExit(\"malloc\");\n"
"    stackTop = stack + STACK_SIZE;  /* Assume stack grows downward */\n"
msgstr ""
"    stackTop = stack + STACK_SIZE;  /* On suppose que la pile grandit vers\n"
"                                       le bas */\n"

#. type: Plain text
#: opensuse-leap-15-5
#, no-wrap
msgid ""
"    pid = clone(childFunc, stackTop, CLONE_NEWUTS | SIGCHLD, argv[1]);\n"
"    if (pid == -1)\n"
"        errExit(\"clone\");\n"
"    printf(\"clone() returned %ld\\en\", (long) pid);\n"
msgstr ""
"    pid = clone(childFunc, stackTop, CLONE_NEWUTS | SIGCHLD, argv[1]);\n"
"    if (pid == -1)\n"
"        errExit(\"clone\");\n"
"    printf(\"clone() a renvoyé %ld\\en\", (long) pid);\n"

#. type: Plain text
#: opensuse-leap-15-5
#, fuzzy
#| msgid ""
#| "B<fork>(2), B<futex>(2), B<getpid>(2), B<gettid>(2), B<kcmp>(2), "
#| "B<mmap>(2), B<pidfd_open>(2), B<set_thread_area>(2), "
#| "B<set_tid_address>(2), B<setns>(2), B<tkill>(2), B<unshare>(2), "
#| "B<wait>(2), B<capabilities>(7), B<namespaces>(7), B<pthreads>(7)"
msgid ""
"B<fork>(2), B<futex>(2), B<getpid>(2), B<gettid>(2), B<kcmp>(2), "
"B<set_thread_area>(2), B<set_tid_address>(2), B<setns>(2), B<tkill>(2), "
"B<unshare>(2), B<wait>(2), B<capabilities>(7), B<namespaces>(7), "
"B<pthreads>(7)"
msgstr ""
"B<fork>(2), B<futex>(2), B<getpid>(2), B<gettid>(2), B<kcmp>(2), B<mmap>(2), "
"B<pidfd_open>(2), B<set_thread_area>(2), B<set_tid_address>(2), B<setns>(2), "
"B<tkill>(2), B<unshare>(2), B<wait>(2), B<capabilities>(7), "
"B<namespaces>(7), B<pthreads>(7)"

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"This page is part of release 4.16 of the Linux I<man-pages> project.  A "
"description of the project, information about reporting bugs, and the latest "
"version of this page, can be found at \\%https://www.kernel.org/doc/man-"
"pages/."
msgstr ""
"Cette page fait partie de la publication 4.16 du projet I<man-pages> Linux. "
"Une description du projet et des instructions pour signaler des anomalies et "
"la dernière version de cette page peuvent être trouvées à l'adresse \\"
"%https://www.kernel.org/doc/man-pages/."
