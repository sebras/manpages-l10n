# French translation of manpages
# This file is distributed under the same license as the manpages-l10n package.
# Copyright © of this file:
# Christophe Blaess <https://www.blaess.fr/christophe/>, 1996-2003.
# Stéphan Rafin <stephan.rafin@laposte.net>, 2002.
# Thierry Vignaud <tvignaud@mandriva.com>, 1999, 2002.
# François Micaux, 2002.
# Alain Portal <aportal@univ-montp2.fr>, 2003-2008.
# Jean-Philippe Guérard <fevrier@tigreraye.org>, 2005-2006.
# Jean-Luc Coulon (f5ibh) <jean-luc.coulon@wanadoo.fr>, 2006-2007.
# Julien Cristau <jcristau@debian.org>, 2006-2007.
# Thomas Huriaux <thomas.huriaux@gmail.com>, 2006-2008.
# Nicolas François <nicolas.francois@centraliens.net>, 2006-2008.
# Florentin Duneau <fduneau@gmail.com>, 2006-2010.
# Simon Paillard <simon.paillard@resel.enst-bretagne.fr>, 2006, 2013.
# Denis Barbier <barbier@debian.org>, 2006, 2010.
# David Prévot <david@tilapin.org>, 2010, 2012-2014.
# Grégoire Scano <gregoire.scano@malloc.fr>, 2020-2021.
msgid ""
msgstr ""
"Project-Id-Version: perkamon\n"
"POT-Creation-Date: 2022-10-17 20:34+0200\n"
"PO-Revision-Date: 2021-08-03 12:26+0800\n"
"Last-Translator: Grégoire Scano <gregoire.scano@malloc.fr>\n"
"Language-Team: French <debian-l10n-french@lists.debian.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n > 1;\n"
"X-Generator: Weblate 3.1.1\n"

#. type: TH
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "MALLOC"
msgstr "MALLOC"

#. type: TH
#: archlinux
#, no-wrap
msgid "2022-09-09"
msgstr "9 septembre 2022"

#. type: TH
#: archlinux
#, no-wrap
msgid "Linux man-pages (unreleased)"
msgstr ""

#. type: SH
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "NAME"
msgstr "NOM"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"malloc, free, calloc, realloc, reallocarray - allocate and free dynamic "
"memory"
msgstr ""
"malloc, free, calloc, realloc, reallocarray - Allocation et libération de "
"mémoire dynamique"

#. type: SH
#: archlinux
#, no-wrap
msgid "LIBRARY"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Standard C library (I<libc>, I<-lc>)"
msgstr ""

#. type: SH
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "SYNOPSIS"
msgstr "SYNOPSIS"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<#include E<lt>stdlib.hE<gt>>\n"
msgstr "B<#include E<lt>stdlib.hE<gt>>\n"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid ""
"B<void *malloc(size_t >I<size>B<);>\n"
"B<void free(void >I<*ptr>B<);>\n"
"B<void *calloc(size_t >I<nmemb>B<, size_t >I<size>B<);>\n"
"B<void *realloc(void >I<*ptr>B<, size_t >I<size>B<);>\n"
"B<void *reallocarray(void >I<*ptr>B<, size_t >I<nmemb>B<, size_t >I<size>B<);>\n"
msgstr ""
"B<void *malloc(size_t >I<size>B<);>\n"
"B<void free(void >I<*ptr>B<);>\n"
"B<void *calloc(size_t >I<nmemb>B<, size_t >I<size>B<);>\n"
"B<void *realloc(void >I<*ptr>B<, size_t >I<size>B<);>\n"
"B<void *reallocarray(void >I<*ptr>B<, size_t >I<nmemb>B<, size_t >I<size>B<);>\n"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"Feature Test Macro Requirements for glibc (see B<feature_test_macros>(7)):"
msgstr ""
"Exigences de macros de test de fonctionnalités pour la glibc (consulter "
"B<feature_test_macros>(7)) :"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid "B<reallocarray>():"
msgstr "B<reallocarray>() :"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid ""
"    Since glibc 2.29:\n"
"        _DEFAULT_SOURCE\n"
"    Glibc 2.28 and earlier:\n"
"        _GNU_SOURCE\n"
msgstr ""
"    Depuis la glibc 2.29 :\n"
"        _DEFAULT_SOURCE\n"
"    Pour la glibc 2.28 et antérieure :\n"
"        _GNU_SOURCE\n"

#. type: SH
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "DESCRIPTION"
msgstr "DESCRIPTION"

#. type: SS
#: archlinux
#, fuzzy, no-wrap
#| msgid "B<malloc>(3)"
msgid "malloc()"
msgstr "B<malloc>(3)"

#. type: Plain text
#: archlinux
#, fuzzy
#| msgid ""
#| "The B<malloc>()  function allocates I<size> bytes and returns a pointer "
#| "to the allocated memory.  I<The memory is not initialized>.  If I<size> "
#| "is 0, then B<malloc>()  returns either NULL, or a unique pointer value "
#| "that can later be successfully passed to B<free>()."
msgid ""
"The B<malloc>()  function allocates I<size> bytes and returns a pointer to "
"the allocated memory.  I<The memory is not initialized>.  If I<size> is 0, "
"then B<malloc>()  returns a unique pointer value that can later be "
"successfully passed to B<free>().  (See \"Nonportable behavior\" for "
"portability issues.)"
msgstr ""
"La fonction B<malloc>() alloue I<size> octets et renvoie un pointeur sur la "
"mémoire allouée. I<Le contenu de la zone de mémoire n'est pas initialisé>. "
"Si I<size> est nulle, B<malloc> renvoie soit NULL ou un unique pointeur qui "
"pourra être passé ultérieurement à B<free>() avec succès."

#. type: SS
#: archlinux
#, no-wrap
msgid "free()"
msgstr ""

#. type: Plain text
#: archlinux
#, fuzzy
#| msgid ""
#| "The B<free>()  function frees the memory space pointed to by I<ptr>, "
#| "which must have been returned by a previous call to B<malloc>(), "
#| "B<calloc>(), or B<realloc>().  Otherwise, or if I<free(ptr)> has already "
#| "been called before, undefined behavior occurs.  If I<ptr> is NULL, no "
#| "operation is performed."
msgid ""
"The B<free>()  function frees the memory space pointed to by I<ptr>, which "
"must have been returned by a previous call to B<malloc>()  or related "
"functions.  Otherwise, or if I<ptr> has already been freed, undefined "
"behavior occurs.  If I<ptr> is NULL, no operation is performed."
msgstr ""
"La fonction B<free>() libère l'espace mémoire pointé par I<ptr> qui doit "
"avoir été obtenu lors d'un appel antérieur à B<malloc>(), B<calloc>() ou "
"B<realloc>(). Autrement, ou si I<free(ptr)> a déjà été appelé précédemment, "
"le comportement est indéterminé. Si I<ptr> est NULL, aucune opération n'est "
"effectuée."

#. type: SS
#: archlinux
#, fuzzy, no-wrap
#| msgid "B<malloc>(3)"
msgid "calloc()"
msgstr "B<malloc>(3)"

#. type: Plain text
#: archlinux
#, fuzzy
#| msgid ""
#| "The B<calloc>()  function allocates memory for an array of I<nmemb> "
#| "elements of I<size> bytes each and returns a pointer to the allocated "
#| "memory.  The memory is set to zero.  If I<nmemb> or I<size> is 0, then "
#| "B<calloc>()  returns either NULL, or a unique pointer value that can "
#| "later be successfully passed to B<free>()."
msgid ""
"The B<calloc>()  function allocates memory for an array of I<nmemb> elements "
"of I<size> bytes each and returns a pointer to the allocated memory.  The "
"memory is set to zero.  If I<nmemb> or I<size> is 0, then B<calloc>()  "
"returns a unique pointer value that can later be successfully passed to "
"B<free>()."
msgstr ""
"La fonction B<calloc>() alloue de la mémoire pour un tableau de I<nmemb> "
"éléments de taille I<size> octets chacun et renvoie un pointeur sur la "
"mémoire allouée. La zone mémoire est initialisée à 0. Si I<nmemb> ou I<size> "
"vaut 0, B<calloc>() renvoie alors NULL ou une valeur de pointeur unique qui "
"pourra être passée ultérieurement à B<free>() avec succès."

#. type: Plain text
#: archlinux
#, fuzzy
#| msgid ""
#| "The B<calloc>()  function allocates memory for an array of I<nmemb> "
#| "elements of I<size> bytes each and returns a pointer to the allocated "
#| "memory.  The memory is set to zero.  If I<nmemb> or I<size> is 0, then "
#| "B<calloc>()  returns either NULL, or a unique pointer value that can "
#| "later be successfully passed to B<free>().  If the multiplication of "
#| "I<nmemb> and I<size> would result in integer overflow, then B<calloc>()  "
#| "returns an error.  By contrast, an integer overflow would not be detected "
#| "in the following call to B<malloc>(), with the result that an incorrectly "
#| "sized block of memory would be allocated:"
msgid ""
"If the multiplication of I<nmemb> and I<size> would result in integer "
"overflow, then B<calloc>()  returns an error.  By contrast, an integer "
"overflow would not be detected in the following call to B<malloc>(), with "
"the result that an incorrectly sized block of memory would be allocated:"
msgstr ""
"La fonction B<calloc>() alloue la mémoire nécessaire pour un tableau de "
"I<nmemb> éléments de I<size> octets chacun et renvoie un pointeur vers la "
"mémoire allouée. Cette zone mémoire est remplie avec des zéros. Si I<nmemb> "
"ou si I<size> est nulle, B<calloc> renvoie alors NULL ou un unique pointeur "
"qui pourra être passé ultérieurement à B<free>() avec succès. Si la "
"multiplication de I<nmemb> et I<size> résulte en un dépassement d'entier, "
"B<calloc>() renverra alors une erreur. En revanche, un dépassement d'entier "
"ne serait pas détecté dans l'appel suivant à B<malloc>(), mais aurait pour "
"conséquence l'allocation d'un bloc mémoire de taille incorrecte :"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "malloc(nmemb * size);\n"
msgstr "malloc(nmemb * size);\n"

#. type: SS
#: archlinux
#, fuzzy, no-wrap
#| msgid "B<reallocarray>():"
msgid "realloc()"
msgstr "B<reallocarray>() :"

#. type: Plain text
#: archlinux
#, fuzzy
#| msgid ""
#| "The B<realloc>()  function changes the size of the memory block pointed "
#| "to by I<ptr> to I<size> bytes.  The contents will be unchanged in the "
#| "range from the start of the region up to the minimum of the old and new "
#| "sizes.  If the new size is larger than the old size, the added memory "
#| "will I<not> be initialized.  If I<ptr> is NULL, then the call is "
#| "equivalent to I<malloc(size)>, for all values of I<size>; if I<size> is "
#| "equal to zero, and I<ptr> is not NULL, then the call is equivalent to "
#| "I<free(ptr)>.  Unless I<ptr> is NULL, it must have been returned by an "
#| "earlier call to B<malloc>(), B<calloc>(), or B<realloc>().  If the area "
#| "pointed to was moved, a I<free(ptr)> is done."
msgid ""
"The B<realloc>()  function changes the size of the memory block pointed to "
"by I<ptr> to I<size> bytes.  The contents of the memory will be unchanged in "
"the range from the start of the region up to the minimum of the old and new "
"sizes.  If the new size is larger than the old size, the added memory will "
"I<not> be initialized."
msgstr ""
"La fonction B<realloc>() modifie la taille du bloc de mémoire pointé par "
"I<ptr> à I<size> octets. Le contenu de la mémoire entre la zone de départ et "
"le minimum des nouvelle et ancienne tailles n'est pas modifié. Si la "
"nouvelle taille est plus grande que l'ancienne taille, le contenu de la zone "
"de mémoire nouvellement allouée n'est I<pas> initialisé. Si I<ptr> est NULL, "
"l'appel est équivalent à I<malloc(size)>, pour toute valeur de I<size> ; si "
"I<size> vaut zéro et que I<ptr> est non NULL, l'appel est alors équivalent à "
"I<free(ptr)>. Si I<ptr> n'est pas NULL, il doit avoir été obtenu par un "
"appel antérieur à B<malloc>(), B<calloc>() ou B<realloc>(). Si la zone "
"pointée était déplacée, un appel à I<free(ptr)> est effectué."

#. type: Plain text
#: archlinux
msgid ""
"If I<ptr> is NULL, then the call is equivalent to I<malloc(size)>, for all "
"values of I<size>."
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"If I<size> is equal to zero, and I<ptr> is not NULL, then the call is "
"equivalent to I<free(ptr)> (but see \"Nonportable behavior\" for portability "
"issues)."
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"Unless I<ptr> is NULL, it must have been returned by an earlier call to "
"B<malloc> or related functions.  If the area pointed to was moved, a "
"I<free(ptr)> is done."
msgstr ""

#. type: SS
#: archlinux
#, fuzzy, no-wrap
#| msgid "B<reallocarray>():"
msgid "reallocarray()"
msgstr "B<reallocarray>() :"

#. type: Plain text
#: archlinux
#, fuzzy
#| msgid ""
#| "The B<reallocarray>()  function changes the size of the memory block "
#| "pointed to by I<ptr> to be large enough for an array of I<nmemb> "
#| "elements, each of which is I<size> bytes.  It is equivalent to the call"
msgid ""
"The B<reallocarray>()  function changes the size of (and possibly moves)  "
"the memory block pointed to by I<ptr> to be large enough for an array of "
"I<nmemb> elements, each of which is I<size> bytes.  It is equivalent to the "
"call"
msgstr ""
"La fonction B<reallocarray>() change la taille du bloc mémoire pointé par "
"I<ptr> pour qu'il soit suffisamment grand pour contenir un tableau de "
"I<nmemb> éléments faisant chacun I<size> octets. C'est équivalent à l'appel"

#. type: Plain text
#: archlinux
#, fuzzy, no-wrap
#| msgid "    realloc(ptr, nmemb * size);\n"
msgid "realloc(ptr, nmemb * size);\n"
msgstr "    realloc(ptr, nmemb * size);\n"

#. type: Plain text
#: archlinux
#, fuzzy
#| msgid ""
#| "However, unlike that B<realloc>()  call, B<reallocarray>()  fails safely "
#| "in the case where the multiplication would overflow.  If such an overflow "
#| "occurs, B<reallocarray>()  returns NULL, sets I<errno> to B<ENOMEM>, and "
#| "leaves the original block of memory unchanged."
msgid ""
"However, unlike that B<realloc>()  call, B<reallocarray>()  fails safely in "
"the case where the multiplication would overflow.  If such an overflow "
"occurs, B<reallocarray>()  returns an error."
msgstr ""
"Cependant, contrairement à cet appel de B<realloc>(), B<reallocarray>() "
"échoue sans danger dans le cas où la multiplication entraînerait un "
"dépassement. Si un tel dépassement se produit, B<reallocarray>() renvoie "
"NULL, fixe I<errno> à B<ENOMEM> et laisse le bloc mémoire originel inchangé."

#. type: SH
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "RETURN VALUE"
msgstr "VALEUR RENVOYÉE"

#. type: Plain text
#: archlinux
#, fuzzy
#| msgid ""
#| "The B<malloc>()  and B<calloc>()  functions return a pointer to the "
#| "allocated memory, which is suitably aligned for any built-in type.  On "
#| "error, these functions return NULL.  NULL may also be returned by a "
#| "successful call to B<malloc>()  with a I<size> of zero, or by a "
#| "successful call to B<calloc>()  with I<nmemb> or I<size> equal to zero."
msgid ""
"The B<malloc>(), B<calloc>(), B<realloc>(), and B<reallocarray>()  functions "
"return a pointer to the allocated memory, which is suitably aligned for any "
"type that fits into the requested size or less.  On error, these functions "
"return NULL and set I<errno>.  Attempting to allocate more than "
"B<PTRDIFF_MAX> bytes is considered an error, as an object that large could "
"cause later pointer subtraction to overflow."
msgstr ""
"Les fonctions B<malloc>() et B<calloc>() renvoient un pointeur vers la "
"mémoire allouée qui est correctement alignée pour n'importe quel type "
"interne. Si elles échouent, elles renvoient NULL. NULL peut également être "
"renvoyé par un appel réussi à B<malloc>() avec un argument I<size> égal à "
"zéro ou par un appel réussi de B<calloc>() avec I<nmemb> ou I<size> égal à "
"zéro."

#. type: Plain text
#: archlinux
#, fuzzy
#| msgid "The B<free>()  function returns no value."
msgid "The B<free>()  function returns no value, and preserves I<errno>."
msgstr "La fonction B<free>() ne renvoie pas de valeur."

#. type: Plain text
#: archlinux
#, fuzzy
#| msgid ""
#| "The B<realloc>()  function returns a pointer to the newly allocated "
#| "memory, which is suitably aligned for any built-in type, or NULL if the "
#| "request failed.  The returned pointer may be the same as I<ptr> if the "
#| "allocation was not moved (e.g., there was room to expand the allocation "
#| "in-place), or different from I<ptr> if the allocation was moved to a new "
#| "address.  If I<size> was equal to 0, either NULL or a pointer suitable to "
#| "be passed to B<free>()  is returned.  If B<realloc>()  fails, the "
#| "original block is left untouched; it is not freed or moved."
msgid ""
"The B<realloc>()  and B<reallocarray>()  functions return NULL if I<ptr> is "
"not NULL and the requested size is zero; this is not considered an error.  "
"(See \"Nonportable behavior\" for portability issues.)  Otherwise, the "
"returned pointer may be the same as I<ptr> if the allocation was not moved "
"(e.g., there was room to expand the allocation in-place), or different from "
"I<ptr> if the allocation was moved to a new address.  If these functions "
"fail, the original block is left untouched; it is not freed or moved."
msgstr ""
"La fonction B<realloc>() renvoie un pointeur sur la mémoire nouvellement "
"allouée et qui est correctement alignée pour n'importe quel type interne, ou "
"NULL si la requête échoue. Le pointeur renvoyé peut être identique à I<ptr> "
"si la zone mémoire n'est pas déplacée (par exemple s'il y a de la place pour "
"l'étendre à son emplacement) ou peut être différent de I<ptr> si la zone "
"mémoire est déplacée à une nouvelle adresse. Si I<size> vaut zéro, "
"B<realloc>() renvoie NULL ou un pointeur acceptable pour B<free>(). Si "
"B<realloc>() échoue, le bloc mémoire original reste intact ; il n'est ni "
"libéré ni déplacé."

#. type: SH
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "ERRORS"
msgstr "ERREURS"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"B<calloc>(), B<malloc>(), B<realloc>(), and B<reallocarray>()  can fail with "
"the following error:"
msgstr ""
"B<calloc>(), B<malloc>(), B<realloc>() et B<reallocarray>() peuvent échouer "
"avec l'erreur suivante :"

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<ENOMEM>"
msgstr "B<ENOMEM>"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"Out of memory.  Possibly, the application hit the B<RLIMIT_AS> or "
"B<RLIMIT_DATA> limit described in B<getrlimit>(2)."
msgstr ""
"Plus de mémoire. Il est possible que l'application ait atteint les limites "
"B<RLIMIT_AS> ou B<RLIMIT_DATA> décrites dans B<getrlimit>(2)."

#. type: SH
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "VERSIONS"
msgstr "VERSIONS"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid "B<reallocarray>()  first appeared in glibc in version 2.26."
msgstr ""
"B<reallocarray>() est apparue pour la première fois dans la version 2.26 de "
"la glibc."

#. type: Plain text
#: archlinux
msgid ""
"B<malloc>()  and related functions rejected sizes greater than "
"B<PTRDIFF_MAX> starting in glibc 2.30."
msgstr ""

#. type: Plain text
#: archlinux
msgid "B<free>()  preserved I<errno> starting in glibc 2.33."
msgstr ""

#. type: SH
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "ATTRIBUTES"
msgstr "ATTRIBUTS"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"For an explanation of the terms used in this section, see B<attributes>(7)."
msgstr ""
"Pour une explication des termes utilisés dans cette section, consulter "
"B<attributes>(7)."

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "Interface"
msgstr "Interface"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "Attribute"
msgstr "Attribut"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "Value"
msgstr "Valeur"

#. type: tbl table
#: archlinux debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-tumbleweed
#, no-wrap
msgid ""
"B<malloc>(),\n"
"B<free>(),\n"
"B<calloc>(),\n"
"B<realloc>()"
msgstr ""
"B<malloc>(),\n"
"B<free>(),\n"
"B<calloc>(),\n"
"B<realloc>()"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "Thread safety"
msgstr "Sécurité des threads"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "MT-Safe"
msgstr "MT-Safe"

#. type: SH
#: archlinux
#, no-wrap
msgid "STANDARDS"
msgstr "STANDARDS"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"B<malloc>(), B<free>(), B<calloc>(), B<realloc>(): POSIX.1-2001, "
"POSIX.1-2008, C89, C99."
msgstr ""
"B<malloc>(), B<free>(), B<calloc>(), B<realloc>() : POSIX.1-2001, "
"POSIX.1-2008, C89, C99."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"B<reallocarray>()  is a nonstandard extension that first appeared in OpenBSD "
"5.6 and FreeBSD 11.0."
msgstr ""
"B<reallocarray>() est une extension non standard apparue pour la première "
"fois dans OpenBSD 5.6 et FreeBSD 11.0."

#. type: SH
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "NOTES"
msgstr "NOTES"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"By default, Linux follows an optimistic memory allocation strategy.  This "
"means that when B<malloc>()  returns non-NULL there is no guarantee that the "
"memory really is available.  In case it turns out that the system is out of "
"memory, one or more processes will be killed by the OOM killer.  For more "
"information, see the description of I</proc/sys/vm/overcommit_memory> and I</"
"proc/sys/vm/oom_adj> in B<proc>(5), and the Linux kernel source file "
"I<Documentation/vm/overcommit-accounting.rst>."
msgstr ""
"Par défaut, Linux suit une stratégie d'allocation optimiste. Cela signifie "
"que lorsque B<malloc>() ne renvoie pas NULL, il n'y a aucune garantie que la "
"mémoire soit véritablement disponible. S'il devait s'avérer que le système "
"manque de mémoire, un ou plusieurs processus seront tués par l'infâme «\\ "
"OOM killer\\ » (gestionnaire de mémoire). Pour plus d'informations, "
"consultez la description de I</proc/sys/vm/overcommit_memory> et I</proc/sys/"
"vm/oom_adj> dans B<proc>(5), ainsi que le fichier I<Documentation/vm/"
"overcommit-accounting> des sources du noyau Linux."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"Normally, B<malloc>()  allocates memory from the heap, and adjusts the size "
"of the heap as required, using B<sbrk>(2).  When allocating blocks of memory "
"larger than B<MMAP_THRESHOLD> bytes, the glibc B<malloc>()  implementation "
"allocates the memory as a private anonymous mapping using B<mmap>(2).  "
"B<MMAP_THRESHOLD> is 128\\ kB by default, but is adjustable using "
"B<mallopt>(3).  Prior to Linux 4.7 allocations performed using B<mmap>(2)  "
"were unaffected by the B<RLIMIT_DATA> resource limit; since Linux 4.7, this "
"limit is also enforced for allocations performed using B<mmap>(2)."
msgstr ""
"En général, B<malloc>() alloue la mémoire depuis le tas, et ajuste la taille "
"du tas en conséquence avec B<sbrk>(2). Lorsque les blocs de mémoire alloués "
"sont plus larges que B<MMAP_THRESHOLD> octets, l'implémentation de la glibc "
"de B<malloc> alloue la mémoire selon une projection anonyme privée avec "
"B<mmap>(2). B<MMAP_THRESHOLD> vaut 128\\ ko par défaut et il est ajustable "
"avec B<mallopt>(3). Avant Linux 4.7, les allocations réalisées avec "
"B<mmap>(2) n’étaient pas affectées par la limitation de ressource "
"B<RLIMIT_DATA> ; depuis Linux 4.7, cette limite est aussi prise en compte "
"pour les allocations faites avec B<mmap>(2)."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"To avoid corruption in multithreaded applications, mutexes are used "
"internally to protect the memory-management data structures employed by "
"these functions.  In a multithreaded application in which threads "
"simultaneously allocate and free memory, there could be contention for these "
"mutexes.  To scalably handle memory allocation in multithreaded "
"applications, glibc creates additional I<memory allocation arenas> if mutex "
"contention is detected.  Each arena is a large region of memory that is "
"internally allocated by the system (using B<brk>(2)  or B<mmap>(2)), and "
"managed with its own mutexes."
msgstr ""
"Pour éviter les corruptions d'applications multithread, les mutex sont "
"utilisés en interne pour protéger les structures de données de gestion de "
"mémoire utilisées dans ces fonctions. Dans une application multithread où "
"les threads allouent et libèrent la mémoire en même temps, ces mutex "
"risquent d'entrer en conflit. Pour gérer l'allocation de mémoire de façon "
"évolutive dans les applications multithread, la glibc crée des I<domaines "
"d'allocation mémoire> si un conflit de mutex est détecté. Chaque domaine est "
"un grand espace de mémoire qui est alloué en interne par le système (en "
"utilisant B<brk>(2) ou B<mmap>(2)) et géré avec ses propres mutex."

#. type: Plain text
#: archlinux
msgid ""
"If your program uses a private memory allocator, it should do so by "
"replacing B<malloc>(), B<free>(), B<calloc>(), and B<realloc>().  The "
"replacement functions must implement the documented glibc behaviors, "
"including I<errno> handling, size-zero allocations, and overflow checking; "
"otherwise, other library routines may crash or operate incorrectly.  For "
"example, if the replacement I<free>()  does not preserve errno, then "
"seemingly unrelated library routines may fail without having a valid reason "
"in I<errno>.  Private memory allocators may also need to replace other glibc "
"functions; see \"Replacing malloc\" in the glibc manual for details."
msgstr ""

#. type: Plain text
#: archlinux
#, fuzzy
#| msgid ""
#| "Crashes in B<malloc>(), B<calloc>(), B<realloc>(), or B<free>()  are "
#| "almost always related to heap corruption, such as overflowing an "
#| "allocated chunk or freeing the same pointer twice."
msgid ""
"Crashes in memory allocators are almost always related to heap corruption, "
"such as overflowing an allocated chunk or freeing the same pointer twice."
msgstr ""
"Lorsqu'un programme échoue durant un appel à B<malloc>(), B<calloc>(), "
"B<realloc>() ou B<free>(), cela est presque toujours le signe d'une "
"corruption du tas. Cela survient généralement en cas de débordement d'un "
"bloc mémoire alloué ou en libérant deux fois le même pointeur."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"The B<malloc>()  implementation is tunable via environment variables; see "
"B<mallopt>(3)  for details."
msgstr ""
"L'implémentation de B<malloc>() est personnalisable à l'aide des variables "
"d'environnement. Pour plus de précisions, consultez B<mallopt>(3)."

#. type: SS
#: archlinux debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-tumbleweed
#, no-wrap
msgid "Nonportable behavior"
msgstr "Comportement non portable"

#. type: Plain text
#: archlinux
#, fuzzy
#| msgid ""
#| "The behavior of B<realloc>()  when I<size> is equal to zero, and I<ptr> "
#| "is not NULL, is glibc specific; other implementations may return NULL, "
#| "and set I<errno>.  Portable POSIX programs should avoid it.  See "
#| "B<realloc>(3p)."
msgid ""
"The behavior of these functions when the requested size is zero is glibc "
"specific; other implementations may return NULL without setting I<errno>, "
"and portable POSIX programs should tolerate such behavior.  See "
"B<realloc>(3p)."
msgstr ""
"Le comportement de B<realloc>() lorsque I<size> est égal à 0 et I<ptr> n'est "
"pas NULL est spécifique à la glibc ; d'autres implémentations peuvent "
"retourner NULL et fixer I<errno>. Les programmes POSIX portables doivent "
"l'éviter. Consultez B<realloc>(3p)."

#. type: Plain text
#: archlinux
msgid ""
"POSIX requires memory allocators to set I<errno> upon failure.  However, the "
"C standard does not require this, and applications portable to non-POSIX "
"platforms should not assume this."
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"Portable programs should not use private memory allocators, as POSIX and the "
"C standard do not allow replacement of B<malloc>(), B<free>(), B<calloc>(), "
"and B<realloc>()."
msgstr ""

#. type: SH
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "SEE ALSO"
msgstr "VOIR AUSSI"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"B<valgrind>(1), B<brk>(2), B<mmap>(2), B<alloca>(3), B<malloc_get_state>(3), "
"B<malloc_info>(3), B<malloc_trim>(3), B<malloc_usable_size>(3), "
"B<mallopt>(3), B<mcheck>(3), B<mtrace>(3), B<posix_memalign>(3)"
msgstr ""
"B<valgrind>(1), B<brk>(2), B<mmap>(2), B<alloca>(3), B<malloc_get_state>(3), "
"B<malloc_info>(3), B<malloc_trim>(3), B<malloc_usable_size>(3), "
"B<mallopt>(3), B<mcheck>(3), B<mtrace>(3), B<posix_memalign>(3)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"For details of the GNU C library implementation, see E<.UR https://"
"sourceware.org/glibc/wiki/MallocInternals> E<.UE .>"
msgstr ""
"Pour des détails sur l'implémentation de la bibliothèque GNU C, consulter E<."
"UR https://sourceware.org/glibc/wiki/MallocInternals> E<.UE .>"

#. type: TH
#: debian-bullseye
#, no-wrap
msgid "2020-06-09"
msgstr "9 juin 2020"

#. type: TH
#: debian-bullseye debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "GNU"
msgstr "GNU"

#. type: TH
#: debian-bullseye debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "Linux Programmer's Manual"
msgstr "Manuel du programmeur Linux"

#.  glibc does this:
#. type: Plain text
#: debian-bullseye debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"The B<malloc>()  function allocates I<size> bytes and returns a pointer to "
"the allocated memory.  I<The memory is not initialized>.  If I<size> is 0, "
"then B<malloc>()  returns either NULL, or a unique pointer value that can "
"later be successfully passed to B<free>()."
msgstr ""
"La fonction B<malloc>() alloue I<size> octets et renvoie un pointeur sur la "
"mémoire allouée. I<Le contenu de la zone de mémoire n'est pas initialisé>. "
"Si I<size> est nulle, B<malloc> renvoie soit NULL ou un unique pointeur qui "
"pourra être passé ultérieurement à B<free>() avec succès."

#. type: Plain text
#: debian-bullseye debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"The B<free>()  function frees the memory space pointed to by I<ptr>, which "
"must have been returned by a previous call to B<malloc>(), B<calloc>(), or "
"B<realloc>().  Otherwise, or if I<free(ptr)> has already been called before, "
"undefined behavior occurs.  If I<ptr> is NULL, no operation is performed."
msgstr ""
"La fonction B<free>() libère l'espace mémoire pointé par I<ptr> qui doit "
"avoir été obtenu lors d'un appel antérieur à B<malloc>(), B<calloc>() ou "
"B<realloc>(). Autrement, ou si I<free(ptr)> a déjà été appelé précédemment, "
"le comportement est indéterminé. Si I<ptr> est NULL, aucune opération n'est "
"effectuée."

#.  glibc does this:
#. type: Plain text
#: debian-bullseye debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-tumbleweed
msgid ""
"The B<calloc>()  function allocates memory for an array of I<nmemb> elements "
"of I<size> bytes each and returns a pointer to the allocated memory.  The "
"memory is set to zero.  If I<nmemb> or I<size> is 0, then B<calloc>()  "
"returns either NULL, or a unique pointer value that can later be "
"successfully passed to B<free>().  If the multiplication of I<nmemb> and "
"I<size> would result in integer overflow, then B<calloc>()  returns an "
"error.  By contrast, an integer overflow would not be detected in the "
"following call to B<malloc>(), with the result that an incorrectly sized "
"block of memory would be allocated:"
msgstr ""
"La fonction B<calloc>() alloue la mémoire nécessaire pour un tableau de "
"I<nmemb> éléments de I<size> octets chacun et renvoie un pointeur vers la "
"mémoire allouée. Cette zone mémoire est remplie avec des zéros. Si I<nmemb> "
"ou si I<size> est nulle, B<calloc> renvoie alors NULL ou un unique pointeur "
"qui pourra être passé ultérieurement à B<free>() avec succès. Si la "
"multiplication de I<nmemb> et I<size> résulte en un dépassement d'entier, "
"B<calloc>() renverra alors une erreur. En revanche, un dépassement d'entier "
"ne serait pas détecté dans l'appel suivant à B<malloc>(), mais aurait pour "
"conséquence l'allocation d'un bloc mémoire de taille incorrecte :"

#. type: Plain text
#: debian-bullseye opensuse-leap-15-5
msgid ""
"The B<realloc>()  function changes the size of the memory block pointed to "
"by I<ptr> to I<size> bytes.  The contents will be unchanged in the range "
"from the start of the region up to the minimum of the old and new sizes.  If "
"the new size is larger than the old size, the added memory will I<not> be "
"initialized.  If I<ptr> is NULL, then the call is equivalent to "
"I<malloc(size)>, for all values of I<size>; if I<size> is equal to zero, and "
"I<ptr> is not NULL, then the call is equivalent to I<free(ptr)>.  Unless "
"I<ptr> is NULL, it must have been returned by an earlier call to "
"B<malloc>(), B<calloc>(), or B<realloc>().  If the area pointed to was "
"moved, a I<free(ptr)> is done."
msgstr ""
"La fonction B<realloc>() modifie la taille du bloc de mémoire pointé par "
"I<ptr> à I<size> octets. Le contenu de la mémoire entre la zone de départ et "
"le minimum des nouvelle et ancienne tailles n'est pas modifié. Si la "
"nouvelle taille est plus grande que l'ancienne taille, le contenu de la zone "
"de mémoire nouvellement allouée n'est I<pas> initialisé. Si I<ptr> est NULL, "
"l'appel est équivalent à I<malloc(size)>, pour toute valeur de I<size> ; si "
"I<size> vaut zéro et que I<ptr> est non NULL, l'appel est alors équivalent à "
"I<free(ptr)>. Si I<ptr> n'est pas NULL, il doit avoir été obtenu par un "
"appel antérieur à B<malloc>(), B<calloc>() ou B<realloc>(). Si la zone "
"pointée était déplacée, un appel à I<free(ptr)> est effectué."

#. type: Plain text
#: debian-bullseye debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"The B<reallocarray>()  function changes the size of the memory block pointed "
"to by I<ptr> to be large enough for an array of I<nmemb> elements, each of "
"which is I<size> bytes.  It is equivalent to the call"
msgstr ""
"La fonction B<reallocarray>() change la taille du bloc mémoire pointé par "
"I<ptr> pour qu'il soit suffisamment grand pour contenir un tableau de "
"I<nmemb> éléments faisant chacun I<size> octets. C'est équivalent à l'appel"

#. type: Plain text
#: debian-bullseye debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "    realloc(ptr, nmemb * size);\n"
msgstr "    realloc(ptr, nmemb * size);\n"

#. type: Plain text
#: debian-bullseye debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"However, unlike that B<realloc>()  call, B<reallocarray>()  fails safely in "
"the case where the multiplication would overflow.  If such an overflow "
"occurs, B<reallocarray>()  returns NULL, sets I<errno> to B<ENOMEM>, and "
"leaves the original block of memory unchanged."
msgstr ""
"Cependant, contrairement à cet appel de B<realloc>(), B<reallocarray>() "
"échoue sans danger dans le cas où la multiplication entraînerait un "
"dépassement. Si un tel dépassement se produit, B<reallocarray>() renvoie "
"NULL, fixe I<errno> à B<ENOMEM> et laisse le bloc mémoire originel inchangé."

#. type: Plain text
#: debian-bullseye debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"The B<malloc>()  and B<calloc>()  functions return a pointer to the "
"allocated memory, which is suitably aligned for any built-in type.  On "
"error, these functions return NULL.  NULL may also be returned by a "
"successful call to B<malloc>()  with a I<size> of zero, or by a successful "
"call to B<calloc>()  with I<nmemb> or I<size> equal to zero."
msgstr ""
"Les fonctions B<malloc>() et B<calloc>() renvoient un pointeur vers la "
"mémoire allouée qui est correctement alignée pour n'importe quel type "
"interne. Si elles échouent, elles renvoient NULL. NULL peut également être "
"renvoyé par un appel réussi à B<malloc>() avec un argument I<size> égal à "
"zéro ou par un appel réussi de B<calloc>() avec I<nmemb> ou I<size> égal à "
"zéro."

#. type: Plain text
#: debian-bullseye debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-leap-15-5 opensuse-tumbleweed
msgid "The B<free>()  function returns no value."
msgstr "La fonction B<free>() ne renvoie pas de valeur."

#. type: Plain text
#: debian-bullseye debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-tumbleweed
msgid ""
"The B<realloc>()  function returns a pointer to the newly allocated memory, "
"which is suitably aligned for any built-in type, or NULL if the request "
"failed.  The returned pointer may be the same as I<ptr> if the allocation "
"was not moved (e.g., there was room to expand the allocation in-place), or "
"different from I<ptr> if the allocation was moved to a new address.  If "
"I<size> was equal to 0, either NULL or a pointer suitable to be passed to "
"B<free>()  is returned.  If B<realloc>()  fails, the original block is left "
"untouched; it is not freed or moved."
msgstr ""
"La fonction B<realloc>() renvoie un pointeur sur la mémoire nouvellement "
"allouée et qui est correctement alignée pour n'importe quel type interne, ou "
"NULL si la requête échoue. Le pointeur renvoyé peut être identique à I<ptr> "
"si la zone mémoire n'est pas déplacée (par exemple s'il y a de la place pour "
"l'étendre à son emplacement) ou peut être différent de I<ptr> si la zone "
"mémoire est déplacée à une nouvelle adresse. Si I<size> vaut zéro, "
"B<realloc>() renvoie NULL ou un pointeur acceptable pour B<free>(). Si "
"B<realloc>() échoue, le bloc mémoire original reste intact ; il n'est ni "
"libéré ni déplacé."

#. type: Plain text
#: debian-bullseye debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"On success, the B<reallocarray>()  function returns a pointer to the newly "
"allocated memory.  On failure, it returns NULL and the original block of "
"memory is left untouched."
msgstr ""
"En cas de succès, la fonction B<reallocarray>() renvoie un pointeur sur la "
"mémoire nouvellement allouée. En cas d'échec, NULL est renvoyé et le bloc "
"mémoire originel n'est pas modifié."

#. type: tbl table
#: debian-bullseye opensuse-leap-15-5
#, no-wrap
msgid ""
"B<malloc>(),\n"
"B<free>(),\n"
msgstr ""
"B<malloc>(),\n"
"B<free>(),\n"

#. type: tbl table
#: debian-bullseye opensuse-leap-15-5
#, no-wrap
msgid ".br\n"
msgstr ".br\n"

#. type: tbl table
#: debian-bullseye opensuse-leap-15-5
#, no-wrap
msgid ""
"B<calloc>(),\n"
"B<realloc>()"
msgstr ""
"B<calloc>(),\n"
"B<realloc>()"

#. type: SH
#: debian-bullseye debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "CONFORMING TO"
msgstr "CONFORMITÉ"

#. type: Plain text
#: debian-bullseye debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"SUSv2 requires B<malloc>(), B<calloc>(), and B<realloc>()  to set I<errno> "
"to B<ENOMEM> upon failure.  Glibc assumes that this is done (and the glibc "
"versions of these routines do this); if you use a private malloc "
"implementation that does not set I<errno>, then certain library routines may "
"fail without having a reason in I<errno>."
msgstr ""
"SUSv2 contraint B<malloc>(), B<calloc>() et B<realloc>() à positionner "
"I<errno> à B<ENOMEM> en cas d'échec. La glibc suppose qu'il en est ainsi (et "
"les versions glibc de ces routines le font) ; si vous utilisez une "
"implémentation personnelle de B<malloc>() qui ne positionne pas I<errno>, "
"certaines routines de bibliothèques peuvent échouer sans indiquer de raison "
"dans I<errno>."

#. type: Plain text
#: debian-bullseye debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"Crashes in B<malloc>(), B<calloc>(), B<realloc>(), or B<free>()  are almost "
"always related to heap corruption, such as overflowing an allocated chunk or "
"freeing the same pointer twice."
msgstr ""
"Lorsqu'un programme échoue durant un appel à B<malloc>(), B<calloc>(), "
"B<realloc>() ou B<free>(), cela est presque toujours le signe d'une "
"corruption du tas. Cela survient généralement en cas de débordement d'un "
"bloc mémoire alloué ou en libérant deux fois le même pointeur."

#. type: SH
#: debian-bullseye debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-leap-15-5
#, no-wrap
msgid "COLOPHON"
msgstr "COLOPHON"

#. type: Plain text
#: debian-bullseye
msgid ""
"This page is part of release 5.10 of the Linux I<man-pages> project.  A "
"description of the project, information about reporting bugs, and the latest "
"version of this page, can be found at \\%https://www.kernel.org/doc/man-"
"pages/."
msgstr ""
"Cette page fait partie de la publication 5.10 du projet I<man-pages> Linux. "
"Une description du projet et des instructions pour signaler des anomalies et "
"la dernière version de cette page peuvent être trouvées à l'adresse \\"
"%https://www.kernel.org/doc/man-pages/."

#. type: TH
#: debian-unstable fedora-37 fedora-rawhide mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "2021-03-22"
msgstr "22 mars 2021"

#. type: Plain text
#: debian-unstable fedora-37 fedora-rawhide mageia-cauldron opensuse-tumbleweed
msgid ""
"The B<realloc>()  function changes the size of the memory block pointed to "
"by I<ptr> to I<size> bytes.  The contents will be unchanged in the range "
"from the start of the region up to the minimum of the old and new sizes.  If "
"the new size is larger than the old size, the added memory will I<not> be "
"initialized.  If I<ptr> is NULL, then the call is equivalent to "
"I<malloc(size)>, for all values of I<size>; if I<size> is equal to zero, and "
"I<ptr> is not NULL, then the call is equivalent to I<free(ptr)> (this "
"behavior is nonportable; see NOTES).  Unless I<ptr> is NULL, it must have "
"been returned by an earlier call to B<malloc>(), B<calloc>(), or "
"B<realloc>().  If the area pointed to was moved, a I<free(ptr)> is done."
msgstr ""
"La fonction B<realloc>() modifie la taille du bloc de mémoire pointé par "
"I<ptr> à I<size> octets. Le contenu de la mémoire entre la zone de départ et "
"le minimum des nouvelle et ancienne taille n'est pas modifié. Si la nouvelle "
"taille est plus grande que l'ancienne taille, le contenu de la zone de "
"mémoire nouvellement allouée n'est I<pas> initialisé. Si I<ptr> est NULL, "
"l'appel est équivalent à I<malloc(size)>, pour toute valeur de I<size> ; si "
"I<size> vaut zéro et que I<ptr> est non NULL, l'appel est alors équivalent à "
"I<free(ptr)>. Si I<ptr> n'est pas NULL, il doit avoir été obtenu par un "
"appel antérieur à B<malloc>(), B<calloc>() ou B<realloc>(). Si la zone "
"pointée était déplacée, un appel à I<free(ptr)> est effectué."

#. type: Plain text
#: debian-unstable fedora-37 fedora-rawhide mageia-cauldron opensuse-tumbleweed
msgid ""
"The behavior of B<realloc>()  when I<size> is equal to zero, and I<ptr> is "
"not NULL, is glibc specific; other implementations may return NULL, and set "
"I<errno>.  Portable POSIX programs should avoid it.  See B<realloc>(3p)."
msgstr ""
"Le comportement de B<realloc>() lorsque I<size> est égal à 0 et I<ptr> n'est "
"pas NULL est spécifique à la glibc ; d'autres implémentations peuvent "
"retourner NULL et fixer I<errno>. Les programmes POSIX portables doivent "
"l'éviter. Consultez B<realloc>(3p)."

#. type: Plain text
#: debian-unstable fedora-37 fedora-rawhide mageia-cauldron
msgid ""
"This page is part of release 5.13 of the Linux I<man-pages> project.  A "
"description of the project, information about reporting bugs, and the latest "
"version of this page, can be found at \\%https://www.kernel.org/doc/man-"
"pages/."
msgstr ""
"Cette page fait partie de la publication 5.13 du projet I<man-pages> Linux. "
"Une description du projet et des instructions pour signaler des anomalies et "
"la dernière version de cette page peuvent être trouvées à l'adresse \\"
"%https://www.kernel.org/doc/man-pages/."

#. type: TH
#: opensuse-leap-15-5
#, no-wrap
msgid "2017-09-15"
msgstr "15 septembre 2017"

#. type: Plain text
#: opensuse-leap-15-5
msgid "malloc, free, calloc, realloc - allocate and free dynamic memory"
msgstr ""
"malloc, free, calloc, realloc - Allocation et libération dynamiques de "
"mémoire"

#. type: Plain text
#: opensuse-leap-15-5
msgid "_GNU_SOURCE"
msgstr "_GNU_SOURCE"

#.  glibc does this:
#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"The B<calloc>()  function allocates memory for an array of I<nmemb> elements "
"of I<size> bytes each and returns a pointer to the allocated memory.  The "
"memory is set to zero.  If I<nmemb> or I<size> is 0, then B<calloc>()  "
"returns either NULL, or a unique pointer value that can later be "
"successfully passed to B<free>()."
msgstr ""
"La fonction B<calloc>() alloue de la mémoire pour un tableau de I<nmemb> "
"éléments de taille I<size> octets chacun et renvoie un pointeur sur la "
"mémoire allouée. La zone mémoire est initialisée à 0. Si I<nmemb> ou I<size> "
"vaut 0, B<calloc>() renvoie alors NULL ou une valeur de pointeur unique qui "
"pourra être passée ultérieurement à B<free>() avec succès."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"The B<realloc>()  function returns a pointer to the newly allocated memory, "
"which is suitably aligned for any built-in type and may be different from "
"I<ptr>, or NULL if the request fails.  If I<size> was equal to 0, either "
"NULL or a pointer suitable to be passed to B<free>()  is returned.  If "
"B<realloc>()  fails, the original block is left untouched; it is not freed "
"or moved."
msgstr ""
"La fonction B<realloc>() renvoie un pointeur sur la mémoire nouvellement "
"allouée, qui est correctement alignée pour n'importe quel type interne, et "
"qui peut être différent de I<ptr>, ou NULL si la demande échoue. Si I<size> "
"vaut zéro, B<realloc>() renvoie NULL ou un pointeur acceptable pour "
"B<free>(). Si B<realloc>() échoue, le bloc mémoire original reste intact, il "
"n'est ni libéré ni déplacé."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"By default, Linux follows an optimistic memory allocation strategy.  This "
"means that when B<malloc>()  returns non-NULL there is no guarantee that the "
"memory really is available.  In case it turns out that the system is out of "
"memory, one or more processes will be killed by the OOM killer.  For more "
"information, see the description of I</proc/sys/vm/overcommit_memory> and I</"
"proc/sys/vm/oom_adj> in B<proc>(5), and the Linux kernel source file "
"I<Documentation/vm/overcommit-accounting>."
msgstr ""
"Par défaut, Linux suit une stratégie d'allocation optimiste. Cela signifie "
"que lorsque B<malloc>() ne renvoie pas NULL, il n'y a aucune garantie que la "
"mémoire soit véritablement disponible. S'il devait s'avérer que le système "
"manque de mémoire, un ou plusieurs processus seront tués par l'infâme «\\ "
"OOM killer\\ » (gestionnaire de mémoire). Pour plus d'informations, "
"consultez la description de I</proc/sys/vm/overcommit_memory> et I</proc/sys/"
"vm/oom_adj> dans B<proc>(5), ainsi que le fichier I<Documentation/vm/"
"overcommit-accounting> des sources du noyau Linux."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"This page is part of release 4.16 of the Linux I<man-pages> project.  A "
"description of the project, information about reporting bugs, and the latest "
"version of this page, can be found at \\%https://www.kernel.org/doc/man-"
"pages/."
msgstr ""
"Cette page fait partie de la publication 4.16 du projet I<man-pages> Linux. "
"Une description du projet et des instructions pour signaler des anomalies et "
"la dernière version de cette page peuvent être trouvées à l'adresse \\"
"%https://www.kernel.org/doc/man-pages/."
