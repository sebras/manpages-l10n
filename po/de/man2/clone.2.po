# German translation of manpages
# This file is distributed under the same license as the manpages-l10n package.
# Copyright © of this file:
# Daniel Kobras <kobras@linux.de>, 2001.
# Chris Leick <c.leick@vollbio.de>, 2010-2013.
# Mario Blättermann <mario.blaettermann@gmail.com>, 2013-2014, 2021.
# Dr. Tobias Quathamer <toddy@debian.org>, 2017.
# Helge Kreutzmann <debian@helgefjell.de>, 2015-2021.
msgid ""
msgstr ""
"Project-Id-Version: manpages-l10n 4.9.3\n"
"POT-Creation-Date: 2022-10-17 20:19+0200\n"
"PO-Revision-Date: 2022-02-11 13:14+0100\n"
"Last-Translator: Mario Blättermann <mario.blaettermann@gmail.com>\n"
"Language-Team: German <debian-l10n-german@lists.debian.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Generator: Lokalize 21.04.2\n"

#. type: TH
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "CLONE"
msgstr "CLONE"

#. type: TH
#: archlinux
#, no-wrap
msgid "2022-09-17"
msgstr "17. September 2022"

#. type: TH
#: archlinux
#, no-wrap
msgid "Linux man-pages (unreleased)"
msgstr "Linux-Handbuchseiten (nicht veröffentlicht)"

#. type: SH
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "NAME"
msgstr "BEZEICHNUNG"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid "clone, __clone2, clone3 - create a child process"
msgstr "clone, __clone2, clone3 - erzeugt einen Kindprozess"

#. type: SH
#: archlinux
#, no-wrap
msgid "LIBRARY"
msgstr "BIBLIOTHEK"

#. type: Plain text
#: archlinux
msgid "Standard C library (I<libc>, I<-lc>)"
msgstr "Standard-C-Bibliothek (I<libc>, I<-lc>)"

#. type: SH
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "SYNOPSIS"
msgstr "ÜBERSICHT"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "/* Prototype for the glibc wrapper function */\n"
msgstr "/* Prototyp für die Glibc-Wrapper-Funktion */\n"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid ""
"B<#define _GNU_SOURCE>\n"
"B<#include E<lt>sched.hE<gt>>\n"
msgstr ""
"B<#define _GNU_SOURCE>\n"
"B<#include E<lt>sched.hE<gt>>\n"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid ""
"B<int clone(int (*>I<fn>B<)(void *), void *>I<stack>B<, int >I<flags>B<, void *>I<arg>B<, ...>\n"
"B<          /* pid_t *>I<parent_tid>B<, void *>I<tls>B<, pid_t *>I<child_tid>B< */ );>\n"
msgstr ""
"B<int clone(int (*>I<fn>B<)(void *), void *>I<Stapel>B<, int >I<Schalter>B<, void *>I<arg>B<, …>\n"
"B<          /* pid_t *>I<Eltern_tid>B<, void *>I<tls>B<, pid_t *>I<Kind_tid>B< */ );>\n"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "/* For the prototype of the raw clone() system call, see NOTES */\n"
msgstr "/* Für den Prototyp des rohen clone()-Systemaufrufs siehe ANMERKUNGEN */\n"

#. type: Plain text
#: archlinux debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-tumbleweed
#, no-wrap
msgid ""
"B<#include E<lt>linux/sched.hE<gt>>    /* Definition of B<struct clone_args> */\n"
"B<#include E<lt>sched.hE<gt>>          /* Definition of B<CLONE_*> constants */\n"
"B<#include E<lt>sys/syscall.hE<gt>>    /* Definition of B<SYS_*> constants */\n"
"B<#include E<lt>unistd.hE<gt>>\n"
msgstr ""
"B<#include E<lt>linux/sched.hE<gt>>    /* Definition von B<struct clone_args> */\n"
"B<#include E<lt>sched.hE<gt>>          /* Definition der B<CLONE_*>-Konstanten */\n"
"B<#include E<lt>sys/syscall.hE<gt>>    /* Definition der B<SYS_*>-Konstanten */\n"
"B<#include E<lt>unistd.hE<gt>>\n"

#. type: Plain text
#: archlinux debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-tumbleweed
#, no-wrap
msgid "B<long syscall(SYS_clone3, struct clone_args *>I<cl_args>B<, size_t >I<size>B<);>\n"
msgstr "B<long syscall(SYS_clone3, struct clone_args *>I<cl_args>B<, size_t >I<groesse>B<);>\n"

#. type: Plain text
#: archlinux debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-tumbleweed
msgid ""
"I<Note>: glibc provides no wrapper for B<clone3>(), necessitating the use of "
"B<syscall>(2)."
msgstr ""
"I<Hinweis>: Glibc stellt keinen Wrapper für B<clone3>() bereit; rufen Sie "
"ihn mittels B<syscall>(2) auf."

#. type: SH
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "DESCRIPTION"
msgstr "BESCHREIBUNG"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"These system calls create a new (\"child\") process, in a manner similar to "
"B<fork>(2)."
msgstr ""
"Diese Systemaufrufe erzeugen auf eine ähnliche Weise wie B<fork>(2) einen "
"neuen Prozess (»Kind«)."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"By contrast with B<fork>(2), these system calls provide more precise control "
"over what pieces of execution context are shared between the calling process "
"and the child process.  For example, using these system calls, the caller "
"can control whether or not the two processes share the virtual address "
"space, the table of file descriptors, and the table of signal handlers.  "
"These system calls also allow the new child process to be placed in separate "
"B<namespaces>(7)."
msgstr ""
"Im Gegensatz zu B<fork>(2) bieten diese Systemaufrufe eine genauere "
"Kontrolle darüber, welche Teile des Ausführungskontextes vom aufrufenden und "
"vom Kindprozess gemeinsam benutzt werden. Beispielsweise kann der Aufrufende "
"mittels dieser Systemaufrufe steuern, ob die zwei Prozesse den virtuellen "
"Adressraum, die Tabelle der Dateideskriptoren und die Tabelle der Signal-"
"Handler gemeinsam benutzen. Diese Systemaufrufe ermöglichen es auch, den "
"neuen Kindprozess in einen separaten Namensraum (siehe B<namespaces>(7)) "
"abzulegen."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"Note that in this manual page, \"calling process\" normally corresponds to "
"\"parent process\".  But see the descriptions of B<CLONE_PARENT> and "
"B<CLONE_THREAD> below."
msgstr ""
"Beachten Sie, dass in dieser Handbuchseite der »aufrufende Prozess« "
"normalerweise der »Elternprozess« ist. Siehe aber auch die nachfolgende "
"Beschreibung von B<CLONE_PARENT> und B<CLONE_THREAD>."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid "This page describes the following interfaces:"
msgstr "Diese Seite beschreibt die folgenden Schnittstellen:"

#. type: IP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "*"
msgstr "*"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"The glibc B<clone>()  wrapper function and the underlying system call on "
"which it is based.  The main text describes the wrapper function; the "
"differences for the raw system call are described toward the end of this "
"page."
msgstr ""
"Die B<clone>()-Wrapper-Funktion von Glibc als auch den darunterliegenden "
"Systemaufruf, auf dem sie basiert. Der Haupttext erklärt die Wrapper-"
"Funktion. Die Unterschiede zum rohen Systemaufruf werden gegen Ende dieser "
"Seite erläutert."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid "The newer B<clone3>()  system call."
msgstr "Der neuere Systemaufruf B<clone3>()."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"In the remainder of this page, the terminology \"the clone call\" is used "
"when noting details that apply to all of these interfaces,"
msgstr ""
"Im Rest der Seite wird die Terminologie »der Clone-Aufruf« verwandt, wenn "
"Details erklärt werden, die auf alle diese Schnittstellen zutreffen."

#. type: SS
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "The clone() wrapper function"
msgstr "Die clone()-Wrapper-Funktion"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"When the child process is created with the B<clone>()  wrapper function, it "
"commences execution by calling the function pointed to by the argument "
"I<fn>.  (This differs from B<fork>(2), where execution continues in the "
"child from the point of the B<fork>(2)  call.)  The I<arg> argument is "
"passed as the argument of the function I<fn>."
msgstr ""
"Wird mit der B<clone>()-Wrapper-Funktion ein Kindprozess erzeugt, beginnt es "
"die Ausführung durch Aufruf der Funktion, auf die das Argument I<fn> zeigt. "
"(Dies ist ein Unterschied zu B<fork>(2), wo die Ausführung im Kindprozess "
"vom Punkt des B<fork>(2)-Aufrufs fortfährt.) Das Argument I<arg> wird als "
"Argument der Funktion I<fn> übergeben."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"When the I<fn>(I<arg>)  function returns, the child process terminates.  The "
"integer returned by I<fn> is the exit status for the child process.  The "
"child process may also terminate explicitly by calling B<exit>(2)  or after "
"receiving a fatal signal."
msgstr ""
"Kehrt die Funktion I<fn>(I<arg>) zurück, so beendet sich der Kindprozess. "
"Der Ganzzahlwert, der von I<fn> zurückgeliefert wird, entspricht dem Exit-"
"Status des Kindprozesses. Der Kindprozess kann auch durch den expliziten "
"Aufruf von B<exit>(2) oder durch den Empfang eines fatalen Signals beendet "
"werden."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"The I<stack> argument specifies the location of the stack used by the child "
"process.  Since the child and calling process may share memory, it is not "
"possible for the child process to execute in the same stack as the calling "
"process.  The calling process must therefore set up memory space for the "
"child stack and pass a pointer to this space to B<clone>().  Stacks grow "
"downward on all processors that run Linux (except the HP PA processors), so "
"I<stack> usually points to the topmost address of the memory space set up "
"for the child stack.  Note that B<clone>()  does not provide a means whereby "
"the caller can inform the kernel of the size of the stack area."
msgstr ""
"Das Argument I<Stapel> bestimmt den Ort des Stapelspeichers, der vom "
"Kindprozess verwendet wird. Da der aufrufende und der Kindprozess sich "
"Speicherbereiche teilen können, kann der Kindprozess nicht auf dem selben "
"Stapelspeicher wie der aufrufende Prozess laufen. Der aufrufende Prozess "
"muss daher einen Speicherbereich als Stapelspeicher für den Kindprozess "
"bereithalten und per B<clone> einen Zeiger darauf an den Kindprozess "
"übergeben. Der Stapelspeicher wächst (mit Ausnahme der PA-Prozessoren von "
"HP) auf allen von Linux unterstützten Prozessoren nach unten, so dass "
"I<Stapel> für gewöhnlich auf die oberste Adresse im bereitgehaltenen "
"Speicherbereich zeigt. Beachten Sie, dass B<clone>() keine Möglichkeit "
"bereitstellt, mit der der Aufrufende den Kernel über die Größe des Stapel-"
"Bereichs informieren könnte."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid "The remaining arguments to B<clone>()  are discussed below."
msgstr "Die verbliebenen Argumente für B<clone>() werden unten behandelt."

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "clone3()"
msgstr "clone3()"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"The B<clone3>()  system call provides a superset of the functionality of the "
"older B<clone>()  interface.  It also provides a number of API improvements, "
"including: space for additional flags bits; cleaner separation in the use of "
"various arguments; and the ability to specify the size of the child's stack "
"area."
msgstr ""
"Der Systemaufruf B<clone3>() stellt eine Obermenge der Funktionalität der "
"älteren Schnittstelle B<clone>() bereit. Er stellt auch eine Reihe von API-"
"Verbesserungen bereit, einschließlich: Platz für zusätzliche Schalter-Bits; "
"deutlichere Trennung beim Einsatz der verschiedenen Argumente, die "
"Möglichkeit, die Größe des Stapel-Bereichs des Kindprozesses festzulegen."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"As with B<fork>(2), B<clone3>()  returns in both the parent and the child.  "
"It returns 0 in the child process and returns the PID of the child in the "
"parent."
msgstr ""
"Wie bei B<fork>(2) kehrt B<clone3>() sowohl im Eltern- als auch im "
"Kindprozess zurück. Er liefert 0 im Kindprozess und die PID des "
"Kindprozesses im Elternprozess zurück."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"The I<cl_args> argument of B<clone3>()  is a structure of the following form:"
msgstr ""
"Das Argument I<cl_args> von B<clone3>() ist eine Struktur der folgenden Form:"

#. type: Plain text
#: archlinux debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-tumbleweed
#, no-wrap
msgid ""
"struct clone_args {\n"
"    u64 flags;        /* Flags bit mask */\n"
"    u64 pidfd;        /* Where to store PID file descriptor\n"
"                         (I<int *>) */\n"
"    u64 child_tid;    /* Where to store child TID,\n"
"                         in child\\(aqs memory (I<pid_t *>) */\n"
"    u64 parent_tid;   /* Where to store child TID,\n"
"                         in parent\\(aqs memory (I<pid_t *>) */\n"
"    u64 exit_signal;  /* Signal to deliver to parent on\n"
"                         child termination */\n"
"    u64 stack;        /* Pointer to lowest byte of stack */\n"
"    u64 stack_size;   /* Size of stack */\n"
"    u64 tls;          /* Location of new TLS */\n"
"    u64 set_tid;      /* Pointer to a I<pid_t> array\n"
"                         (since Linux 5.5) */\n"
"    u64 set_tid_size; /* Number of elements in I<set_tid>\n"
"                         (since Linux 5.5) */\n"
"    u64 cgroup;       /* File descriptor for target cgroup\n"
"                         of child (since Linux 5.7) */\n"
"};\n"
msgstr ""
"struct clone_args {\n"
"    u64 flags;        /* Schalter-Bit-Maske */\n"
"    u64 pidfd;        /* Wo der PID-Dateideskriptor gespeichert\n"
"                         werden soll (I<int *>) */\n"
"    u64 child_tid;    /* Wo die Kind-TID gespeichert werden soll,\n"
"                         im Speicher des Kindes (I<pid_t *>) */\n"
"    u64 parent_tid;   /* Wo die Kind-TID gespeichert werden soll,\n"
"                         im Speicher des Elternprozesses (I<pid_t *>) */\n"
"    u64 exit_signal;  /* Beim Beenden des Kindprozesses an den Elternprozess\n"
"                         zu sendendes Signal */\n"
"    u64 stack;        /* Zeiger auf das niedrigste Byte des Stapels */\n"
"    u64 stack_size;   /* Größe des Stapels */\n"
"    u64 tls;          /* Ort eines neuen TLS */\n"
"    u64 set_tid;      /* Zeiger auf ein I<pid_t>-Feld\n"
"                         (seit Linux 5.5) */\n"
"    u64 set_tid_size; /* Anzahl von Elementen in I<set_tid>\n"
"                         (seit Linux 5.5) */\n"
"    u64 cgroup;       /* Dateideskriptor für Ziel-Cgroup\n"
"                         eines Kindes (seit Linux 5.7) */\n"
"};\n"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"The I<size> argument that is supplied to B<clone3>()  should be initialized "
"to the size of this structure.  (The existence of the I<size> argument "
"permits future extensions to the I<clone_args> structure.)"
msgstr ""
"Das an B<clone3>() übergebene Argument I<groesse> sollte auf die Größe "
"dieser Struktur initialisiert werden. (Die Existenz des Arguments I<groesse> "
"ermöglicht zukünftige Erweiterungen der I<clone_args>-Struktur.)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"The stack for the child process is specified via I<cl_args.stack>, which "
"points to the lowest byte of the stack area, and I<cl_args.stack_size>, "
"which specifies the size of the stack in bytes.  In the case where the "
"B<CLONE_VM> flag (see below) is specified, a stack must be explicitly "
"allocated and specified.  Otherwise, these two fields can be specified as "
"NULL and 0, which causes the child to use the same stack area as the parent "
"(in the child's own virtual address space)."
msgstr ""
"Der Stapel für den Kindprozess wird in I<cl_args.stack>, der auf das "
"niedrigste Byte des Stapel-Bereichs zeigt, und I<cl_args.stack_size>, der "
"die Größe des Stapel-Bereichs in Byte festlegt, angegeben. Falls der "
"Schalter B<CLONE_VM> (siehe unten) angegeben ist, muss ein Stapel explizit "
"reserviert und festgelegt werden. Andernfalls können diese Felder als NULL "
"und 0 angegeben werden, wodurch der Kindprozess den gleichen Stapel-Bereich "
"wie der Elternprozess verwendet (im eigenen virtuellen Adressraum des "
"Kindprozesses)."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid "The remaining fields in the I<cl_args> argument are discussed below."
msgstr "Die verbliebenen Felder im Argument I<cl_args> werden unten behandelt."

#. type: SS
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "Equivalence between clone() and clone3() arguments"
msgstr "Äquivalenz zwischen den Argumenten von clone() und clone3()"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"Unlike the older B<clone>()  interface, where arguments are passed "
"individually, in the newer B<clone3>()  interface the arguments are packaged "
"into the I<clone_args> structure shown above.  This structure allows for a "
"superset of the information passed via the B<clone>()  arguments."
msgstr ""
"Anders als die ältere B<clone>()-Schnittstelle, bei der die Argumente "
"individuell übergeben werden, werden die Argumente bei der neueren "
"B<clone3>()-Schnittstelle in die oben gezeigte Struktur I<clone_args> "
"gepackt. Diese Struktur erlaubt es, dass eine Obermenge an Informationen "
"über die B<clone>()-Argumente übergeben wird."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"The following table shows the equivalence between the arguments of "
"B<clone>()  and the fields in the I<clone_args> argument supplied to "
"B<clone3>():"
msgstr ""
"Die folgende Tabelle zeigt die Äquivalenz zwischen den Argumenten von "
"B<clone>() und den Feldern in den an B<clone3>() übergebenen I<clone_args>:"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "clone()"
msgstr "clone()"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "Notes"
msgstr "Hinweise"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "I<cl_args> field"
msgstr "Feld I<cl_args>"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "flags & \\(ti0xff"
msgstr "Schalter & \\(ti0xff"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "flags"
msgstr "flags"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "For most flags; details below"
msgstr "Für die meisten Schalter; Details unten"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "parent_tid"
msgstr "parent_tid"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "pidfd"
msgstr "pidfd"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "See CLONE_PIDFD"
msgstr "Siehe CLONE_PIDFD"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "child_tid"
msgstr "child_tid"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "See CLONE_CHILD_SETTID"
msgstr "Siehe CLONE_CHILD_SETTID"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "See CLONE_PARENT_SETTID"
msgstr "Siehe CLONE_PARENT_SETTID"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "flags & 0xff"
msgstr "Schalter & 0xff"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "exit_signal"
msgstr "exit_signal"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "stack"
msgstr "Stapel"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "I<--->"
msgstr "I<--->"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "stack_size"
msgstr "stack_size"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "tls"
msgstr "tls"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "See CLONE_SETTLS"
msgstr "Siehe CLONE_SETTLS"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "set_tid"
msgstr "set_tid"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "See below for details"
msgstr "Siehe weiter unten für Details."

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "set_tid_size"
msgstr "set_tid_size"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "cgroup"
msgstr "cgroup"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "See CLONE_INTO_CGROUP"
msgstr "Siehe CLONE_INTO_CGROUP"

#. type: SS
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "The child termination signal"
msgstr "Das Kind-Beendigungssignal"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"When the child process terminates, a signal may be sent to the parent.  The "
"termination signal is specified in the low byte of I<flags> (B<clone>())  or "
"in I<cl_args.exit_signal> (B<clone3>()).  If this signal is specified as "
"anything other than B<SIGCHLD>, then the parent process must specify the "
"B<__WALL> or B<__WCLONE> options when waiting for the child with "
"B<wait>(2).  If no signal (i.e., zero) is specified, then the parent process "
"is not signaled when the child terminates."
msgstr ""
"Wenn sich der Kindprozess beendet, kann ein Signal an den Elternprozess "
"gesandt werden. Das Beendigungssignal wird in den niedrigen Bytes von "
"I<Schalter> (B<clone>()) oder in I<cl_args.exit_signal> (B<clone3>()) "
"angegeben. Falls dieses Signal als etwas anderes als B<SIGCHLD> angegeben "
"wurde, dann muss der Elternprozess die Optionen B<__WALL> oder B<__WCLONE> "
"angeben, wenn er mit B<wait>(2) auf den Kindprozess wartet. Falls kein "
"Signal (d.h. Null) angegeben wurde, wird dem Elternprozess nicht "
"signalisiert, wenn der Kindprozess endet."

#. type: SS
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "The set_tid array"
msgstr "Das Feld set_tid"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"By default, the kernel chooses the next sequential PID for the new process "
"in each of the PID namespaces where it is present.  When creating a process "
"with B<clone3>(), the I<set_tid> array (available since Linux 5.5)  can be "
"used to select specific PIDs for the process in some or all of the PID "
"namespaces where it is present.  If the PID of the newly created process "
"should be set only for the current PID namespace or in the newly created PID "
"namespace (if I<flags> contains B<CLONE_NEWPID>)  then the first element in "
"the I<set_tid> array has to be the desired PID and I<set_tid_size> needs to "
"be 1."
msgstr ""
"Standardmäßig wählt der Kernel die nächste sequenzielle PID für den neuen "
"Prozess in jedem der PID-Namensräume, in denen er vorhanden ist. Beim "
"Erstellen eines Prozesses mit B<clone3>() kann das (seit Linux 5.5 "
"verfügbare) Feld I<set_tid> zur Auswahl bestimmter PIDs für den Prozess in "
"einem oder allen der PID-Namensräume, in denen er vorhanden ist, eingesetzt "
"werden. Falls die PID des neu erstellten Prozesses nur im aktuellen PID-"
"Namensraum oder in dem neu erstellten PID-Namensraum (falls I<Schalter> "
"B<CLONE_NEWPID> enthält) gesetzt werden soll, dann muss das erste Element in "
"dem Feld I<set_tid> auf die gewünschte PID gesetzt werden und "
"I<set_tid_size> muss 1 sein."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"If the PID of the newly created process should have a certain value in "
"multiple PID namespaces, then the I<set_tid> array can have multiple "
"entries.  The first entry defines the PID in the most deeply nested PID "
"namespace and each of the following entries contains the PID in the "
"corresponding ancestor PID namespace.  The number of PID namespaces in which "
"a PID should be set is defined by I<set_tid_size> which cannot be larger "
"than the number of currently nested PID namespaces."
msgstr ""
"Falls die PID des neu erstellten Prozesses einen bestimmten Wert in mehreren "
"PID-Namensräumen haben soll, dann kann dass Feld I<set_tid> über mehrere "
"Einträge verfügen. Der erste Eintrag definiert die PID im am tiefsten "
"verschachtelten PID-Namensraum und jeder der nachfolgenden Einträge enthält "
"die PID in dem entsprechenden Vorfahren-PID-Namensraum. Die Anzahl der PID-"
"Namensräume in denen eine PID gesetzt werden soll, wird mit I<set_tid_size> "
"gesetzt; dieser Wert kann nicht größer als die Anzahl der derzeit "
"verschachtelten PID-Namensräume sein."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"To create a process with the following PIDs in a PID namespace hierarchy:"
msgstr ""
"Um einen Prozess zu erzeugen, der die nachfolgenden PIDs in einem PID-"
"Namensraum hat:"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "PID NS level"
msgstr "PID-NS-Stufe"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "Requested PID"
msgstr "Angeforderte PID"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "0"
msgstr "0"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "31496"
msgstr "31496"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "Outermost PID namespace"
msgstr "Äußerster PID-Namensraum"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "1"
msgstr "1"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "42"
msgstr "42"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "2"
msgstr "2"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "7"
msgstr "7"

#. type: tbl table
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "Innermost PID namespace"
msgstr "Innerster PID-Namensraum"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid "Set the array to:"
msgstr "Setzen Sie das Feld auf:"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid ""
"set_tid[0] = 7;\n"
"set_tid[1] = 42;\n"
"set_tid[2] = 31496;\n"
"set_tid_size = 3;\n"
msgstr ""
"set_tid[0] = 7;\n"
"set_tid[1] = 42;\n"
"set_tid[2] = 31496;\n"
"set_tid_size = 3;\n"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"If only the PIDs in the two innermost PID namespaces need to be specified, "
"set the array to:"
msgstr ""
"Falls nur die PIDs in den zwei innersten PID-Namensräumen festgelegt werden "
"müssen, setzen Sie das Feld auf:"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid ""
"set_tid[0] = 7;\n"
"set_tid[1] = 42;\n"
"set_tid_size = 2;\n"
msgstr ""
"set_tid[0] = 7;\n"
"set_tid[1] = 42;\n"
"set_tid_size = 2;\n"

#. type: Plain text
#: archlinux debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-tumbleweed
msgid ""
"The PID in the PID namespaces outside the two innermost PID namespaces is "
"selected the same way as any other PID is selected."
msgstr ""
"Die PID in den PID-Namensräumen außerhalb der zwei innersten PID-Namensräume "
"ist genauso wie jede andere PID ausgewählt."

#.  commit 124ea650d3072b005457faed69909221c2905a1f
#.  commit 1caef81da05a84a40dbf02110e967ce6d1135ff6
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"The I<set_tid> feature requires B<CAP_SYS_ADMIN> or (since Linux 5.9)  "
"B<CAP_CHECKPOINT_RESTORE> in all owning user namespaces of the target PID "
"namespaces."
msgstr ""
"Die Funktionalität I<set_tid> benötigt B<CAP_SYS_ADMIN> oder (seit Linux "
"5.9) B<CAP_CHECKPOINT_RESTORE> in allen Benutzernamensräumen, die dem des "
"Ziel-PID-Namensraumes gehören."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"Callers may only choose a PID greater than 1 in a given PID namespace if an "
"B<init> process (i.e., a process with PID 1) already exists in that "
"namespace.  Otherwise the PID entry for this PID namespace must be 1."
msgstr ""
"Aufrufende dürfen in einem gegebenen PID-Namensraum nur eine PID größer als "
"1 auswählen, falls ein B<init>-Prozess (d.h. ein Prozess mit der PID 1) in "
"diesem Namensraum bereits existiert. Andernfalls muss der PID-Eintrag für "
"diesen PID-Namensraum 1 sein."

#. type: SS
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "The flags mask"
msgstr "Die Schaltermaske"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"Both B<clone>()  and B<clone3>()  allow a flags bit mask that modifies their "
"behavior and allows the caller to specify what is shared between the calling "
"process and the child process.  This bit mask\\(emthe I<flags> argument of "
"B<clone>()  or the I<cl_args.flags> field passed to B<clone3>()\\(emis "
"referred to as the I<flags> mask in the remainder of this page."
msgstr ""
"Sowohl B<clone>() als auch B<clone3>() erlauben eine Schalter-Bit-Maske, die "
"das Verhalten verändert und dem Aufrufenden festzulegen erlaubt, was von dem "
"aufrufenden Prozess und dem Kindprozess gemeinsam benutzt wird. Diese "
"Bitmaske\\(emdas Argument I<Schalter> von B<clone>() oder das an B<clone3>() "
"übergebene Feld I<cl_args.flags>\\(emwird im Rest dieser Handbuchseite als "
"die I<Schalter>-Maske bezeichnet."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"The I<flags> mask is specified as a bitwise-OR of zero or more of the "
"constants listed below.  Except as noted below, these flags are available "
"(and have the same effect) in both B<clone>()  and B<clone3>()."
msgstr ""
"Die I<Schalter>-Maske wird als bitweises ODER von Null oder mehreren der "
"oben aufgeführten Konstanten angegeben. Falls nicht unten anders angegeben, "
"sind diese Schalter sowohl in B<clone>() als auch B<clone3>() verfügbar (und "
"haben die gleiche Wirkung)."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_CHILD_CLEARTID> (since Linux 2.5.49)"
msgstr "B<CLONE_CHILD_CLEARTID> (seit Linux 2.5.49)"

# http://de.wikipedia.org/wiki/Native_POSIX_Thread_Library
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"Clear (zero) the child thread ID at the location pointed to by I<child_tid> "
"(B<clone>())  or I<cl_args.child_tid> (B<clone3>())  in child memory when "
"the child exits, and do a wakeup on the futex at that address.  The address "
"involved may be changed by the B<set_tid_address>(2)  system call.  This is "
"used by threading libraries."
msgstr ""
"Die Kind-Thread-Kennung an der durch I<Kind_tid> gezeigten Stelle "
"(B<clone>()) oder I<cl_args.child_tid> (B<clone3>()) im Kindspeicher "
"bereinigen (nullen), wenn das Kind sich beendet und beim Futex (»fast "
"userspace mutual exclusion«/schneller gegenseitiger Ausschluss im Userspace) "
"an dieser Adresse aufwachen lassen. Die betroffene Adresse könnte durch den "
"Systemaufruf B<set_tid_address>(2) geändert werden. Dies wird von Threading-"
"Bibliotheken benutzt."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_CHILD_SETTID> (since Linux 2.5.49)"
msgstr "B<CLONE_CHILD_SETTID> (seit Linux 2.5.49)"

#. type: Plain text
#: archlinux debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-tumbleweed
msgid ""
"Store the child thread ID at the location pointed to by I<child_tid> "
"(B<clone>())  or I<cl_args.child_tid> (B<clone3>())  in the child's memory.  "
"The store operation completes before the clone call returns control to user "
"space in the child process.  (Note that the store operation may not have "
"completed before the clone call returns in the parent process, which is "
"relevant if the B<CLONE_VM> flag is also employed.)"
msgstr ""
"Speichert die Kind-Thread-Kennung an der Stelle, auf die I<Kind_tid> "
"(B<clone>()) oder I<cl_args.child_tid> (B<clone3>()) zeigt, im Kindspeicher. "
"Die Speicheraktion wird abgeschlossen, bevor der Clone-Aufruf die Steuerung "
"an den Benutzerraum im Kindprozess zurückgibt. (Beachten Sie, dass die "
"Speicheraktion noch nicht abgeschlossen sein könnte, bevor der Clone-Aufruf "
"den Elternprozess zurückliefert, was relevant ist, wenn auch der Schalter "
"B<CLONE_VM> eingesetzt wird.)"

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_CLEAR_SIGHAND> (since Linux 5.5)"
msgstr "B<CLONE_CLEAR_SIGHAND> (seit Linux 5.5)"

#.  commit b612e5df4587c934bd056bf05f4a1deca4de4f75
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"By default, signal dispositions in the child thread are the same as in the "
"parent.  If this flag is specified, then all signals that are handled in the "
"parent are reset to their default dispositions (B<SIG_DFL>)  in the child."
msgstr ""
"Standardmäßig sind die Signal-Zuordnungen im Kind-Thread identisch zu denen "
"im Eltern-Prozess. Falls dieser Schalter angegeben ist, dann werden alle "
"Signale, die im Eltern-Prozess gehandhabt werden, im Kind-Thread auf ihre "
"Standardzuordnung (B<SIG_DFL>) zurückgesetzt."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"Specifying this flag together with B<CLONE_SIGHAND> is nonsensical and "
"disallowed."
msgstr ""
"Es ergibt keinen Sinn, diesen Schalter zusammen mit B<CLONE_SIGHAND> "
"anzugeben; daher ist diese Kombination nicht erlaubt."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_DETACHED> (historical)"
msgstr "B<CLONE_DETACHED> (historisch)"

#.  added in 2.5.32; removed in 2.6.0-test4
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"For a while (during the Linux 2.5 development series)  there was a "
"B<CLONE_DETACHED> flag, which caused the parent not to receive a signal when "
"the child terminated.  Ultimately, the effect of this flag was subsumed "
"under the B<CLONE_THREAD> flag and by the time Linux 2.6.0 was released, "
"this flag had no effect.  Starting in Linux 2.6.2, the need to give this "
"flag together with B<CLONE_THREAD> disappeared."
msgstr ""
"Eine Zeit lang (während der Linux-2.5-Entwicklungsserie) gab es einen "
"Schalter B<CLONE_DETACHED>, der dazu führte, dass der Elternprozess kein "
"Signal empfing, wenn sich das Kind beendete. Schließlich wurde die "
"Auswirkung dieses Schalters in dem Schalter B<CLONE_THREAD> mit aufgenommen "
"und zum Zeitpunkt der Veröffentlichung von Linux 2.6.0 hatte dieser Schalter "
"keine Auswirkung. Beginnend mit Linux 2.6.2 verschwand die Notwendigkeit, "
"diesen Schalter mit B<CLONE_THREAD> zusammen anzugeben."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"This flag is still defined, but it is usually ignored when calling "
"B<clone>().  However, see the description of B<CLONE_PIDFD> for some "
"exceptions."
msgstr ""
"Dieser Schalter ist noch definiert, wird aber beim Aufruf von B<clone>() "
"normalerweise ignoriert. Siehe allerdings die Beschreibung von "
"B<CLONE_PIDFD> für einige Ausnahmen."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_FILES> (since Linux 2.0)"
msgstr "B<CLONE_FILES> (since Linux 2.0)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"If B<CLONE_FILES> is set, the calling process and the child process share "
"the same file descriptor table.  Any file descriptor created by the calling "
"process or by the child process is also valid in the other process.  "
"Similarly, if one of the processes closes a file descriptor, or changes its "
"associated flags (using the B<fcntl>(2)  B<F_SETFD> operation), the other "
"process is also affected.  If a process sharing a file descriptor table "
"calls B<execve>(2), its file descriptor table is duplicated (unshared)."
msgstr ""
"Ist B<CLONE_FILES> gesetzt, teilen sich der aufrufende und der Kindprozess "
"ihre Dateideskriptor-Tabellen. Jeder Dateideskriptor, der im aufrufenden "
"Prozess oder vom Kindprozess erzeugt wird, ist auch im anderen Prozess "
"gültig. Ebenso wirkt sich das Schließen eines Dateideskriptors oder das "
"Ändern der zugehörigen Schalter (benutzen der B<F_SETFD>-Operation von "
"B<fcntl>(2)) auf den anderen Prozess aus. Falls sich ein Prozess eine "
"Dateideskriptor-Tabelle teilt und B<execve>(2) aufruft, wird seine "
"Dateideskriptor-Tabelle dupliziert (nicht länger geteilt)."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"If B<CLONE_FILES> is not set, the child process inherits a copy of all file "
"descriptors opened in the calling process at the time of the clone call.  "
"Subsequent operations that open or close file descriptors, or change file "
"descriptor flags, performed by either the calling process or the child "
"process do not affect the other process.  Note, however, that the duplicated "
"file descriptors in the child refer to the same open file descriptions as "
"the corresponding file descriptors in the calling process, and thus share "
"file offsets and file status flags (see B<open>(2))."
msgstr ""
"Ist B<CLONE_FILES> nicht gesetzt, erbt der Kindprozess zur Ausführungszeit "
"von Clone eine Kopie der aktuell geöffneten Dateideskriptoren. Anschließende "
"Aktionen, die Dateideskriptoren öffnen oder schließen bzw. deren Schalter "
"ändern, werden entweder vom aufrufenden Prozess oder dem Kindprozess "
"durchgeführt und betreffen nicht den jeweils anderen Prozess. Beachten Sie "
"aber, dass sich die duplizierten Dateideskriptoren im Kind auf die gleiche "
"offene Dateideskription wie der korrespondierende Dateideskriptor im "
"aufrufenden Prozess bezieht und sich daher den Dateiversatz und die "
"Dateistatusschalter mit diesem teilt (siehe B<open>(2))."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_FS> (since Linux 2.0)"
msgstr "B<CLONE_FS> (seit Linux 2.0)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"If B<CLONE_FS> is set, the caller and the child process share the same "
"filesystem information.  This includes the root of the filesystem, the "
"current working directory, and the umask.  Any call to B<chroot>(2), "
"B<chdir>(2), or B<umask>(2)  performed by the calling process or the child "
"process also affects the other process."
msgstr ""
"Ist B<CLONE_FS> gesetzt, teilen sich aufrufender Prozess und Kindprozess "
"ihre Informationen über das Dateisystem. Dazu zählen der Ort des "
"Wurzelverzeichnisses, das aktuelle Arbeitsverzeichnis und die Maske der "
"Dateizugriffsrechte (umask). Jeder Aufruf von B<chroot>(2), B<chdir>(2) oder "
"B<umask>(2), entweder durch den aufrufenden Prozess oder den Kindprozess, "
"beeinflusst auch den jeweils anderen Prozess."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"If B<CLONE_FS> is not set, the child process works on a copy of the "
"filesystem information of the calling process at the time of the clone "
"call.  Calls to B<chroot>(2), B<chdir>(2), or B<umask>(2)  performed later "
"by one of the processes do not affect the other process."
msgstr ""
"Ist B<CLONE_FS> nicht gesetzt, arbeitet der Kindprozess mit einer Kopie der "
"Dateisysteminformationen des aufrufenden Prozesses zur Zeit des Clone-"
"Aufrufs. Spätere Aufrufe von B<chroot>(2), B<chdir>(2) oder B<umask>(2) "
"beeinflussen den anderen Prozess nicht."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_INTO_CGROUP> (since Linux 5.7)"
msgstr "B<CLONE_INTO_CGROUP> (seit Linux 5.7)"

#.  commit ef2c41cf38a7559bbf91af42d5b6a4429db8fc68
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"By default, a child process is placed in the same version 2 cgroup as its "
"parent.  The B<CLONE_INTO_CGROUP> flag allows the child process to be "
"created in a different version 2 cgroup.  (Note that B<CLONE_INTO_CGROUP> "
"has effect only for version 2 cgroups.)"
msgstr ""
"Standardmäßig wird ein Kindprozess in die gleiche Version-2-Cgroup wie sein "
"Elternprozess abgelegt. Der Schalter B<CLONE_INTO_CGROUP> ermöglicht es, den "
"Kindprozess in einer anderen Version-2-Cgroup zu erstellen. (Beachten Sie, "
"dass B<CLONE_INTO_CGROUP> nur für Version-2-Cgroups wirksam wird.)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"In order to place the child process in a different cgroup, the caller "
"specifies B<CLONE_INTO_CGROUP> in I<cl_args.flags> and passes a file "
"descriptor that refers to a version 2 cgroup in the I<cl_args.cgroup> "
"field.  (This file descriptor can be obtained by opening a cgroup v2 "
"directory using either the B<O_RDONLY> or the B<O_PATH> flag.)  Note that "
"all of the usual restrictions (described in B<cgroups>(7))  on placing a "
"process into a version 2 cgroup apply."
msgstr ""
"Um den Kindprozess in eine andere Cgroup abzulegen, legt der Aufrufende "
"B<CLONE_INTO_CGROUP> in I<cl_args.flags> fest und übergibt im Feld I<cl_args."
"cgroup> einen Dateideskriptor, der sich auf eine Version-2-Cgroup bezieht. "
"(Dieser Dateideskriptor kann erhalten werden, indem ein Cgroup-v2-"
"Verzeichnis mittels des Schalters B<O_RDONLY> oder B<O_PATH> geöffnet wird.) "
"Beachten Sie, dass sämtliche übliche Einschränkungen (beschrieben in "
"B<cgroups>(7)) über das Ablegen eines Prozesses in einer Version-2-Cgroup "
"gültig bleiben."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"Among the possible use cases for B<CLONE_INTO_CGROUP> are the following:"
msgstr ""
"Folgende Anwendungsfälle für B<CLONE_INTO_CGROUP> sind unter anderen möglich:"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"Spawning a process into a cgroup different from the parent's cgroup makes it "
"possible for a service manager to directly spawn new services into dedicated "
"cgroups.  This eliminates the accounting jitter that would be caused if the "
"child process was first created in the same cgroup as the parent and then "
"moved into the target cgroup.  Furthermore, spawning the child process "
"directly into a target cgroup is significantly cheaper than moving the child "
"process into the target cgroup after it has been created."
msgstr ""
"Das Erzeugen eines Prozesses in einer Cgroup, die sich von der des "
"Elternprozesses unterscheidet, ermöglicht es einem Diensteverwalter, neue "
"Dienste direkt in dedizierte Cgroups zu erzeugen. Dies beseitigt das "
"Flackern bei der Buchführung, das erzeugt würde, falls der Kindprozess erst "
"in der gleichen Cgroup wie der Elternprozess erzeugt und dann in die Ziel-"
"Cgroup verschoben würde. Desweiteren ist die Erzeugung des Kindprozesses "
"direkt in der Ziel-Cgroup deutlich billiger als das Verschieben des "
"Kindprozesses in die Ziel-Cgroup, nachdem er erstellt wurde."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"The B<CLONE_INTO_CGROUP> flag also allows the creation of frozen child "
"processes by spawning them into a frozen cgroup.  (See B<cgroups>(7)  for a "
"description of the freezer controller.)"
msgstr ""
"Der Schalter B<CLONE_INTO_CGROUP> erlaubt auch die Erstellung eingefrorener "
"Kindprozesse durch Erzeugung dieser in einer eingefrorenen Cgroup. (Siehe "
"B<cgroups>(7) für eine Beschreibung des Einfrier-Controllers.)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"For threaded applications (or even thread implementations which make use of "
"cgroups to limit individual threads), it is possible to establish a fixed "
"cgroup layout before spawning each thread directly into its target cgroup."
msgstr ""
"Für Anwendungen mit Threads (oder sogar Thread-Implementierungen, die "
"Cgroups verwenden, um einzelne Threads zu begrenzen) ist es möglich, ein "
"festes Cgroup-Layout zu errichten, bevor jeder Thread direkt in seine Ziel-"
"Cgroup erzeugt wird."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_IO> (since Linux 2.6.25)"
msgstr "B<CLONE_IO> (seit Linux 2.6.25)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"If B<CLONE_IO> is set, then the new process shares an I/O context with the "
"calling process.  If this flag is not set, then (as with B<fork>(2))  the "
"new process has its own I/O context."
msgstr ""
"Ist B<CLONE_FS> gesetzt, teilt sich der neue Prozess einen E/A-Kontext mit "
"dem aufrufenden Prozess. Falls dieser Schalter nicht gesetzt ist (wie bei "
"B<fork>(2)), hat der neue Prozess seinen eigenen E/A-Kontext."

#.  The following based on text from Jens Axboe
#.  the anticipatory and CFQ scheduler
#.  with CFQ and AS.
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"The I/O context is the I/O scope of the disk scheduler (i.e., what the I/O "
"scheduler uses to model scheduling of a process's I/O).  If processes share "
"the same I/O context, they are treated as one by the I/O scheduler.  As a "
"consequence, they get to share disk time.  For some I/O schedulers, if two "
"processes share an I/O context, they will be allowed to interleave their "
"disk access.  If several threads are doing I/O on behalf of the same process "
"(B<aio_read>(3), for instance), they should employ B<CLONE_IO> to get better "
"I/O performance."
msgstr ""
"Der E/A-Kontext entspricht dem E/A-Gültigkeitsbereich des Platten-"
"Schedulers, d.h. welches der E/A-Scheduler zur Modellplanung für E/As des "
"Prozesses benutzt. Falls sich Prozesse den gleichen E/A-Kontext teilen, "
"werden sie vom E/A-Scheduler als ein einziger betrachtet. Als Konsequenz "
"daraus müssen sie sich die gleiche Plattenzeitzugriffzeit teilen. Einige E/A-"
"Scheduler ermöglichen zwei Prozessen, die einen E/A-Kontext teilen, ihren "
"Plattenzugriff zu verzahnen. Falls mehrere Prozesse E/A im Auftrag des "
"gleichen Prozesses durchführen (B<aio_read>(3) zum Beispiel), sollten sie "
"für eine bessere E/A-Leistung B<CLONE_IO> verwenden."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"If the kernel is not configured with the B<CONFIG_BLOCK> option, this flag "
"is a no-op."
msgstr ""
"Falls der Kernel nicht mit der Option B<CONFIG_BLOCK> konfiguriert wurde, "
"bewirkt dieser Schalter nichts."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_NEWCGROUP> (since Linux 4.6)"
msgstr "B<CLONE_NEWCGROUP> (seit Linux 4.6)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"Create the process in a new cgroup namespace.  If this flag is not set, then "
"(as with B<fork>(2))  the process is created in the same cgroup namespaces "
"as the calling process."
msgstr ""
"Der Prozess wird in einem neuen cgroup-Namensraum erstellt. Falls dieser "
"Schalter nicht gesetzt ist, dann wird der Prozess (wie mit B<fork>(2)) im "
"gleichen cgroup-Namensraum wie der aufrufende Prozess erstellt."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"For further information on cgroup namespaces, see B<cgroup_namespaces>(7)."
msgstr ""
"Weitere Informationen über cgroup-Namensräume finden Sie unter "
"B<cgroup_namespaces>(7)."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"Only a privileged process (B<CAP_SYS_ADMIN>)  can employ B<CLONE_NEWCGROUP>."
msgstr ""
"Nur ein privilegierter Prozess (B<CAP_SYS_ADMIN>) kann B<CLONE_NEWCGROUP> "
"angeben."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_NEWIPC> (since Linux 2.6.19)"
msgstr "B<CLONE_NEWIPC> (seit Linux 2.6.19)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"If B<CLONE_NEWIPC> is set, then create the process in a new IPC namespace.  "
"If this flag is not set, then (as with B<fork>(2)), the process is created "
"in the same IPC namespace as the calling process."
msgstr ""
"Wenn B<CLONE_NEWIPC> gesetzt ist, dann wird der Prozess in einem neuen IPC-"
"Namensraum erstellt. Falls dieser Schalter nicht gesetzt ist, dann wird der "
"Prozess (wie mit B<fork>(2)) im gleichen IPC-Namensraum wie der aufrufende "
"Prozess erstellt."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid "For further information on IPC namespaces, see B<ipc_namespaces>(7)."
msgstr ""
"Weitere Informationen zu IPC-Namensräumen finden Sie in B<ipc_namespaces>(7)."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"Only a privileged process (B<CAP_SYS_ADMIN>)  can employ B<CLONE_NEWIPC>.  "
"This flag can't be specified in conjunction with B<CLONE_SYSVSEM>."
msgstr ""
"Nur ein privilegierter Prozess (B<CAP_SYS_ADMIN>) kann B<CLONE_NEWIPC> "
"angeben. Dieser Schalter darf nicht zusammen mit B<CLONE_SYSVSEM> angegeben "
"werden."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_NEWNET> (since Linux 2.6.24)"
msgstr "B<CLONE_NEWNET> (seit Linux 2.6.24)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"(The implementation of this flag was completed only by about kernel version "
"2.6.29.)"
msgstr ""
"(Die Implementierung dieses Schalters wurde erst ungefähr mit der Kernel-"
"Version 2.6.29 abgeschlossen.)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"If B<CLONE_NEWNET> is set, then create the process in a new network "
"namespace.  If this flag is not set, then (as with B<fork>(2))  the process "
"is created in the same network namespace as the calling process."
msgstr ""
"Wenn B<CLONE_NEWNET> gesetzt ist, dann wird der Prozess in einem neuen "
"Netzwerk-Namensraum erstellt. Falls dieser Schalter nicht gesetzt ist, dann "
"wird der Prozess (wie mit B<fork>(2)) im gleichen Netzwerk-Namensraum wie "
"der aufrufende Prozess erstellt."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"For further information on network namespaces, see B<network_namespaces>(7)."
msgstr ""
"Weitere Informationen zu Netzwerk-Namensräumen finden Sie in "
"B<network_namespaces>(7)."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"Only a privileged process (B<CAP_SYS_ADMIN>)  can employ B<CLONE_NEWNET>."
msgstr ""
"Nur ein privilegierter Prozess (B<CAP_SYS_ADMIN>) kann B<CLONE_NEWNET> "
"angeben."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_NEWNS> (since Linux 2.4.19)"
msgstr "B<CLONE_NEWNS> (seit Linux 2.4.19)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"If B<CLONE_NEWNS> is set, the cloned child is started in a new mount "
"namespace, initialized with a copy of the namespace of the parent.  If "
"B<CLONE_NEWNS> is not set, the child lives in the same mount namespace as "
"the parent."
msgstr ""
"Wenn der Schalter B<CLONE_NEWNS> gesetzt ist, wird der geklonte Kindprozess "
"in einem neuen, eingehängten Namensraum gestartet, der mit einer Kopie des "
"Namensraums des Elternprozesses initialisiert wurde. Wenn B<CLONE_NEWNS> "
"nicht gesetzt ist, bleibt der Kindprozess im gleichen Namensraum wie der "
"Elternprozess."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"For further information on mount namespaces, see B<namespaces>(7)  and "
"B<mount_namespaces>(7)."
msgstr ""
"Für weitere Informationen über Einhängenamensräume lesen Sie "
"B<namespaces>(7) und B<mount_namespaces>(7)"

#.  See https://lwn.net/Articles/543273/
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"Only a privileged process (B<CAP_SYS_ADMIN>)  can employ B<CLONE_NEWNS>.  It "
"is not permitted to specify both B<CLONE_NEWNS> and B<CLONE_FS> in the same "
"clone call."
msgstr ""
"Nur ein privilegierter Prozess (einer der die Fähigkeit B<CAP_SYS_ADMIN> "
"hat) kann den Schalter B<CLONE_NEWNS> angeben. Es ist nicht erlaubt, sowohl "
"B<CLONE_NEWNS> als auch B<CLONE_FS> im gleichen Aufruf von Clone anzugeben."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_NEWPID> (since Linux 2.6.24)"
msgstr "B<CLONE_NEWPID> (seit Linux 2.6.24)"

#.  This explanation draws a lot of details from
#.  http://lwn.net/Articles/259217/
#.  Authors: Pavel Emelyanov <xemul@openvz.org>
#.  and Kir Kolyshkin <kir@openvz.org>
#.  The primary kernel commit is 30e49c263e36341b60b735cbef5ca37912549264
#.  Author: Pavel Emelyanov <xemul@openvz.org>
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"If B<CLONE_NEWPID> is set, then create the process in a new PID namespace.  "
"If this flag is not set, then (as with B<fork>(2))  the process is created "
"in the same PID namespace as the calling process."
msgstr ""
"Wenn B<CLONE_NEWPID> gesetzt ist, dann wird der Prozess in einem neuen PID-"
"Namensraum erstellt. Falls dieser Schalter nicht gesetzt ist, dann wird der "
"Prozess (wie mit B<fork>(2)) im gleichen PID-Namensraum wie der aufrufende "
"Prozess erstellt."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"For further information on PID namespaces, see B<namespaces>(7)  and "
"B<pid_namespaces>(7)."
msgstr ""
"Weitere Informationen zu PID-Namensräumen finden Sie in B<namespaces>(7) und "
"B<pid_namespaces>(7)."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"Only a privileged process (B<CAP_SYS_ADMIN>)  can employ B<CLONE_NEWPID>.  "
"This flag can't be specified in conjunction with B<CLONE_THREAD> or "
"B<CLONE_PARENT>."
msgstr ""
"Nur ein privilegierter Prozess (B<CAP_SYS_ADMIN>) kann B<CLONE_NEWPID> "
"angeben. Dieser Schalter darf nicht zusammen mit B<CLONE_THREAD> oder "
"B<CLONE_PARENT> angegeben werden."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_NEWUSER>"
msgstr "B<CLONE_NEWUSER>"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"(This flag first became meaningful for B<clone>()  in Linux 2.6.23, the "
"current B<clone>()  semantics were merged in Linux 3.5, and the final pieces "
"to make the user namespaces completely usable were merged in Linux 3.8.)"
msgstr ""
"(Dieser Schalter hatte für B<clone>() erstmals in Linux 2.6.23 eine "
"Bedeutung, die aktuelle B<clone>()-Semantik wurde in Linux 3.5 aufgenommen "
"und die letzten Anteile, um Benutzernamensräume komplett nutzbar zu "
"bekommen, wurden in Linux 3.8 aufgenommen.)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"If B<CLONE_NEWUSER> is set, then create the process in a new user "
"namespace.  If this flag is not set, then (as with B<fork>(2))  the process "
"is created in the same user namespace as the calling process."
msgstr ""
"Wenn B<CLONE_NEWUSER> gesetzt ist, dann wird der Prozess in einem neuen "
"Benutzer-Namensraum erstellt. Falls dieser Schalter nicht gesetzt ist, dann "
"wird der Prozess (wie mit B<fork>(2)) im gleichen Benutzer-Namensraum wie "
"der aufrufende Prozess erstellt."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"For further information on user namespaces, see B<namespaces>(7)  and "
"B<user_namespaces>(7)."
msgstr ""
"Für weitere Informationen über Benutzernamensräume lesen Sie "
"B<namespaces>(7) und B<user_namespaces>(7)."

#.  Before Linux 2.6.29, it appears that only CAP_SYS_ADMIN was needed
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"Before Linux 3.8, use of B<CLONE_NEWUSER> required that the caller have "
"three capabilities: B<CAP_SYS_ADMIN>, B<CAP_SETUID>, and B<CAP_SETGID>.  "
"Starting with Linux 3.8, no privileges are needed to create a user namespace."
msgstr ""
"Vor Linux 3.8 verlangte die Verwendung von B<CLONE_NEWUSER>, dass der "
"Aufrufende drei Capabilities hatte: B<CAP_SYS_ADMIN>, B<CAP_SETUID> und "
"B<CAP_SETGID>. Seit Linux 3.8 werden für die Erstellung eines "
"Benutzernamensraums keine Privilegien benötigt."

#.  commit e66eded8309ebf679d3d3c1f5820d1f2ca332c71
#.  https://lwn.net/Articles/543273/
#.  The fix actually went into 3.9 and into 3.8.3. However, user namespaces
#.  were, for practical purposes, unusable in earlier 3.8.x because of the
#.  various filesystems that didn't support userns.
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"This flag can't be specified in conjunction with B<CLONE_THREAD> or "
"B<CLONE_PARENT>.  For security reasons, B<CLONE_NEWUSER> cannot be specified "
"in conjunction with B<CLONE_FS>."
msgstr ""
"Dieser Schalter kann nicht zusammen mit B<CLONE_THREAD> oder B<CLONE_PARENT> "
"angegeben werden. Aus Sicherheitsgründen darf B<CLONE_NEWUSER> nicht "
"zusammen mit B<CLONE_FS> angegeben werden."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_NEWUTS> (since Linux 2.6.19)"
msgstr "B<CLONE_NEWUTS> (seit Linux 2.6.19)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"If B<CLONE_NEWUTS> is set, then create the process in a new UTS namespace, "
"whose identifiers are initialized by duplicating the identifiers from the "
"UTS namespace of the calling process.  If this flag is not set, then (as "
"with B<fork>(2))  the process is created in the same UTS namespace as the "
"calling process."
msgstr ""
"Falls B<CLONE_NEWUTS> gesetzt ist, erzeugt der Prozess einen neuen UTS-"
"Namensraum, dessen Bezeichner durch Duplizieren der Bezeichner aus dem UTS-"
"Namensraum des aufrufenden Prozesses initialisiert werden. Wenn dieser "
"Schalter nicht gesetzt ist (wie mit B<fork>(2)), dann wird der Prozess im "
"gleichen UTS-Namensraum wie der aufrufende Prozess erzeugt."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid "For further information on UTS namespaces, see B<uts_namespaces>(7)."
msgstr ""
"Weitere Informationen zu UTS-Namensräumen finden Sie in B<uts_namespaces>(7)."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"Only a privileged process (B<CAP_SYS_ADMIN>)  can employ B<CLONE_NEWUTS>."
msgstr ""
"Nur ein privilegierter Prozess (B<CAP_SYS_ADMIN>) kann B<CLONE_NEWUTS> "
"angeben."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_PARENT> (since Linux 2.3.12)"
msgstr "B<CLONE_PARENT> (seit Linux 2.3.12)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"If B<CLONE_PARENT> is set, then the parent of the new child (as returned by "
"B<getppid>(2))  will be the same as that of the calling process."
msgstr ""
"Falls B<CLONE_PARENT> gesetzt ist, dann wird der Elternprozess des neuen "
"Kindprozesses (wie er von B<getppid>(2) zurückgegeben wird) der gleiche wie "
"der aufrufende Prozess sein."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"If B<CLONE_PARENT> is not set, then (as with B<fork>(2))  the child's parent "
"is the calling process."
msgstr ""
"Falls B<CLONE_PARENT> nicht gesetzt ist (wie bei B<fork>(2)), dann ist der "
"Elternprozess des Kindprozesses der aufrufende Prozess."

#. type: Plain text
#: archlinux debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-tumbleweed
msgid ""
"Note that it is the parent process, as returned by B<getppid>(2), which is "
"signaled when the child terminates, so that if B<CLONE_PARENT> is set, then "
"the parent of the calling process, rather than the calling process itself, "
"is signaled."
msgstr ""
"Beachten Sie, dass dem Elternprozess, wie er von B<getppid>(2) zurückgegeben "
"wird, signalisiert wird wenn der Kindprozess endet. Wenn also "
"B<CLONE_PARENT> gesetzt ist, wird dem Elternprozess des aufrufenden "
"Prozesses anstatt dem aufrufenden Prozess selbst das Signal gesandt."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"The B<CLONE_PARENT> flag can't be used in clone calls by the global init "
"process (PID 1 in the initial PID namespace)  and init processes in other "
"PID namespaces.  This restriction prevents the creation of multi-rooted "
"process trees as well as the creation of unreapable zombies in the initial "
"PID namespace."
msgstr ""
"Der Schalter B<CLONE_PARENT> kann in Clone-Aufrufen durch den globalen Init-"
"Prozess (PID 1 im anfänglichen PID-Namensraum) und in Init-Prozessen in "
"anderen PID-Namensräumen nicht verwandt werden. Diese Einschränkung "
"verhindert die Erstellung von Prozessbäumen mit mehreren Wurzeln sowie die "
"Erstellung von nicht zerstörbaren Zombies im anfänglichen PID-Namensraum."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_PARENT_SETTID> (since Linux 2.5.49)"
msgstr "B<CLONE_PARENT_SETTID> (seit Linux 2.5.49)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"Store the child thread ID at the location pointed to by I<parent_tid> "
"(B<clone>())  or I<cl_args.parent_tid> (B<clone3>())  in the parent's "
"memory.  (In Linux 2.5.32-2.5.48 there was a flag B<CLONE_SETTID> that did "
"this.)  The store operation completes before the clone call returns control "
"to user space."
msgstr ""
"Die Kindprozess-Thread-Kennung an der Stelle im Elternspeicher ablegen, auf "
"die I<Eltern_tid> (B<clone>()) oder I<cl_args.parent_tid> (B<clone3>()) "
"zeigt. (In Linux 2.5.32-2.5.48 gab es einen Schalter B<CLONE_SETTID>, der "
"das tat.) Die Speicheraktion wird abgeschlossen, bevor der Clone-Aufruf die "
"Steuerung an den Benutzerraum zurückgibt."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_PID> (Linux 2.0 to 2.5.15)"
msgstr "B<CLONE_PID> (Linux 2.0 bis 2.5.15)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"If B<CLONE_PID> is set, the child process is created with the same process "
"ID as the calling process.  This is good for hacking the system, but "
"otherwise of not much use.  From Linux 2.3.21 onward, this flag could be "
"specified only by the system boot process (PID 0).  The flag disappeared "
"completely from the kernel sources in Linux 2.5.16.  Subsequently, the "
"kernel silently ignored this bit if it was specified in the I<flags> mask.  "
"Much later, the same bit was recycled for use as the B<CLONE_PIDFD> flag."
msgstr ""
"Falls B<CLONE_PID> gesetzt ist, wird der Kindprozess mit der gleichen "
"Prozesskennung wie der aufrufende Prozess erstellt. Dies ist gut, um das "
"System zu hacken, aber andererseits zu nicht viel mehr zu gebrauchen. Seit "
"Linux 2.3.21 konnte dieser Schalter nur durch den Boot-Prozess festgelegt "
"werden (PID 0). Dieser Schalter verschwand in Linux 2.5.16 komplett aus den "
"Kernelquellen. In der Folge ignorierte der Kernel dieses Bit, falls es in "
"der I<Schalter>-Maske angegeben wurde. Viel später wurde das Bit für die "
"Verwendung als Schalter B<CLONE_PIDFD> recyclet."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_PIDFD> (since Linux 5.2)"
msgstr "B<CLONE_PIDFD> (seit Linux 5.2)"

#.  commit b3e5838252665ee4cfa76b82bdf1198dca81e5be
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"If this flag is specified, a PID file descriptor referring to the child "
"process is allocated and placed at a specified location in the parent's "
"memory.  The close-on-exec flag is set on this new file descriptor.  PID "
"file descriptors can be used for the purposes described in B<pidfd_open>(2)."
msgstr ""
"Falls dieser Schalter angegeben ist, wird ein PID-Dateideskriptor, der sich "
"auf einen Kindprozess bezieht, reserviert und an dem angegebenen Ort im "
"Speicher des Elternprozesses abgelegt. Der Schalter »close-on-exec« wird bei "
"diesem neuen Dateideskriptor gesetzt. PID-Dateideskriptoren können für die "
"in B<pidfd_open>(2) beschriebenen Zwecke verwandt werden."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"When using B<clone3>(), the PID file descriptor is placed at the location "
"pointed to by I<cl_args.pidfd>."
msgstr ""
"Bei der Verwendung von B<clone3>() wird der PID-Dateideskriptor an dem durch "
"I<cl_args.pidfd> angezeigten Ort abgelegt."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"When using B<clone>(), the PID file descriptor is placed at the location "
"pointed to by I<parent_tid>.  Since the I<parent_tid> argument is used to "
"return the PID file descriptor, B<CLONE_PIDFD> cannot be used with "
"B<CLONE_PARENT_SETTID> when calling B<clone>()."
msgstr ""
"Bei der Verwendung von B<clone>() wird der PID-Dateideskriptor an dem Ort "
"abgelegt, auf den I<Eltern_tid> zeigt. Da das Argument I<Eltern_tid> zur "
"Rückgabe des PID-Dateideskriptors verwandt wird, kann B<CLONE_PIDFD> beim "
"Aufruf von B<clone>() nicht mit B<CLONE_PARENT_SETTID> benutzt werden."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"It is currently not possible to use this flag together with B<CLONE_THREAD.> "
"This means that the process identified by the PID file descriptor will "
"always be a thread group leader."
msgstr ""
"Es ist derzeit nicht möglich, diesen Schalter zusammen mit B<CLONE_THREAD> "
"zu verwenden. Das bedeutet, dass ein durch den PID-Dateideskriptor "
"identifizierter Prozess immer der Prozessgruppenleiter sein wird."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"If the obsolete B<CLONE_DETACHED> flag is specified alongside B<CLONE_PIDFD> "
"when calling B<clone>(), an error is returned.  An error also results if "
"B<CLONE_DETACHED> is specified when calling B<clone3>().  This error "
"behavior ensures that the bit corresponding to B<CLONE_DETACHED> can be "
"reused for further PID file descriptor features in the future."
msgstr ""
"Falls der veraltete Schalter B<CLONE_DETACHED> beim Aufruf von B<clone>() "
"zusammen mit B<CLONE_PIDFD> angegeben wird, wird ein Fehler zurückgeliefert. "
"Falls B<CLONE_DETACHED> beim Aufruf von B<clone3>() angegeben wird, wird "
"auch ein Fehler zurückgeliefert. Dieses Fehlerverhalten stellt sicher, dass "
"das B<CLONE_DETACHED> entsprechende Bit für weitere PID-"
"Dateideskriptorenfunktionalitäten in der Zukunft recyclet werden kann."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_PTRACE> (since Linux 2.2)"
msgstr "B<CLONE_PTRACE> (seit Linux 2.2)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"If B<CLONE_PTRACE> is specified, and the calling process is being traced, "
"then trace the child also (see B<ptrace>(2))."
msgstr ""
"Falls B<CLONE_PTRACE> angegeben ist und der aufrufende Prozess verfolgt "
"wird, dann wird der Kindprozess ebenfalls verfolgt (siehe B<ptrace>(2))."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_SETTLS> (since Linux 2.5.32)"
msgstr "B<CLONE_SETTLS> (seit Linux 2.5.32)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid "The TLS (Thread Local Storage) descriptor is set to I<tls>."
msgstr "Der TLS (Thread Local Storage)-Deskriptor ist auf I<tls> gesetzt."

#. type: Plain text
#: archlinux
#, fuzzy
#| msgid ""
#| "The interpretation of I<tls> and the resulting effect is architecture "
#| "dependent.  On x86, I<tls> is interpreted as a I<struct user_desc\\ *> "
#| "(see B<set_thread_area>(2)).  On x86-64 it is the new value to be set for "
#| "the %fs base register (see the B<ARCH_SET_FS> argument to "
#| "B<arch_prctl>(2)).  On architectures with a dedicated TLS register, it is "
#| "the new value of that register."
msgid ""
"The interpretation of I<tls> and the resulting effect is architecture "
"dependent.  On x86, I<tls> is interpreted as a I<struct user_desc\\~*> (see "
"B<set_thread_area>(2)).  On x86-64 it is the new value to be set for the %fs "
"base register (see the B<ARCH_SET_FS> argument to B<arch_prctl>(2)).  On "
"architectures with a dedicated TLS register, it is the new value of that "
"register."
msgstr ""
"Die Interpretation von I<tls> und der resultierende Effekt ist "
"architekturabhängig. Auf X86 ist I<tls> als ein I<struct user_desc\\ *> "
"interpretiert (siehe B<set_thread_area>(2)). Auf X86-64 ist es der neue für "
"das Basisregister %fs zu setzende Wert (siehe das Argument B<ARCH_SET_FS> "
"von B<arch_prctl>(2)). Auf Architekturen mit einem dedizierten TLS-Register "
"ist es der neue Wert dieses Registers."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"Use of this flag requires detailed knowledge and generally it should not be "
"used except in libraries implementing threading."
msgstr ""
"Der Einsatz dieses Schalters verlangt detaillierte Kenntnisse und sollte im "
"Allgemeinen nicht erfolgen, außer in einigen Bibliotheken, die Threading "
"implementieren."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_SIGHAND> (since Linux 2.0)"
msgstr "B<CLONE_SIGHAND> (seit Linux 2.0)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"If B<CLONE_SIGHAND> is set, the calling process and the child process share "
"the same table of signal handlers.  If the calling process or child process "
"calls B<sigaction>(2)  to change the behavior associated with a signal, the "
"behavior is changed in the other process as well.  However, the calling "
"process and child processes still have distinct signal masks and sets of "
"pending signals.  So, one of them may block or unblock signals using "
"B<sigprocmask>(2)  without affecting the other process."
msgstr ""
"Ist B<CLONE_SIGHAND> gesetzt, teilen sich der aufrufende Prozess und der "
"Kindprozess die Tabelle der Signal-Handler. Ruft einer der beiden Prozesse "
"B<sigaction>(2) auf, um das Antwortverhalten auf ein Signal zu verändern, so "
"betrifft dies auch den anderen Prozess. Jedoch besitzen aufrufender Prozess "
"und Kindprozess nach wie vor getrennte Signalmasken und getrennte Listen der "
"noch ausstehenden Signale. Daher könnten Signale durch Aufruf von "
"B<sigprocmask>(2) für einen Prozess geblockt oder zugelassen werden ohne den "
"anderen Prozess zu beeinflussen."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"If B<CLONE_SIGHAND> is not set, the child process inherits a copy of the "
"signal handlers of the calling process at the time of the clone call.  Calls "
"to B<sigaction>(2)  performed later by one of the processes have no effect "
"on the other process."
msgstr ""
"Ist B<CLONE_SIGHAND> nicht gesetzt, erbt der Kindprozess zum Zeitpunkt des "
"Clone-Aufrufs eine Kopie des Signal-Handlers vom aufrufenden Prozess. "
"Spätere Aufrufe von B<sigaction>(2) durch einen der Prozesse hat dann keine "
"Auswirkung auf den anderen Prozess."

#.  Precisely: Linux 2.6.0-test6
#. type: Plain text
#: archlinux debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-tumbleweed
msgid ""
"Since Linux 2.6.0, the I<flags> mask must also include B<CLONE_VM> if "
"B<CLONE_SIGHAND> is specified."
msgstr ""
"Seit Linux 2.6.0 muss die I<Schalter>-Maske außerdem B<CLONE_VM> enthalten, "
"falls B<CLONE_SIGHAND> angegeben wurde."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_STOPPED> (since Linux 2.6.0)"
msgstr "B<CLONE_STOPPED> (seit Linux 2.6.0)"

#. #-#-#-#-#  archlinux: clone.2.pot (PACKAGE VERSION)  #-#-#-#-#
#.  Precisely: Linux 2.6.0-test2
#. type: Plain text
#. #-#-#-#-#  debian-bullseye: clone.2.pot (PACKAGE VERSION)  #-#-#-#-#
#.  Precisely: Linux 2.6.0-test2
#. type: Plain text
#. #-#-#-#-#  debian-unstable: clone.2.pot (PACKAGE VERSION)  #-#-#-#-#
#.  Precisely: Linux 2.6.0-test2
#. type: Plain text
#. #-#-#-#-#  fedora-37: clone.2.pot (PACKAGE VERSION)  #-#-#-#-#
#.  Precisely: Linux 2.6.0-test2
#. type: Plain text
#. #-#-#-#-#  fedora-rawhide: clone.2.pot (PACKAGE VERSION)  #-#-#-#-#
#.  Precisely: Linux 2.6.0-test2
#. type: Plain text
#. #-#-#-#-#  mageia-cauldron: clone.2.pot (PACKAGE VERSION)  #-#-#-#-#
#.  Precisely: Linux 2.6.0-test2
#. type: Plain text
#. #-#-#-#-#  opensuse-leap-15-5: clone.2.pot (PACKAGE VERSION)  #-#-#-#-#
#. type: Plain text
#. #-#-#-#-#  opensuse-tumbleweed: clone.2.pot (PACKAGE VERSION)  #-#-#-#-#
#.  Precisely: Linux 2.6.0-test2
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"If B<CLONE_STOPPED> is set, then the child is initially stopped (as though "
"it was sent a B<SIGSTOP> signal), and must be resumed by sending it a "
"B<SIGCONT> signal."
msgstr ""
"Falls B<CLONE_STOPPED> gesetzt ist, ist der Kindprozess anfangs gestoppt "
"(als ob ein B<SIGSTOP>-Signal gesendet worden wäre) und muss durch Senden "
"eines B<SIGCONT>-Signals wieder aufgenommen werden."

#.  glibc 2.8 removed this defn from bits/sched.h
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"This flag was I<deprecated> from Linux 2.6.25 onward, and was I<removed> "
"altogether in Linux 2.6.38.  Since then, the kernel silently ignores it "
"without error.  Starting with Linux 4.6, the same bit was reused for the "
"B<CLONE_NEWCGROUP> flag."
msgstr ""
"Dieser Schalter war ab Linux 2.6.25 I<missbilligt> und wurde in Linux 2.6.38 "
"vollständig I<entfernt>. Seitdem ignoriert der Kernel ihn ohne Fehler. Seit "
"Linux 4.6 wird dasselbe Bit für den Schalter B<CLONE_NEWCGROUP> "
"wiederverwendet."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_SYSVSEM> (since Linux 2.5.10)"
msgstr "B<CLONE_SYSVSEM> (seit Linux 2.5.10)"

# http://de.wikipedia.org/wiki/Semaphor_(Informatik)
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"If B<CLONE_SYSVSEM> is set, then the child and the calling process share a "
"single list of System V semaphore adjustment (I<semadj>)  values (see "
"B<semop>(2)).  In this case, the shared list accumulates I<semadj> values "
"across all processes sharing the list, and semaphore adjustments are "
"performed only when the last process that is sharing the list terminates (or "
"ceases sharing the list using B<unshare>(2)).  If this flag is not set, then "
"the child has a separate I<semadj> list that is initially empty."
msgstr ""
"Wenn B<CLONE_SYSVSEM> gesetzt ist, dann teilen sich der Kindprozess und der "
"aufrufende Prozess eine einzige Liste von System-V-Semaphore-"
"Anpassungswerten, (siehe B<semop>(2)). In diesem Fall sammelt die gemeinsame "
"Liste I<semadj> Werte über alle Prozesse, die die Liste gemeinsam nutzen und "
"Semaphore-Anpassungen werden nur durchgeführt, wenn der letzte Prozess, der "
"die Liste gemeinsam nutzt, sich beendet (oder mittels B<unshare>(2) aufhört, "
"die Liste mitzunutzen). Falls dieser Schalter nicht gesetzt ist, besitzt der "
"Kindprozess eine separate I<semadj>-Liste, die anfangs leer ist."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_THREAD> (since Linux 2.4.0)"
msgstr "B<CLONE_THREAD> (seit Linux 2.4.0)"

#. #-#-#-#-#  archlinux: clone.2.pot (PACKAGE VERSION)  #-#-#-#-#
#.  Precisely: Linux 2.6.0-test8
#. type: Plain text
#. #-#-#-#-#  debian-bullseye: clone.2.pot (PACKAGE VERSION)  #-#-#-#-#
#.  Precisely: Linux 2.6.0-test8
#. type: Plain text
#. #-#-#-#-#  debian-unstable: clone.2.pot (PACKAGE VERSION)  #-#-#-#-#
#.  Precisely: Linux 2.6.0-test8
#. type: Plain text
#. #-#-#-#-#  fedora-37: clone.2.pot (PACKAGE VERSION)  #-#-#-#-#
#.  Precisely: Linux 2.6.0-test8
#. type: Plain text
#. #-#-#-#-#  fedora-rawhide: clone.2.pot (PACKAGE VERSION)  #-#-#-#-#
#.  Precisely: Linux 2.6.0-test8
#. type: Plain text
#. #-#-#-#-#  mageia-cauldron: clone.2.pot (PACKAGE VERSION)  #-#-#-#-#
#.  Precisely: Linux 2.6.0-test8
#. type: Plain text
#. #-#-#-#-#  opensuse-leap-15-5: clone.2.pot (PACKAGE VERSION)  #-#-#-#-#
#. type: Plain text
#. #-#-#-#-#  opensuse-tumbleweed: clone.2.pot (PACKAGE VERSION)  #-#-#-#-#
#.  Precisely: Linux 2.6.0-test8
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"If B<CLONE_THREAD> is set, the child is placed in the same thread group as "
"the calling process.  To make the remainder of the discussion of "
"B<CLONE_THREAD> more readable, the term \"thread\" is used to refer to the "
"processes within a thread group."
msgstr ""
"Falls B<CLONE_THREAD> gesetzt ist, wird der Kindprozess in die gleiche "
"Thread-Gruppe wie der aufrufende Prozess platziert. Um den Rest der "
"Diskussion von B<CLONE_THREAD> leserlicher zu machen, wird der Begriff "
"»Thread« benutzt, um Bezug auf Prozesse innerhalb einer Thread-Gruppe zu "
"nehmen."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"Thread groups were a feature added in Linux 2.4 to support the POSIX threads "
"notion of a set of threads that share a single PID.  Internally, this shared "
"PID is the so-called thread group identifier (TGID) for the thread group.  "
"Since Linux 2.4, calls to B<getpid>(2)  return the TGID of the caller."
msgstr ""
"Thread-Gruppen waren ein Leistungsmerkmal, das in Linux 2.4 hinzugefügt "
"wurde, um den POSIX-Thread-Gedanken von einer Thread-Zusammenstellung zu "
"unterstützen, die sich eine einzelne PID teilt. Intern ist diese gemeinsame "
"PID ein sogenannter Thread-Gruppen-Bezeichner (TGID) für die Thread-Gruppe. "
"Seit Linux 2.4 geben Aufrufe von B<getpid>(2) die TGID des Aufrufers zurück."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"The threads within a group can be distinguished by their (system-wide)  "
"unique thread IDs (TID).  A new thread's TID is available as the function "
"result returned to the caller, and a thread can obtain its own TID using "
"B<gettid>(2)."
msgstr ""
"Die Threads innerhalb einer Gruppe können durch ihre (systemweit) "
"einheitliche Thread-Kennung (TID) unterschieden werden. Die TID eines neuen "
"Threads ist als Funktionsergebnis verfügbar, das an den Aufrufenden "
"zurückgegeben wird. Ein Thread kann durch Benutzen von B<gettid>(2) seine "
"eigene TID erhalten."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"When a clone call is made without specifying B<CLONE_THREAD>, then the "
"resulting thread is placed in a new thread group whose TGID is the same as "
"the thread's TID.  This thread is the I<leader> of the new thread group."
msgstr ""
"Wenn Clone ohne Angabe von B<CLONE_THREAD> aufgerufen wurde, dann wird der "
"resultierende Thread in eine neue Thread-Gruppe platziert, deren TGID der "
"TID des Threads entspricht. Dieser Thread ist der I<Führer> der neuen Thread-"
"Gruppe."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"A new thread created with B<CLONE_THREAD> has the same parent process as the "
"process that made the clone call (i.e., like B<CLONE_PARENT>), so that calls "
"to B<getppid>(2)  return the same value for all of the threads in a thread "
"group.  When a B<CLONE_THREAD> thread terminates, the thread that created it "
"is not sent a B<SIGCHLD> (or other termination) signal; nor can the status "
"of such a thread be obtained using B<wait>(2).  (The thread is said to be "
"I<detached>.)"
msgstr ""
"Ein neuer mit B<CLONE_THREAD> erzeugter Thread hat den gleichen "
"Elternprozess wie der, der Clone aufrufen hat (d.h. wie B<CLONE_PARENT>), so "
"dass Aufrufe von B<getppid>(2) den gleichen Wert für alle Threads in der "
"Thread-Gruppe zurückliefern. Wenn ein B<CLONE_THREAD>-Thread endet, wird dem "
"Thread, der ihn erstellt hat, weder ein B<SIGCHLD>-Signal (oder ein anderes "
"Ende-Signal) gesandt, noch kann der Status eines solchen Threads per "
"B<wait>(2) abgefragt werden. (Der Thread wird als I<losgelöst> bezeichnet.)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"After all of the threads in a thread group terminate the parent process of "
"the thread group is sent a B<SIGCHLD> (or other termination) signal."
msgstr ""
"Nachdem alle Threads in einer Thread-Gruppe beendet sind, wird dem "
"Elternprozess ein B<SIGCHLD>-Signal (oder ein anderes Ende-Signal) gesandt."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"If any of the threads in a thread group performs an B<execve>(2), then all "
"threads other than the thread group leader are terminated, and the new "
"program is executed in the thread group leader."
msgstr ""
"Falls einige der Threads in einer Thread-Gruppe ein B<execve>(2) "
"durchführen, dann werden alle Threads außer dem Thread-Führer beendet und "
"das neue Programm wird im Thread-Gruppenführer ausgeführt."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"If one of the threads in a thread group creates a child using B<fork>(2), "
"then any thread in the group can B<wait>(2)  for that child."
msgstr ""
"Falls einer der Threads in einer Thread-Gruppe per B<fork>(2) einen "
"Kindprozess erzeugt, dann kann jeder Thread in der Gruppe B<wait>(2) für "
"diesen Kindprozess ausführen."

#.  Precisely: Linux 2.6.0-test6
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"Since Linux 2.5.35, the I<flags> mask must also include B<CLONE_SIGHAND> if "
"B<CLONE_THREAD> is specified (and note that, since Linux 2.6.0, "
"B<CLONE_SIGHAND> also requires B<CLONE_VM> to be included)."
msgstr ""
"Seit Linux 2.5.35 muss die I<Schalter>-Maske auch B<CLONE_SIGHAND> "
"enthalten, wenn B<CLONE_THREAD> angegeben wurde. Beachten Sie auch, dass "
"seit Linux 2.6.0 B<CLONE_SIGHAND> auch B<CLONE_VM> enthalten muss."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"Signal dispositions and actions are process-wide: if an unhandled signal is "
"delivered to a thread, then it will affect (terminate, stop, continue, be "
"ignored in)  all members of the thread group."
msgstr ""
"Signalzuordnungen und -aktionen sind prozessweit: Falls ein nicht "
"abgefangenes Signal an den Thread geschickt wird, dann wird es alle "
"Mitglieder in der Thread-Gruppe beeinflussen (beenden, stoppen, fortfahren, "
"darin ignoriert werden)."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid "Each thread has its own signal mask, as set by B<sigprocmask>(2)."
msgstr ""
"Jeder Thread hat seine eigene Signalmaske, wie von B<sigprocmask>(2) gesetzt."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"A signal may be process-directed or thread-directed.  A process-directed "
"signal is targeted at a thread group (i.e., a TGID), and is delivered to an "
"arbitrarily selected thread from among those that are not blocking the "
"signal.  A signal may be process-directed because it was generated by the "
"kernel for reasons other than a hardware exception, or because it was sent "
"using B<kill>(2)  or B<sigqueue>(3).  A thread-directed signal is targeted "
"at (i.e., delivered to)  a specific thread.  A signal may be thread directed "
"because it was sent using B<tgkill>(2)  or B<pthread_sigqueue>(3), or "
"because the thread executed a machine language instruction that triggered a "
"hardware exception (e.g., invalid memory access triggering B<SIGSEGV> or a "
"floating-point exception triggering B<SIGFPE>)."
msgstr ""
"Ein Signal kann Prozess-orientiert oder Thread-orientiert sein. Ein Prozess-"
"orientiertes Signal kann auf eine Thread-Gruppe (d.h. einer TGID) abzielen "
"und wird an einen beliebig ausgewählten Thread innerhalb dieser, der das "
"Signal nicht blockiert, ausgeliefert. Ein Signal kann Prozess-orientiert "
"sein, da es vom Kernel aus anderen Gründen (neben Hardware-"
"Ausnahmebehandlungen) erstellt wurde oder da mittels B<kill>(2) oder "
"B<sigqueue>(3) gesandt wurde\\&. Ein Thread-orientiertes Signal zielt auf "
"ein bestimmten Thread (d.h. wird an ihn ausgeliefert). Ein Signal kann "
"Thread-orientiert sein, da es mittels B<tgkill>(2) oder "
"B<pthread_sigqueue>(3) gesandt wurde oder da der Thread einen "
"Maschinensprachenbefehl ausführte, der eine Hardware-Ausnahmebehandlung "
"auslöste (z.B. löst ein ungültiger Speicherzugriff B<SIGSEGV> oder eine "
"Fließkommaausnahmebehandlung B<SIGFPE> aus)."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"A call to B<sigpending>(2)  returns a signal set that is the union of the "
"pending process-directed signals and the signals that are pending for the "
"calling thread."
msgstr ""
"Ein Aufruf von B<sigpending>(2) liefert eine Signalmenge zurück, die die "
"Vereinigung der anhängigen Prozess-orientierten Signale und der Signale, die "
"für den aufrufenden Thread anhängig sind, ist."

#. type: Plain text
#: archlinux debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-tumbleweed
msgid ""
"If a process-directed signal is delivered to a thread group, and the thread "
"group has installed a handler for the signal, then the handler is invoked in "
"exactly one, arbitrarily selected member of the thread group that has not "
"blocked the signal.  If multiple threads in a group are waiting to accept "
"the same signal using B<sigwaitinfo>(2), the kernel will arbitrarily select "
"one of these threads to receive the signal."
msgstr ""
"Falls ein Prozess-orientiertes Signal an eine Thread-Gruppe ausgeliefert "
"wird und die Thread-Gruppe einen Handler für dieses Signal installiert hat, "
"dann dann wird der Handler in exakt einem willkürlich ausgewählten Mitglied "
"der Thread-Gruppe aufrufen, das das Signal nicht blockiert hat. Falls "
"mehrere Threads in einer Gruppe darauf warten das gleiche Signal per "
"B<sigwaitinfo>(2) zu akzeptieren, wird der Kernel einen dieser Threads "
"willkürlich auswählen, um das Signal zu empfangen."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_UNTRACED> (since Linux 2.5.46)"
msgstr "B<CLONE_UNTRACED> (seit Linux 2.5.46)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"If B<CLONE_UNTRACED> is specified, then a tracing process cannot force "
"B<CLONE_PTRACE> on this child process."
msgstr ""
"Falls B<CLONE_UNTRACED> angegeben ist, kann ein verfolgender Prozess kein "
"B<CLONE_PTRACE> auf diesem Kindprozess erzwingen."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_VFORK> (since Linux 2.2)"
msgstr "B<CLONE_VFORK> (seit Linux 2.2)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"If B<CLONE_VFORK> is set, the execution of the calling process is suspended "
"until the child releases its virtual memory resources via a call to "
"B<execve>(2)  or B<_exit>(2)  (as with B<vfork>(2))."
msgstr ""
"Falls B<CLONE_VFORK> gesetzt ist, wird die Ausführung des aufrufenden "
"Prozesses aufgeschoben bis der Kindprozess seine virtuellen "
"Speicherressourcen durch Aufrufen von B<execve>(2) oder B<_exit>(2) (wie bei "
"B<vfork>(2)) freigibt."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"If B<CLONE_VFORK> is not set, then both the calling process and the child "
"are schedulable after the call, and an application should not rely on "
"execution occurring in any particular order."
msgstr ""
"Falls B<CLONE_VFORK> nicht gesetzt ist, dann werden sowohl der aufrufende "
"Prozess, als auch der Kindprozess nach dem Aufruf planbar und eine Anwendung "
"sollte sich nicht darauf verlassen, dass die Ausführung in einer speziellen "
"Reihenfolge erfolgt."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<CLONE_VM> (since Linux 2.0)"
msgstr "B<CLONE_VM> (seit Linux 2.0)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"If B<CLONE_VM> is set, the calling process and the child process run in the "
"same memory space.  In particular, memory writes performed by the calling "
"process or by the child process are also visible in the other process.  "
"Moreover, any memory mapping or unmapping performed with B<mmap>(2)  or "
"B<munmap>(2)  by the child or calling process also affects the other process."
msgstr ""
"Ist B<CLONE_VM> gesetzt, laufen aufrufender Prozess und Kindprozess im "
"selben Speicherbereich. Insbesondere sind Schreibzugriffe des aufrufenden "
"Prozesses oder des Kindprozesses in den gemeinsamen Speicher auch vom "
"anderen Prozess aus sichtbar. Zudem beeinflusst jede Veränderung der "
"Speicher-Mappings mit B<mmap>(2) oder B<munmap>(2) durch den Kindprozess "
"oder den aufrufenden Prozess auch den jeweils anderen Prozess."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"If B<CLONE_VM> is not set, the child process runs in a separate copy of the "
"memory space of the calling process at the time of the clone call.  Memory "
"writes or file mappings/unmappings performed by one of the processes do not "
"affect the other, as with B<fork>(2)."
msgstr ""
"Ist B<CLONE_VM> nicht gesetzt, erhält der Kindprozess eine eigene Kopie des "
"Speicherbereichs des aufrufenden Prozesses zum Zeitpunkt des Clone-Aufrufs. "
"Führt ein Prozess Schreibzugriffe auf den Speicher oder Änderungen am "
"Dateispeicher-Mapping aus, beeinflussen diese Operationen nicht den jeweils "
"anderen, wie bei B<fork>(2)."

#. type: Plain text
#: archlinux debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-tumbleweed
msgid ""
"If the B<CLONE_VM> flag is specified and the B<CLONE_VFORK> flag is not "
"specified, then any alternate signal stack that was established by "
"B<sigaltstack>(2)  is cleared in the child process."
msgstr ""
"Falls der Schalter B<CLONE_VM> angegeben und der Schalter B<CLONE_VFORK> "
"nicht angegeben ist, dann wird jeder alternative Stapel, der durch "
"B<sigaltstack>(2) etabliert wurde, im Kindprozess bereinigt."

#. type: SH
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "RETURN VALUE"
msgstr "RÜCKGABEWERT"

#.  gettid(2) returns current->pid;
#.  getpid(2) returns current->tgid;
#. type: Plain text
#: archlinux debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-tumbleweed
msgid ""
"On success, the thread ID of the child process is returned in the caller's "
"thread of execution.  On failure, -1 is returned in the caller's context, no "
"child process is created, and I<errno> is set to indicate the error."
msgstr ""
"Bei Erfolg wird im ausgeführten Thread des Aufrufenden die Thread-Kennung "
"des Kindprozesses zurückgegeben. Im Fehlerfall wird im Kontext des "
"Aufrufenden -1 zurückgegeben, kein Kindprozess erzeugt und I<errno> gesetzt, "
"um den Fehler anzuzeigen."

#. type: SH
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "ERRORS"
msgstr "FEHLER"

#. type: TP
#: archlinux
#, fuzzy, no-wrap
#| msgid "B<EEXIST> (B<clone3>() only)"
msgid "B<EACCES> (B<clone3>() only)"
msgstr "B<EEXIST> (nur B<clone3>())"

#. type: Plain text
#: archlinux
#, fuzzy
#| msgid ""
#| "B<CLONE_INTO_CGROUP> was specified in I<cl_args.flags>, but the file "
#| "descriptor specified in I<cl_args.cgroup> refers to a version 2 cgroup "
#| "that is in the I<domain invalid> state."
msgid ""
"B<CLONE_INTO_CGROUP> was specified in I<cl_args.flags>, but the restrictions "
"(described in B<cgroups>(7))  on placing the child process into the version "
"2 cgroup referred to by I<cl_args.cgroup> are not met."
msgstr ""
"B<CLONE_INTO_CGROUP> wurde in I<cl_args.flags> angegeben, aber der in "
"I<cl_args.cgroup> angegebene Dateideskriptor bezieht sich auf eine Version-2-"
"Cgroup, die im Zustand I<Domain ungültig> ist."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<EAGAIN>"
msgstr "B<EAGAIN>"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid "Too many processes are already running; see B<fork>(2)."
msgstr "Es laufen bereits zu viele Prozesse; siehe B<fork>(2)."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "B<EBUSY> (B<clone3>() only)"
msgstr "B<EBUSY> (nur B<clone3>())"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"B<CLONE_INTO_CGROUP> was specified in I<cl_args.flags>, but the file "
"descriptor specified in I<cl_args.cgroup> refers to a version 2 cgroup in "
"which a domain controller is enabled."
msgstr ""
"B<CLONE_INTO_CGROUP> wurde in I<cl_args.flags> angegeben, aber der in "
"I<cl_args.cgroup> angegebene Dateideskriptor bezieht sich auf eine Version-2-"
"Cgroup, in der ein Domain-Controller aktiviert wurde."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "B<EEXIST> (B<clone3>() only)"
msgstr "B<EEXIST> (nur B<clone3>())"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"One (or more) of the PIDs specified in I<set_tid> already exists in the "
"corresponding PID namespace."
msgstr ""
"Eine (oder mehrere) der in I<set_tid> festgelegten PIDs existiert im "
"entsprechenden PID-Namensraum bereits."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<EINVAL>"
msgstr "B<EINVAL>"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"Both B<CLONE_SIGHAND> and B<CLONE_CLEAR_SIGHAND> were specified in the "
"I<flags> mask."
msgstr ""
"In der I<Schalter>-Maske wurden sowohl B<CLONE_SIGHAND> als auch "
"B<CLONE_CLEAR_SIGHAND> festgelegt."

#.  Precisely: Linux 2.6.0-test6
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"B<CLONE_SIGHAND> was specified in the I<flags> mask, but B<CLONE_VM> was "
"not.  (Since Linux 2.6.0.)"
msgstr ""
"B<CLONE_SIGHAND> wurde in der I<Schalter>-Maske festgelegt, aber nicht "
"B<CLONE_VM>. (Seit Linux 2.6.0.)"

#.  .TP
#.  .B EINVAL
#.  Precisely one of
#.  .B CLONE_DETACHED
#.  and
#.  .B CLONE_THREAD
#.  was specified.
#.  (Since Linux 2.6.0-test6.)
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"B<CLONE_THREAD> was specified in the I<flags> mask, but B<CLONE_SIGHAND> was "
"not.  (Since Linux 2.5.35.)"
msgstr ""
"B<CLONE_THREAD> wurde in der I<Schalter>-Maske festgelegt, aber nicht "
"B<CLONE_SIGHAND>. (Seit Linux 2.5.35.)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"B<CLONE_THREAD> was specified in the I<flags> mask, but the current process "
"previously called B<unshare>(2)  with the B<CLONE_NEWPID> flag or used "
"B<setns>(2)  to reassociate itself with a PID namespace."
msgstr ""
"B<CLONE_THREAD> wurde in der I<Schalter>-Maske festgelegt, aber der aktuelle "
"Prozess hatte vorher B<unshare>(2) mit dem Schalter B<CLONE_NEWPID> "
"aufgerufen oder B<setns>(2) verwandt, um sich wieder einem PID-Namensraum "
"zuzuordnen."

#.  commit e66eded8309ebf679d3d3c1f5820d1f2ca332c71
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"Both B<CLONE_FS> and B<CLONE_NEWNS> were specified in the I<flags> mask."
msgstr ""
"In der I<Schalter>-Maske wurden sowohl B<CLONE_FS> als auch B<CLONE_NEWNS> "
"festgelegt."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<EINVAL> (since Linux 3.9)"
msgstr "B<EINVAL> (seit Linux 3.9)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"Both B<CLONE_NEWUSER> and B<CLONE_FS> were specified in the I<flags> mask."
msgstr ""
"In der I<Schalter>-Maske wurden sowohl B<CLONE_NEWUSER> als auch B<CLONE_FS> "
"festgelegt."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"Both B<CLONE_NEWIPC> and B<CLONE_SYSVSEM> were specified in the I<flags> "
"mask."
msgstr ""
"In der I<Schalter>-Maske wurden sowohl B<CLONE_NEWIPC> als auch "
"B<CLONE_SYSVSEM> festgelegt."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"One (or both) of B<CLONE_NEWPID> or B<CLONE_NEWUSER> and one (or both) of "
"B<CLONE_THREAD> or B<CLONE_PARENT> were specified in the I<flags> mask."
msgstr ""
"Eines (oder beides) von B<CLONE_NEWPID> oder B<CLONE_NEWUSER> und eines "
"(oder beides) von B<CLONE_THREAD> oder B<CLONE_PARENT> wurde in der "
"I<Schalter>-Maske festgelegt."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "B<EINVAL> (since Linux 2.6.32)"
msgstr "B<EINVAL> (seit Linux 2.6.32)"

#.  commit 123be07b0b399670a7cc3d82fef0cb4f93ef885c
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid "B<CLONE_PARENT> was specified, and the caller is an init process."
msgstr ""
"B<CLONE_PARENT> wurde angegeben und der Aufrufende ist ein Init-Prozess."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"Returned by the glibc B<clone>()  wrapper function when I<fn> or I<stack> is "
"specified as NULL."
msgstr ""
"Wird von der Glibc-Wrapper-Funktion B<clone>() zurückgegeben, wenn ein Wert "
"von NULL für I<fn> oder I<Stapel> festgelegt wurde."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"B<CLONE_NEWIPC> was specified in the I<flags> mask, but the kernel was not "
"configured with the B<CONFIG_SYSVIPC> and B<CONFIG_IPC_NS> options."
msgstr ""
"B<CLONE_NEWIPC> wurde in der I<Schalter>-Maske festgelegt, aber der Kernel "
"ist nicht mit den Optionen B<CONFIG_SYSVIPC> und B<CONFIG_IPC_NS> "
"konfiguriert."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"B<CLONE_NEWNET> was specified in the I<flags> mask, but the kernel was not "
"configured with the B<CONFIG_NET_NS> option."
msgstr ""
"B<CLONE_NEWNET> wurde in der I<Schalter>-Maske festgelegt, aber der Kernel "
"ist nicht mit der Option B<CONFIG_NET_NS> konfiguriert."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"B<CLONE_NEWPID> was specified in the I<flags> mask, but the kernel was not "
"configured with the B<CONFIG_PID_NS> option."
msgstr ""
"B<CLONE_NEWPID> wurde in der I<Schalter>-Maske festgelegt, aber der Kernel "
"ist nicht mit der Option B<CONFIG_PID_NS> konfiguriert."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"B<CLONE_NEWUSER> was specified in the I<flags> mask, but the kernel was not "
"configured with the B<CONFIG_USER_NS> option."
msgstr ""
"B<CLONE_NEWUSER> wurde in der I<Schalter>-Maske festgelegt, aber der Kernel "
"ist nicht mit der Option B<CONFIG_USER_NS> konfiguriert."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"B<CLONE_NEWUTS> was specified in the I<flags> mask, but the kernel was not "
"configured with the B<CONFIG_UTS_NS> option."
msgstr ""
"B<CLONE_NEWUTS> wurde in der I<Schalter>-Maske festgelegt, aber der Kernel "
"ist nicht mit der Option B<CONFIG_UTS_NS> konfiguriert."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"I<stack> is not aligned to a suitable boundary for this architecture.  For "
"example, on aarch64, I<stack> must be a multiple of 16."
msgstr ""
"I<Stapel> ist nicht an einer geeigneten Grenze für diese Architektur "
"ausgerichtet. Beispielsweise muss I<Stapel> auf Aarch64 ein Vielfaches von "
"16 sein."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "B<EINVAL> (B<clone3>() only)"
msgstr "B<EINVAL> (nur B<clone3>())"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid "B<CLONE_DETACHED> was specified in the I<flags> mask."
msgstr "In der I<Schalter>-Maske wurden B<CLONE_DETACHED> festgelegt."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "B<EINVAL> (B<clone>() only)"
msgstr "B<EINVAL> (nur B<clone>())"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"B<CLONE_PIDFD> was specified together with B<CLONE_DETACHED> in the I<flags> "
"mask."
msgstr ""
"B<CLONE_PIDFD> wurde zusammen mit B<CLONE_DETACHED> in der I<Schalter>-Maske "
"festgelegt."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"B<CLONE_PIDFD> was specified together with B<CLONE_THREAD> in the I<flags> "
"mask."
msgstr ""
"B<CLONE_PIDFD> wurde zusammen mit B<CLONE_THREAD> in der I<Schalter>-Maske "
"festgelegt."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "B<EINVAL >(B<clone>() only)"
msgstr "B<EINVAL >(nur B<clone>())"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"B<CLONE_PIDFD> was specified together with B<CLONE_PARENT_SETTID> in the "
"I<flags> mask."
msgstr ""
"B<CLONE_PIDFD> wurde zusammen mit B<CLONE_PARENT_SETTID> in der I<Schalter>-"
"Maske festgelegt."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid "I<set_tid_size> is greater than the number of nested PID namespaces."
msgstr ""
"I<set_tid_size> ist größer als die Anzahl der geschachtelten PID-Namensräume."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid "One of the PIDs specified in I<set_tid> was an invalid."
msgstr "Eine der in I<set_tid> festgelegten PIDs war ungültig."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "B<EINVAL> (AArch64 only, Linux 4.6 and earlier)"
msgstr "B<EINVAL> (nur AArch64, Linux 4.6 und älter)"

#. type: Plain text
#: archlinux debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-tumbleweed
msgid "I<stack> was not aligned to a 128-bit boundary."
msgstr "I<Stapel> war nicht an einer 128-Bit-Grenze ausgerichtet."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<ENOMEM>"
msgstr "B<ENOMEM>"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"Cannot allocate sufficient memory to allocate a task structure for the "
"child, or to copy those parts of the caller's context that need to be copied."
msgstr ""
"Es kann nicht ausreichend Speicher für eine Aufgabenstruktur des "
"Kindprozesses reserviert werden oder um benötigte Teile vom Kontext des "
"Aufrufenden zu kopieren."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<ENOSPC> (since Linux 3.7)"
msgstr "B<ENOSPC> (seit Linux 3.7)"

#.  commit f2302505775fd13ba93f034206f1e2a587017929
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"B<CLONE_NEWPID> was specified in the I<flags> mask, but the limit on the "
"nesting depth of PID namespaces would have been exceeded; see "
"B<pid_namespaces>(7)."
msgstr ""
"B<CLONE_NEWPID> wurde in der I<Schalter>-Maske festgelegt, aber die "
"Begrenzung der Verschachtelungstiefe von PID-Namensräumen würde "
"überschritten; siehe B<pid_namespaces>(7)."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<ENOSPC> (since Linux 4.9; beforehand B<EUSERS>)"
msgstr "B<ENOSPC> (seit Linux 4.9; vorher B<EUSERS>)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"B<CLONE_NEWUSER> was specified in the I<flags> mask, and the call would "
"cause the limit on the number of nested user namespaces to be exceeded.  See "
"B<user_namespaces>(7)."
msgstr ""
"B<CLONE_NEWUSER> wurde in der I<Schalter>-Maske festgelegt und der Aufruf "
"würde zu einer Überschreitung der Begrenzung für die Anzahl von "
"verschachtelten Benutzernamensräumen führen. Siehe B<user_namespaces>(7)."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"From Linux 3.11 to Linux 4.8, the error diagnosed in this case was B<EUSERS>."
msgstr ""
"Von Linux 3.11 bis Linux 4.8 war der in diesem Fall diagnostizierte Fehler "
"B<EUSERS>."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<ENOSPC> (since Linux 4.9)"
msgstr "B<ENOSPC> (seit Linux 4.9)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"One of the values in the I<flags> mask specified the creation of a new user "
"namespace, but doing so would have caused the limit defined by the "
"corresponding file in I</proc/sys/user> to be exceeded.  For further "
"details, see B<namespaces>(7)."
msgstr ""
"Einer der Werte in der I<Schalter>-Maske legte die Erstellung eines neuen "
"Benutzer-Namensraums fest, dadurch würde aber die in der enstprechenden "
"Datei in I</proc/sys/user> festgelegte Begrenzung überschritten. Für weitere "
"Details siehe B<namespaces>(7)."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "B<EOPNOTSUPP> (B<clone3>() only)"
msgstr "B<EOPNOTSUPP> (nur B<clone3>())"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"B<CLONE_INTO_CGROUP> was specified in I<cl_args.flags>, but the file "
"descriptor specified in I<cl_args.cgroup> refers to a version 2 cgroup that "
"is in the I<domain invalid> state."
msgstr ""
"B<CLONE_INTO_CGROUP> wurde in I<cl_args.flags> angegeben, aber der in "
"I<cl_args.cgroup> angegebene Dateideskriptor bezieht sich auf eine Version-2-"
"Cgroup, die im Zustand I<Domain ungültig> ist."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<EPERM>"
msgstr "B<EPERM>"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"B<CLONE_NEWCGROUP>, B<CLONE_NEWIPC>, B<CLONE_NEWNET>, B<CLONE_NEWNS>, "
"B<CLONE_NEWPID>, or B<CLONE_NEWUTS> was specified by an unprivileged process "
"(process without B<CAP_SYS_ADMIN>)."
msgstr ""
"B<CLONE_NEWCGROUP>, B<CLONE_NEWIPC>, B<CLONE_NEWNET>, B<CLONE_NEWNS>, "
"B<CLONE_NEWPID> oder B<CLONE_NEWUTS> wurde von einem nicht privilegierten "
"Prozess festgelegt (Prozess ohne B<CAP_SYS_ADMIN>)."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"B<CLONE_PID> was specified by a process other than process 0.  (This error "
"occurs only on Linux 2.5.15 and earlier.)"
msgstr ""
"B<CLONE_PID> wurde von einem anderen Prozess als Prozess 0 festgelegt. "
"(Dieser Fehler tritt nur unter Linux 2.5.15 und früheren Versionen auf.)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"B<CLONE_NEWUSER> was specified in the I<flags> mask, but either the "
"effective user ID or the effective group ID of the caller does not have a "
"mapping in the parent namespace (see B<user_namespaces>(7))."
msgstr ""
"B<CLONE_NEWUSER> wurde in der I<Schalter>-Maske festgelegt, aber weder die "
"effektive Benutzerkennung noch die effektive Gruppenkennung des Aufrufenden "
"hat eine Abbildung in den Namensraum der Eltern (siehe "
"B<user_namespaces>(7))."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<EPERM> (since Linux 3.9)"
msgstr "B<EPERM> (seit Linux 3.9)"

#.  commit 3151527ee007b73a0ebd296010f1c0454a919c7d
#.  FIXME What is the rationale for this restriction?
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"B<CLONE_NEWUSER> was specified in the I<flags> mask and the caller is in a "
"chroot environment (i.e., the caller's root directory does not match the "
"root directory of the mount namespace in which it resides)."
msgstr ""
"B<CLONE_NEWUSER> wurde in der I<Schalter>-Maske festgelegt und der "
"Aufrufende ist in einer Chroot-Umgebung (d.h. das Wurzelverzeichnis des "
"Aufrufenden passt nicht zum Wurzelverzeichnis des Einhängenamensraums, in "
"dem er sich befindet)."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "B<EPERM> (B<clone3>() only)"
msgstr "B<EPERM> (nur B<clone3>())"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"I<set_tid_size> was greater than zero, and the caller lacks the "
"B<CAP_SYS_ADMIN> capability in one or more of the user namespaces that own "
"the corresponding PID namespaces."
msgstr ""
"I<set_tid_size> war größer als Null und dem Aufrufenden fehlt in einem oder "
"mehreren Benutzernamensräumen, dem die entsprechenden PID-Namensräume "
"gehören, die Capability B<CAP_SYS_ADMIN>."

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<ERESTARTNOINTR> (since Linux 2.6.17)"
msgstr "B<ERESTARTNOINTR> (seit Linux 2.6.17)"

#.  commit 4a2c7a7837da1b91468e50426066d988050e4d56
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"System call was interrupted by a signal and will be restarted.  (This can be "
"seen only during a trace.)"
msgstr ""
"Ein Systemaufruf wurde durch ein Signal unterbrochen und wird neu gestartet. "
"(Dies wird nur während einer Verfolgung sichtbar sein.)"

#. type: TP
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "B<EUSERS> (Linux 3.11 to Linux 4.8)"
msgstr "B<EUSERS> (Linux 3.11 bis Linux 4.8)"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"B<CLONE_NEWUSER> was specified in the I<flags> mask, and the limit on the "
"number of nested user namespaces would be exceeded.  See the discussion of "
"the B<ENOSPC> error above."
msgstr ""
"B<CLONE_NEWUSER> wurde in der I<Schalter>-Maske festgelegt und die "
"Begrenzung für die Anzahl von verschachtelten Benutzernamensräumen würde "
"überschritten. Siehe die Diskussion des Fehlers B<ENOSPC> oben."

#. type: SH
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "VERSIONS"
msgstr "VERSIONEN"

#.  There is no entry for
#.  .BR clone ()
#.  in libc5.
#.  glibc2 provides
#.  .BR clone ()
#.  as described in this manual page.
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid "The B<clone3>()  system call first appeared in Linux 5.3."
msgstr "Der Systemaufruf B<clone3>() erschien erstmalig in Linux 5.3."

#. type: SH
#: archlinux
#, no-wrap
msgid "STANDARDS"
msgstr "STANDARDS"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"These system calls are Linux-specific and should not be used in programs "
"intended to be portable."
msgstr ""
"Diese Systemaufrufe sind Linux-spezifisch und sollten nicht in portierbaren "
"Programmen benutzt werden."

#. type: SH
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "NOTES"
msgstr "ANMERKUNGEN"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"One use of these systems calls is to implement threads: multiple flows of "
"control in a program that run concurrently in a shared address space."
msgstr ""
"Diese Systemaufrufe werden benutzt, um Threads zu implementieren: mehrere "
"Steuerflüsse in einem Programm, die gleichzeitig in einem gemeinsamen "
"Speicherbereich ausgeführt werden."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"Note that the glibc B<clone>()  wrapper function makes some changes in the "
"memory pointed to by I<stack> (changes required to set the stack up "
"correctly for the child)  I<before> invoking the B<clone>()  system call.  "
"So, in cases where B<clone>()  is used to recursively create children, do "
"not use the buffer employed for the parent's stack as the stack of the child."
msgstr ""
"Beachten Sie, dass die Glibc-Wrapperfunktion B<clone>() einige Änderungen am "
"Speicher, auf den I<Stapel> zeigt, vornimmt (Änderungen, um den Stapel "
"korrekt für das Kind einzurichten), I<bevor> der Systemaufruf B<clone>() "
"ausgelöst wird. Verwenden Sie daher in Fällen, in denen B<clone>() zur "
"rekursiven Erstellung von Kindern verwandt wird, nicht den Puffer, der für "
"den Stapel der Eltern eingesetzt wird, als Stapel der Kinder."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"The B<kcmp>(2)  system call can be used to test whether two processes share "
"various resources such as a file descriptor table, System V semaphore undo "
"operations, or a virtual address space."
msgstr ""
"Der Systemaufruf B<kcmp>(2) kann zum Testen, ob zwei Prozesse sich "
"verschiedene Ressourcen, wie die Dateideskriptortabelle, die Rücksetz-"
"Aktionen der System-V-Semaphoren oder einen virtuellen Adressraum, teilen, "
"verwandt werden."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"Handlers registered using B<pthread_atfork>(3)  are not executed during a "
"clone call."
msgstr ""
"Handler, die mittels B<pthread_atfork>(3) registriert sind, werden während "
"eines Clone-Aufrufs nicht ausgeführt."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"In the Linux 2.4.x series, B<CLONE_THREAD> generally does not make the "
"parent of the new thread the same as the parent of the calling process.  "
"However, for kernel versions 2.4.7 to 2.4.18 the B<CLONE_THREAD> flag "
"implied the B<CLONE_PARENT> flag (as in Linux 2.6.0 and later)."
msgstr ""
"In der Linux 2.4.x-Serie gibt B<CLONE_THREAD> generell dem neuen Prozess "
"nicht den gleichen Elternprozess, wie dem aufrufenden Prozess. Für die "
"Kernel-Versionen 2.4.7 bis 2.4.18 implizierte der Schalter B<CLONE_THREAD> "
"jedoch den Schalter B<CLONE_PARENT> (wie in Kernel 2.6.0 und neuer)."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"On i386, B<clone>()  should not be called through vsyscall, but directly "
"through I<int $0x80>."
msgstr ""
"Auf i386-Architekturen sollte B<clone>() nicht durch vsyscall aufgerufen "
"werden, sondern direkt durch I<int $0x80>."

#. type: SS
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "C library/kernel differences"
msgstr "Unterschiede C-Bibliothek/Kernel"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"The raw B<clone>()  system call corresponds more closely to B<fork>(2)  in "
"that execution in the child continues from the point of the call.  As such, "
"the I<fn> and I<arg> arguments of the B<clone>()  wrapper function are "
"omitted."
msgstr ""
"Der rohe B<sys_clone>-Systemaufruf entspricht eher B<fork>(2), da er mit der "
"Ausführung des Kindprozesses am Zeitpunkt des Aufrufs fortfährt. Von daher "
"werden die Argumente I<fn> und I<arg> der B<clone>()-Wrapper-Funktion "
"weggelassen."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"In contrast to the glibc wrapper, the raw B<clone>()  system call accepts "
"NULL as a I<stack> argument (and B<clone3>()  likewise allows I<cl_args."
"stack> to be NULL).  In this case, the child uses a duplicate of the "
"parent's stack.  (Copy-on-write semantics ensure that the child gets "
"separate copies of stack pages when either process modifies the stack.)  In "
"this case, for correct operation, the B<CLONE_VM> option should not be "
"specified.  (If the child I<shares> the parent's memory because of the use "
"of the B<CLONE_VM> flag, then no copy-on-write duplication occurs and chaos "
"is likely to result.)"
msgstr ""
"Im Gegensatz zum Glibc-Wrapper akzeptiert der rohe Systemaufruf B<clone>() "
"NULL als I<Stapel>-Argument (und B<clone3>() erlaubt entsprechend I<cl_args."
"stack> NULL zu sein). In diesem Fall verwendet das Kind eine Dublette des "
"Stapels des Elternprozesses. (»Copy-on-write«-Semantik stellt sicher, dass "
"der Kindprozess getrennte Kopien des Stapelspeichers erhält, wenn einer der "
"beiden Prozesse den Stapelspeicher verändert.) In diesem Fall sollte die "
"Option B<CLONE_VM> nicht angegeben werden, damit es korrekt funktioniert. "
"(Falls das Kind sich aufgrund des Schalters B<CLONE_VM> mit dem "
"Elternprozess den Speicher I<teilt>, dann tritt keine copy-on-write-"
"Duplizierung auf und wahrscheinlich tritt Chaos ein."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"The order of the arguments also differs in the raw system call, and there "
"are variations in the arguments across architectures, as detailed in the "
"following paragraphs."
msgstr ""
"Die Reihenfolge der Argumente unterscheidet sich auch im rohen Systemaufruf "
"und es gibt über die Architekturen hinweg Variationen in den Argumenten, wie "
"dies in den folgenden Absätzen dargestellt wird."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"The raw system call interface on x86-64 and some other architectures "
"(including sh, tile, and alpha) is:"
msgstr ""
"Die rohe Schnittstelle für Systemaufrufe auf x86-64 und einigen anderen "
"Architekturen (darunter Sh, Tile und Alpha) sieht so aus:"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid ""
"B<long clone(unsigned long >I<flags>B<, void *>I<stack>B<,>\n"
"B<           int *>I<parent_tid>B<, int *>I<child_tid>B<,>\n"
"B<           unsigned long >I<tls>B<);>\n"
msgstr ""
"B<long clone(unsigned long >I<Schalter>B<, void *>I<Stapel>B<,>\n"
"B<           int *>I<Eltern_tid>B<, int *>I<Kind_tid>B<,>\n"
"B<           unsigned long >I<tls>B<);>\n"

#.  CONFIG_CLONE_BACKWARDS
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"On x86-32, and several other common architectures (including score, ARM, ARM "
"64, PA-RISC, arc, Power PC, xtensa, and MIPS), the order of the last two "
"arguments is reversed:"
msgstr ""
"Auf x86-32 und mehreren anderen häufigen Architekturen (darunter Score, ARM, "
"ARM 64, PA-RISC, Arc, Power PC, Xtensa und MIPS) ist die Reihenfolge der "
"letzten zwei Argumente gedreht:"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid ""
"B<long clone(unsigned long >I<flags>B<, void *>I<stack>B<,>\n"
"B<          int *>I<parent_tid>B<, unsigned long >I<tls>B<,>\n"
"B<          int *>I<child_tid>B<);>\n"
msgstr ""
"B<long clone(unsigned long >I<Schalter>B<, void *>I<Stapel>B<,>\n"
"B<          int *>I<Eltern_tid>B<, unsigned long >I<tls>B<,>\n"
"B<          int *>I<Kind_tid>B<);>\n"

#.  CONFIG_CLONE_BACKWARDS2
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"On the cris and s390 architectures, the order of the first two arguments is "
"reversed:"
msgstr ""
"Auf der Cris- und S30-Architektur ist die Reihenfolge der ersten zwei "
"Argumente gedreht:"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid ""
"B<long clone(void *>I<stack>B<, unsigned long >I<flags>B<,>\n"
"B<           int *>I<parent_tid>B<, int *>I<child_tid>B<,>\n"
"B<           unsigned long >I<tls>B<);>\n"
msgstr ""
"B<long clone(void *>I<Stapel>B<, unsigned long >I<Schalter>B<,>\n"
"B<           int *>I<Eltern_tid>B<, int *>I<Kind_tid>B<,>\n"
"B<           unsigned long >I<tls>B<);>\n"

#.  CONFIG_CLONE_BACKWARDS3
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid "On the microblaze architecture, an additional argument is supplied:"
msgstr ""
"Auf der Microblaze-Architektur wird ein zusätzliches Argument übergeben:"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid ""
"B<long clone(unsigned long >I<flags>B<, void *>I<stack>B<,>\n"
"B<           int >I<stack_size>B<,>         /* Size of stack */\n"
"B<           int *>I<parent_tid>B<, int *>I<child_tid>B<,>\n"
"B<           unsigned long >I<tls>B<);>\n"
msgstr ""
"B<long clone(unsigned long >I<Schalter>B<, void *>I<Stapel>B<,>\n"
"B<           int >I<Stapelgröße>B<,>         /* Größe des Stapels */\n"
"B<           int *>I<Eltern_tid>B<, int *>I<Kind_tid>B<,>\n"
"B<           unsigned long >I<tls>B<);>\n"

#. type: SS
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "blackfin, m68k, and sparc"
msgstr "Blackfin, M68k und Sparc"

#.  Mike Frysinger noted in a 2013 mail:
#.      these arches don't define __ARCH_WANT_SYS_CLONE:
#.      blackfin ia64 m68k sparc
#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"The argument-passing conventions on blackfin, m68k, and sparc are different "
"from the descriptions above.  For details, see the kernel (and glibc) source."
msgstr ""
"Die Konventionen der Argumentübergabe weichen auf Blackfin, M68k und Sparc "
"von der obigen Beschreibung ab. Einzelheiten finden Sie in der Kernel- (und "
"Glibc-) Quelle."

#. type: SS
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "ia64"
msgstr "Ia64"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid "On ia64, a different interface is used:"
msgstr "Auf ia64 wird eine andere Schnittstelle benutzt:"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid ""
"B<int __clone2(int (*>I<fn>B<)(void *),>\n"
"B<             void *>I<stack_base>B<, size_t >I<stack_size>B<,>\n"
"B<             int >I<flags>B<, void *>I<arg>B<, ...>\n"
"B<          /* pid_t *>I<parent_tid>B<, struct user_desc *>I<tls>B<,>\n"
"B<             pid_t *>I<child_tid>B< */ );>\n"
msgstr ""
"B<int __clone2(int (*>I<fn>B<)(void *),>\n"
"B<             void *>I<Stapelbasis>B<, size_t >I<Stapelgröße>B<,>\n"
"B<             int >I<Schalter>B<, void *>I<arg>B<, …>\n"
"B<          /* pid_t *>I<Eltern_tid>B<, struct user_desc *>I<tls>B<,>\n"
"B<             pid_t *>I<Kind_tid>B< */ );>\n"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"The prototype shown above is for the glibc wrapper function; for the system "
"call itself, the prototype can be described as follows (it is identical to "
"the B<clone>()  prototype on microblaze):"
msgstr ""
"Der oben gezeigte Prototyp ist für die Glibc-Wrapper-Funktion; für den "
"Systemaufruf selbst wird der Prototyp wie folgt beschrieben (er ist "
"identisch zum B<clone>()-Prototyp auf Microblaze):"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid ""
"B<long clone2(unsigned long >I<flags>B<, void *>I<stack_base>B<,>\n"
"B<            int >I<stack_size>B<,>         /* Size of stack */\n"
"B<            int *>I<parent_tid>B<, int *>I<child_tid>B<,>\n"
"B<            unsigned long >I<tls>B<);>\n"
msgstr ""
"B<long clone2(unsigned long >I<Schalter>B<, void *>I<Stapelbasis>B<,>\n"
"B<            int >I<Stapelgröße>B<,>         /* Größe des Stapels */\n"
"B<            int *>I<Eltern_tid>B<, int *>I<Kind_tid>B<,>\n"
"B<            unsigned long >I<tls>B<);>\n"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"B<__clone2>()  operates in the same way as B<clone>(), except that "
"I<stack_base> points to the lowest address of the child's stack area, and "
"I<stack_size> specifies the size of the stack pointed to by I<stack_base>."
msgstr ""
"B<__clone2>() arbeitet auf die gleiche Weise wie B<clone>(), außer dass "
"I<Stapelbasis> auf die niedrigste Adresse im Stapelspeicherbereich des "
"Kindprozesses zeigt und I<Stapelgröße> die Größe des Stapelspeichers angibt, "
"auf die I<Stapelbasis> zeigt."

#. type: SS
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "Linux 2.4 and earlier"
msgstr "Linux 2.4 und älter"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"In Linux 2.4 and earlier, B<clone>()  does not take arguments I<parent_tid>, "
"I<tls>, and I<child_tid>."
msgstr ""
"Unter Linux 2.4 und früher gab es die Argumente I<Eltern_tid>, I<tls> und "
"I<Kind_tid> noch nicht."

#. type: SH
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "BUGS"
msgstr "FEHLER"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"GNU C library versions 2.3.4 up to and including 2.24 contained a wrapper "
"function for B<getpid>(2)  that performed caching of PIDs.  This caching "
"relied on support in the glibc wrapper for B<clone>(), but limitations in "
"the implementation meant that the cache was not up to date in some "
"circumstances.  In particular, if a signal was delivered to the child "
"immediately after the B<clone>()  call, then a call to B<getpid>(2)  in a "
"handler for the signal could return the PID of the calling process (\"the "
"parent\"), if the clone wrapper had not yet had a chance to update the PID "
"cache in the child.  (This discussion ignores the case where the child was "
"created using B<CLONE_THREAD>, when B<getpid>(2)  I<should> return the same "
"value in the child and in the process that called B<clone>(), since the "
"caller and the child are in the same thread group.  The stale-cache problem "
"also does not occur if the I<flags> argument includes B<CLONE_VM>.)  To get "
"the truth, it was sometimes necessary to use code such as the following:"
msgstr ""
"GNU-C-Bibliotheksversionen 2.3.4 bis einschließlich 2.24 enthielten eine "
"Wrapper-Funktion für B<getpid>(2), die Zwischenspeichern von PIDs vornahm. "
"Dieses Zwischenspeichern beruhte auf der Unterstützung in dem Glibc-Wrapper "
"von B<clone>(), aber Einschränkungen in der Implementierung bedeuteten, dass "
"unter einigen Umständen der Zwischenspeicher nicht aktuell war. Insbesondere "
"wenn ein Signal sofort nach dem B<clone>()-Aufruf an den Kindprozess gesandt "
"wurde, konnte ein Aufruf von B<getpid>(2) in einem Signal-Handler die PID "
"des aufrufenden Prozesses (des »Elternprozesses«) zurückgeben, falls der "
"Clone-Wrapper noch keine Chance hatte den PID-Zwischenspeicher im "
"Kindprozess zu aktualisieren. (Diese Diskussion ignoriert den Fall, dass der "
"Kindprozess mit B<CLONE_THREAD> erstellt wurde, in dem B<getpid>(2) den "
"gleichen Wert im Kindprozess zurückgeben I<sollte> und im Prozess, der "
"B<clone>() aufrief, wie sich der Aufrufende und der Kindprozess in der "
"gleichen Thread-Gruppe befinden. Das Problem des nicht mehr frischen "
"Zwischenspeichers tritt auch auf, wenn das Argument I<Schalter> B<CLONE_VM> "
"enthält.) Um die Wahrheit zu erfahren, war es manchmal notwendig gewesen, "
"Code wie den folgenden zu verwenden:"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "#include E<lt>syscall.hE<gt>\n"
msgstr "#include E<lt>syscall.hE<gt>\n"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "pid_t mypid;\n"
msgstr "pid_t mypid;\n"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "mypid = syscall(SYS_getpid);\n"
msgstr "mypid = syscall(SYS_getpid);\n"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"Because of the stale-cache problem, as well as other problems noted in "
"B<getpid>(2), the PID caching feature was removed in glibc 2.25."
msgstr ""
"Aufgrund des Problems mit dem nicht mehr frischem Zwischenspeicher sowie "
"anderen in B<getpid>(2) bemerkten Problemen, wurde die Funktionalität des "
"PID-Zwischenspeicherns in Glibc 2.25 entfernt."

#. type: SH
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "EXAMPLES"
msgstr "BEISPIELE"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
msgid ""
"The following program demonstrates the use of B<clone>()  to create a child "
"process that executes in a separate UTS namespace.  The child changes the "
"hostname in its UTS namespace.  Both parent and child then display the "
"system hostname, making it possible to see that the hostname differs in the "
"UTS namespaces of the parent and child.  For an example of the use of this "
"program, see B<setns>(2)."
msgstr ""
"Das folgende Programm demonstriert die Benutzung von B<clone>() zum Erzeugen "
"eines Kindprozesses, der in einem separaten UTS-Namensraum ausgeführt wird. "
"Der Kindprozess ändert in seinem UTS-Namensraum den Rechnernamen. Dann "
"zeigen sowohl Eltern- als auch Kindprozess den Rechnernamen des Systems an, "
"wodurch sichtbar wird, dass der Rechnername sich im UTS-Namensraum von "
"Eltern- und Kindprozess unterscheidet. Ein Beispiel für die Verwendung "
"dieses Programms finden Sie in B<setns>(2)."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"Within the sample program, we allocate the memory that is to be used for the "
"child's stack using B<mmap>(2)  rather than B<malloc>(3)  for the following "
"reasons:"
msgstr ""
"Innerhalb des Beispielprogramms reservieren wir Speicher, der für den Stapel "
"des Kindprogramms verwandt werden soll. Dabei verwenden wir aus den "
"folgenden Gründen B<mmap>(2) statt B<malloc>(3):"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"B<mmap>(2)  allocates a block of memory that starts on a page boundary and "
"is a multiple of the page size.  This is useful if we want to establish a "
"guard page (a page with protection B<PROT_NONE>)  at the end of the stack "
"using B<mprotect>(2)."
msgstr ""
"B<mmap>(2) reserviert einen Speicherblock, der an einer Seitengrenze beginnt "
"und ein Vielfaches der Seitengröße groß ist. Dies ist nützlich, um am Ende "
"des Stapels mittels B<mprotect>(2) eine Wächterseite (eine Seite mit dem "
"Schutz B<PROT_NONE>) einzurichten."

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"We can specify the B<MAP_STACK> flag to request a mapping that is suitable "
"for a stack.  For the moment, this flag is a no-op on Linux, but it exists "
"and has effect on some other systems, so we should include it for "
"portability."
msgstr ""
"Wir können den Schalter B<MAP_STACK> angeben, um ein für den Stapel "
"geeignetes Mapping festzulegen. Derzeit führt dieser Schalter unter Linux zu "
"keiner Aktion, aber er existiert und hat auf anderen Systemen Auswirkungen, "
"daher sollten wir ihn zwecks Portabilität aufnehmen."

#. type: SS
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "Program source"
msgstr "Programmquelltext"

#. type: Plain text
#: archlinux
#, fuzzy, no-wrap
#| msgid ""
#| "#define _GNU_SOURCE\n"
#| "#include E<lt>sys/wait.hE<gt>\n"
#| "#include E<lt>sys/utsname.hE<gt>\n"
#| "#include E<lt>sched.hE<gt>\n"
#| "#include E<lt>string.hE<gt>\n"
#| "#include E<lt>stdint.hE<gt>\n"
#| "#include E<lt>stdio.hE<gt>\n"
#| "#include E<lt>stdlib.hE<gt>\n"
#| "#include E<lt>unistd.hE<gt>\n"
#| "#include E<lt>sys/mman.hE<gt>\n"
msgid ""
"#define _GNU_SOURCE\n"
"#include E<lt>err.hE<gt>\n"
"#include E<lt>sched.hE<gt>\n"
"#include E<lt>signal.hE<gt>\n"
"#include E<lt>stdint.hE<gt>\n"
"#include E<lt>stdio.hE<gt>\n"
"#include E<lt>stdlib.hE<gt>\n"
"#include E<lt>string.hE<gt>\n"
"#include E<lt>sys/mman.hE<gt>\n"
"#include E<lt>sys/utsname.hE<gt>\n"
"#include E<lt>sys/wait.hE<gt>\n"
"#include E<lt>unistd.hE<gt>\n"
msgstr ""
"#define _GNU_SOURCE\n"
"#include E<lt>sys/wait.hE<gt>\n"
"#include E<lt>sys/utsname.hE<gt>\n"
"#include E<lt>sched.hE<gt>\n"
"#include E<lt>string.hE<gt>\n"
"#include E<lt>stdint.hE<gt>\n"
"#include E<lt>stdio.hE<gt>\n"
"#include E<lt>stdlib.hE<gt>\n"
"#include E<lt>unistd.hE<gt>\n"
"#include E<lt>sys/mman.hE<gt>\n"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid ""
"static int              /* Start function for cloned child */\n"
"childFunc(void *arg)\n"
"{\n"
"    struct utsname uts;\n"
msgstr ""
"static int              /* Startfunktion für geklonten Kindprozess */\n"
"childFunc(void *arg)\n"
"{\n"
"    struct utsname uts;\n"

#. type: Plain text
#: archlinux debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-tumbleweed
#, no-wrap
msgid "    /* Change hostname in UTS namespace of child. */\n"
msgstr "    /* Rechnername im UTS-Namensraum des Kindprozesses ändern. */\n"

#. type: Plain text
#: archlinux
#, fuzzy, no-wrap
#| msgid ""
#| "    if (sethostname(arg, strlen(arg)) == -1)\n"
#| "        errExit(\"sethostname\");\n"
msgid ""
"    if (sethostname(arg, strlen(arg)) == -1)\n"
"        err(EXIT_FAILURE, \"sethostname\");\n"
msgstr ""
"    if (sethostname(arg, strlen(arg)) == -1)\n"
"        errExit(\"sethostname\");\n"

#. type: Plain text
#: archlinux debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-tumbleweed
#, no-wrap
msgid "    /* Retrieve and display hostname. */\n"
msgstr "    /* Rechnernamen abfragen und anzeigen. */\n"

#. type: Plain text
#: archlinux
#, fuzzy, no-wrap
#| msgid ""
#| "    if (uname(&uts) == -1)\n"
#| "        errExit(\"uname\");\n"
#| "    printf(\"uts.nodename in child:  %s\\en\", uts.nodename);\n"
msgid ""
"    if (uname(&uts) == -1)\n"
"        err(EXIT_FAILURE, \"uname\");\n"
"    printf(\"uts.nodename in child:  %s\\en\", uts.nodename);\n"
msgstr ""
"    if (uname(&uts) == -1)\n"
"        errExit(\"uname\");\n"
"    printf(\"uts.nodename im Kindprozess:  %s\\en\", uts.nodename);\n"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid ""
"    /* Keep the namespace open for a while, by sleeping.\n"
"       This allows some experimentation--for example, another\n"
"       process might join the namespace. */\n"
msgstr ""
"    /* Der Namensraum wird für eine Weile durch Schlafen offen gehalten.\n"
"       Dies ermöglicht etwas zu experimentieren –  zum Beispiel\n"
"       kann ein weiterer Prozess dem Namensraum beitreten. */\n"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "    sleep(200);\n"
msgstr "    sleep(200);\n"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid ""
"    return 0;           /* Child terminates now */\n"
"}\n"
msgstr ""
"    return 0;           /* Kindprozess wird nun beendet */\n"
"}\n"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "#define STACK_SIZE (1024 * 1024)    /* Stack size for cloned child */\n"
msgstr ""
"#define STACK_SIZE (1024 * 1024)    /* Stapelspeichergröße für geklonten\n"
"                                       Kindprozess */\n"

#. type: Plain text
#: archlinux
#, fuzzy, no-wrap
#| msgid ""
#| "int\n"
#| "main(int argc, char *argv[])\n"
#| "{\n"
#| "    char *stack;                    /* Start of stack buffer */\n"
#| "    char *stackTop;                 /* End of stack buffer */\n"
#| "    pid_t pid;\n"
#| "    struct utsname uts;\n"
msgid ""
"int\n"
"main(int argc, char *argv[])\n"
"{\n"
"    char            *stack;         /* Start of stack buffer */\n"
"    char            *stackTop;      /* End of stack buffer */\n"
"    pid_t           pid;\n"
"    struct utsname  uts;\n"
msgstr ""
"int\n"
"main(int argc, char *argv[])\n"
"{\n"
"    char *stack;                    /* Start des Stapelspeicherpuffers */\n"
"    char *stackTop;                 /* Ende des Stapelspeicherpuffers */\n"
"    pid_t pid;\n"
"    struct utsname uts;\n"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid ""
"    if (argc E<lt> 2) {\n"
"        fprintf(stderr, \"Usage: %s E<lt>child-hostnameE<gt>\\en\", argv[0]);\n"
"        exit(EXIT_SUCCESS);\n"
"    }\n"
msgstr ""
"    if (argc E<lt> 2) {\n"
"        fprintf(stderr, \"Aufruf: %s E<lt>Kindprozess-RechnernameE<gt>\\en\", argv[0]);\n"
"        exit(EXIT_SUCCESS);\n"
"    }\n"

#. type: Plain text
#: archlinux debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-tumbleweed
#, no-wrap
msgid "    /* Allocate memory to be used for the stack of the child. */\n"
msgstr "    /* Speicher für den Stapel des Kindprozess reservieren. */\n"

#. type: Plain text
#: archlinux
#, fuzzy, no-wrap
#| msgid ""
#| "    stack = mmap(NULL, STACK_SIZE, PROT_READ | PROT_WRITE,\n"
#| "                 MAP_PRIVATE | MAP_ANONYMOUS | MAP_STACK, -1, 0);\n"
#| "    if (stack == MAP_FAILED)\n"
#| "        errExit(\"mmap\");\n"
msgid ""
"    stack = mmap(NULL, STACK_SIZE, PROT_READ | PROT_WRITE,\n"
"                 MAP_PRIVATE | MAP_ANONYMOUS | MAP_STACK, -1, 0);\n"
"    if (stack == MAP_FAILED)\n"
"        err(EXIT_FAILURE, \"mmap\");\n"
msgstr ""
"    stack = mmap(NULL, STACK_SIZE, PROT_READ | PROT_WRITE,\n"
"                 MAP_PRIVATE | MAP_ANONYMOUS | MAP_STACK, -1, 0);\n"
"    if (stack == MAP_FAILED)\n"
"        errExit(\"mmap\");\n"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "    stackTop = stack + STACK_SIZE;  /* Assume stack grows downward */\n"
msgstr ""
"stackTop = stack + STACK_SIZE;  /* Annahme, dass Stapelspeicher nach\n"
"                                   unten wächst */\n"

#. type: Plain text
#: archlinux debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-tumbleweed
#, no-wrap
msgid ""
"    /* Create child that has its own UTS namespace;\n"
"       child commences execution in childFunc(). */\n"
msgstr ""
"    /* Es wird ein Kindprozess erzeugt, der seinen eigenen Namensraum hat.\n"
"       Der Kindprozess beginnt die Ausführung in childFunc(). */\n"

#. type: Plain text
#: archlinux
#, fuzzy, no-wrap
#| msgid ""
#| "    pid = clone(childFunc, stackTop, CLONE_NEWUTS | SIGCHLD, argv[1]);\n"
#| "    if (pid == -1)\n"
#| "        errExit(\"clone\");\n"
#| "    printf(\"clone() returned %jd\\en\", (intmax_t) pid);\n"
msgid ""
"    pid = clone(childFunc, stackTop, CLONE_NEWUTS | SIGCHLD, argv[1]);\n"
"    if (pid == -1)\n"
"        err(EXIT_FAILURE, \"clone\");\n"
"    printf(\"clone() returned %jd\\en\", (intmax_t) pid);\n"
msgstr ""
"    pid = clone(childFunc, stackTop, CLONE_NEWUTS | SIGCHLD, argv[1]);\n"
"    if (pid == -1)\n"
"        errExit(\"clone\");\n"
"    printf(\"clone() gab %jd zurück\\en\", (intmax_t) pid);\n"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "    /* Parent falls through to here */\n"
msgstr "    /* Elternprozess fällt bis hierher durch */\n"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "    sleep(1);           /* Give child time to change its hostname */\n"
msgstr "    sleep(1);   /* gibt dem Kindprozess Zeit zum Ändern des Rechnernamens */\n"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid ""
"    /* Display hostname in parent\\(aqs UTS namespace. This will be\n"
"       different from hostname in child\\(aqs UTS namespace. */\n"
msgstr ""
"    /* Den Rechnernamen im UTS-Namensraum des Elternprozesses anzeigen.\n"
"       Dieser wird sich vom Rechnernamen im UTS-Namensraum des Kindprozesses\n"
"       unterscheiden. */\n"

#. type: Plain text
#: archlinux
#, fuzzy, no-wrap
#| msgid ""
#| "    if (uname(&uts) == -1)\n"
#| "        errExit(\"uname\");\n"
#| "    printf(\"uts.nodename in parent: %s\\en\", uts.nodename);\n"
msgid ""
"    if (uname(&uts) == -1)\n"
"        err(EXIT_FAILURE, \"uname\");\n"
"    printf(\"uts.nodename in parent: %s\\en\", uts.nodename);\n"
msgstr ""
"    if (uname(&uts) == -1)\n"
"        errExit(\"uname\");\n"
"    printf(\"uts.nodename im Elternprozess: %s\\en\", uts.nodename);\n"

#. type: Plain text
#: archlinux
#, fuzzy, no-wrap
#| msgid ""
#| "    if (waitpid(pid, NULL, 0) == -1)    /* Wait for child */\n"
#| "        errExit(\"waitpid\");\n"
#| "    printf(\"child has terminated\\en\");\n"
msgid ""
"    if (waitpid(pid, NULL, 0) == -1)    /* Wait for child */\n"
"        err(EXIT_FAILURE, \"waitpid\");\n"
"    printf(\"child has terminated\\en\");\n"
msgstr ""
"    if (waitpid(pid, NULL, 0) == -1)    /* Warten auf Kindprozess */\n"
"        errExit(\"waitpid\");\n"
"    printf(\"Kindprozess wurde beendet\\en\");\n"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid ""
"    exit(EXIT_SUCCESS);\n"
"}\n"
msgstr ""
"    exit(EXIT_SUCCESS);\n"
"}\n"

#. #-#-#-#-#  archlinux: clone.2.pot (PACKAGE VERSION)  #-#-#-#-#
#.  SRC END
#. type: SH
#. #-#-#-#-#  debian-bullseye: clone.2.pot (PACKAGE VERSION)  #-#-#-#-#
#. type: SH
#. #-#-#-#-#  debian-unstable: clone.2.pot (PACKAGE VERSION)  #-#-#-#-#
#. type: SH
#. #-#-#-#-#  fedora-37: clone.2.pot (PACKAGE VERSION)  #-#-#-#-#
#. type: SH
#. #-#-#-#-#  fedora-rawhide: clone.2.pot (PACKAGE VERSION)  #-#-#-#-#
#. type: SH
#. #-#-#-#-#  mageia-cauldron: clone.2.pot (PACKAGE VERSION)  #-#-#-#-#
#. type: SH
#. #-#-#-#-#  opensuse-leap-15-5: clone.2.pot (PACKAGE VERSION)  #-#-#-#-#
#. type: SH
#. #-#-#-#-#  opensuse-tumbleweed: clone.2.pot (PACKAGE VERSION)  #-#-#-#-#
#. type: SH
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "SEE ALSO"
msgstr "SIEHE AUCH"

#. type: Plain text
#: archlinux debian-bullseye debian-unstable fedora-37 fedora-rawhide
#: mageia-cauldron opensuse-tumbleweed
msgid ""
"B<fork>(2), B<futex>(2), B<getpid>(2), B<gettid>(2), B<kcmp>(2), B<mmap>(2), "
"B<pidfd_open>(2), B<set_thread_area>(2), B<set_tid_address>(2), B<setns>(2), "
"B<tkill>(2), B<unshare>(2), B<wait>(2), B<capabilities>(7), "
"B<namespaces>(7), B<pthreads>(7)"
msgstr ""
"B<fork>(2), B<futex>(2), B<getpid>(2), B<gettid>(2), B<kcmp>(2), B<mmap>(2), "
"B<pidfd_open>(2), B<set_thread_area>(2), B<set_tid_address>(2), B<setns>(2), "
"B<tkill>(2), B<unshare>(2), B<wait>(2), B<capabilities>(7), "
"B<namespaces>(7), B<pthreads>(7)"

#. type: TH
#: debian-bullseye
#, no-wrap
msgid "2020-11-01"
msgstr "1. November 2020"

#. type: TH
#: debian-bullseye debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "Linux"
msgstr "Linux"

#. type: TH
#: debian-bullseye debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "Linux Programmer's Manual"
msgstr "Linux-Programmierhandbuch"

#. type: Plain text
#: debian-bullseye
#, no-wrap
msgid "B<long clone3(struct clone_args *>I<cl_args>B<, size_t >I<size>B<);>\n"
msgstr "B<long clone3(struct clone_args *>I<cl_args>B<, size_t >I<groesse>B<);>\n"

#. type: Plain text
#: debian-bullseye
msgid "I<Note>: There is not yet a glibc wrapper for B<clone3>(); see NOTES."
msgstr ""
"I<Hinweis:> Es gibt noch keinen Glibc-Wrapper für B<clone3>(); siehe "
"ANMERKUNGEN."

#. type: Plain text
#: debian-bullseye
#, no-wrap
msgid ""
"struct clone_args {\n"
"    u64 flags;        /* Flags bit mask */\n"
"    u64 pidfd;        /* Where to store PID file descriptor\n"
"                         (I<pid_t *>) */\n"
"    u64 child_tid;    /* Where to store child TID,\n"
"                         in child\\(aqs memory (I<pid_t *>) */\n"
"    u64 parent_tid;   /* Where to store child TID,\n"
"                         in parent\\(aqs memory (I<int *>) */\n"
"    u64 exit_signal;  /* Signal to deliver to parent on\n"
"                         child termination */\n"
"    u64 stack;        /* Pointer to lowest byte of stack */\n"
"    u64 stack_size;   /* Size of stack */\n"
"    u64 tls;          /* Location of new TLS */\n"
"    u64 set_tid;      /* Pointer to a I<pid_t> array\n"
"                         (since Linux 5.5) */\n"
"    u64 set_tid_size; /* Number of elements in I<set_tid>\n"
"                         (since Linux 5.5) */\n"
"    u64 cgroup;       /* File descriptor for target cgroup\n"
"                         of child (since Linux 5.7) */\n"
"};\n"
msgstr ""
"struct clone_args {\n"
"    u64 flags;        /* Schalter-Bit-Maske */\n"
"    u64 pidfd;        /* Wo der PID-Dateideskriptor gespeichert\n"
"                         werden soll (I<pid_t *>) */\n"
"    u64 child_tid;    /* Wo die Kind-TID gespeichert werden soll,\n"
"                         im Speicher des Kindes (I<pid_t *>) */\n"
"    u64 parent_tid;   /* Wo die Kind-TID gespeichert werden soll,\n"
"                         im Speicher des Elternprozesses (I<int *>) */\n"
"    u64 exit_signal;  /* Beim Beenden des Kindprozesses an den Elternprozess\n"
"                         zu sendendes Signal */\n"
"    u64 stack;        /* Zeiger auf das niedrigste Byte des Stapels */\n"
"    u64 stack_size;   /* Größe des Stapels */\n"
"    u64 tls;          /* Ort eines neuen TLS */\n"
"    u64 set_tid;      /* Zeiger auf ein I<pid_t>-Feld\n"
"                         (seit Linux 5.5) */\n"
"    u64 set_tid_size; /* Anzahl von Elementen in I<set_tid>\n"
"                         (seit Linux 5.5) */\n"
"    u64 cgroup;       /* Dateideskriptor für Ziel-Cgroup\n"
"                         eines Kindes (seit Linux 5.7) */\n"
"};\n"

#. type: Plain text
#: debian-bullseye
msgid ""
"The PID in the PID namespaces outside the two innermost PID namespaces will "
"be selected the same way as any other PID is selected."
msgstr ""
"Die PID in den PID-Namensräumen außerhalb der zwei innersten PID-Namensräume "
"wird genauso wie jede andere PID ausgewählt."

#. type: Plain text
#: debian-bullseye
msgid ""
"Store the child thread ID at the location pointed to by I<child_tid> "
"(B<clone>())  or I<cl_args.child_tid> (B<clone3>())  in the child's memory.  "
"The store operation completes before the clone call returns control to user "
"space in the child process.  (Note that the store operation may not have "
"completed before the clone call returns in the parent process, which will be "
"relevant if the B<CLONE_VM> flag is also employed.)"
msgstr ""
"Speichert die Kind-Thread-Kennung an der Stelle, auf die I<Kind_tid> "
"(B<clone>()) oder I<cl_args.child_tid> (B<clone3>()) zeigt, im Kindspeicher. "
"Die Speicheraktion wird abgeschlossen, bevor der Clone-Aufruf die Steuerung "
"an den Benutzerraum im Kindprozess zurückgibt. (Beachten Sie, dass die "
"Speicheraktion noch nicht abgeschlossen sein könnte, bevor der Clone-Aufruf "
"den Elternprozess zurückliefert, was relevant wird, wenn auch der Schalter "
"B<CLONE_VM> eingesetzt wird.)"

#. type: Plain text
#: debian-bullseye opensuse-leap-15-5
msgid ""
"Note that it is the parent process, as returned by B<getppid>(2), which is "
"signaled when the child terminates, so that if B<CLONE_PARENT> is set, then "
"the parent of the calling process, rather than the calling process itself, "
"will be signaled."
msgstr ""
"Beachten Sie, dass dem Elternprozess, wie er von B<getppid>(2) zurückgegeben "
"wird, signalisiert wird wenn der Kindprozess endet. Wenn also "
"B<CLONE_PARENT> gesetzt ist, wird dem Elternprozess des aufrufenden "
"Prozesses anstatt dem aufrufenden Prozess selbst das Signal gesandt."

#. type: Plain text
#: debian-bullseye debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-tumbleweed
msgid ""
"The interpretation of I<tls> and the resulting effect is architecture "
"dependent.  On x86, I<tls> is interpreted as a I<struct user_desc\\ *> (see "
"B<set_thread_area>(2)).  On x86-64 it is the new value to be set for the %fs "
"base register (see the B<ARCH_SET_FS> argument to B<arch_prctl>(2)).  On "
"architectures with a dedicated TLS register, it is the new value of that "
"register."
msgstr ""
"Die Interpretation von I<tls> und der resultierende Effekt ist "
"architekturabhängig. Auf X86 ist I<tls> als ein I<struct user_desc\\ *> "
"interpretiert (siehe B<set_thread_area>(2)). Auf X86-64 ist es der neue für "
"das Basisregister %fs zu setzende Wert (siehe das Argument B<ARCH_SET_FS> "
"von B<arch_prctl>(2)). Auf Architekturen mit einem dedizierten TLS-Register "
"ist es der neue Wert dieses Registers."

#.  Precisely: Linux 2.6.0-test6
#. type: Plain text
#: debian-bullseye
msgid ""
"Since Linux 2.6.0, the I<flags> mask must also include B<CLONE_VM> if "
"B<CLONE_SIGHAND> is specified"
msgstr ""
"Seit Linux 2.6.0 muss die I<Schalter>-Maske außerdem B<CLONE_VM> enthalten, "
"falls B<CLONE_SIGHAND> angegeben wurde."

#. type: Plain text
#: debian-bullseye
msgid ""
"If a process-directed signal is delivered to a thread group, and the thread "
"group has installed a handler for the signal, then the handler will be "
"invoked in exactly one, arbitrarily selected member of the thread group that "
"has not blocked the signal.  If multiple threads in a group are waiting to "
"accept the same signal using B<sigwaitinfo>(2), the kernel will arbitrarily "
"select one of these threads to receive the signal."
msgstr ""
"Falls ein Prozess-orientiertes Signal an eine Thread-Gruppe ausgeliefert "
"wird und die Thread-Gruppe einen Handler für dieses Signal installiert hat, "
"dann dann wird der Handler in exakt einem willkürlich ausgewählten Mitglied "
"der Thread-Gruppe aufrufen, das das Signal nicht blockiert hat. Falls "
"mehrere Threads in einer Gruppe darauf warten das gleiche Signal per "
"B<sigwaitinfo>(2) zu akzeptieren, wird der Kernel einen dieser Threads "
"willkürlich auswählen, um das Signal zu empfangen."

# FIXME The flag can be either set or not set - is it really CLONE_VM both times?
#. type: Plain text
#: debian-bullseye
msgid ""
"If the B<CLONE_VM> flag is specified and the B<CLONE_VM> flag is not "
"specified, then any alternate signal stack that was established by "
"B<sigaltstack>(2)  is cleared in the child process."
msgstr ""
"Falls der Schalter B<CLONE_VM> angegeben und der Schalter B<CLONE_VM> nicht "
"angegeben ist, dann wird jeder alternative Stapel, der durch "
"B<sigaltstack>(2) etabliert wurde, im Kindprozess bereinigt."

#.  gettid(2) returns current->pid;
#.  getpid(2) returns current->tgid;
#. type: Plain text
#: debian-bullseye opensuse-leap-15-5
msgid ""
"On success, the thread ID of the child process is returned in the caller's "
"thread of execution.  On failure, -1 is returned in the caller's context, no "
"child process will be created, and I<errno> will be set appropriately."
msgstr ""
"Bei Erfolg wird im ausgeführten Thread des Aufrufenden die Thread-Kennung "
"des Kindprozesses zurückgegeben. Im Fehlerfall wird im Kontext des "
"Aufrufenden -1 zurückgegeben, kein Kindprozess erzeugt und I<errno> "
"entsprechend gesetzt."

#. type: Plain text
#: debian-bullseye
msgid "I<stack> was not aligned to a 126-bit boundary."
msgstr "I<Stapel> war nicht an einer 126-Bit-Grenze ausgerichtet."

#. type: SH
#: debian-bullseye debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid "CONFORMING TO"
msgstr "KONFORM ZU"

#. type: Plain text
#: debian-bullseye
msgid ""
"Glibc does not provide a wrapper for B<clone3>(); call it using "
"B<syscall>(2)."
msgstr ""
"Glibc stellt keinen Wrapper für B<clone3>() bereit; rufen Sie ihn mittels "
"B<syscall>(2) auf."

#. type: Plain text
#: debian-bullseye debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-tumbleweed
#, no-wrap
msgid ""
"#define _GNU_SOURCE\n"
"#include E<lt>sys/wait.hE<gt>\n"
"#include E<lt>sys/utsname.hE<gt>\n"
"#include E<lt>sched.hE<gt>\n"
"#include E<lt>string.hE<gt>\n"
"#include E<lt>stdint.hE<gt>\n"
"#include E<lt>stdio.hE<gt>\n"
"#include E<lt>stdlib.hE<gt>\n"
"#include E<lt>unistd.hE<gt>\n"
"#include E<lt>sys/mman.hE<gt>\n"
msgstr ""
"#define _GNU_SOURCE\n"
"#include E<lt>sys/wait.hE<gt>\n"
"#include E<lt>sys/utsname.hE<gt>\n"
"#include E<lt>sched.hE<gt>\n"
"#include E<lt>string.hE<gt>\n"
"#include E<lt>stdint.hE<gt>\n"
"#include E<lt>stdio.hE<gt>\n"
"#include E<lt>stdlib.hE<gt>\n"
"#include E<lt>unistd.hE<gt>\n"
"#include E<lt>sys/mman.hE<gt>\n"

#. type: Plain text
#: debian-bullseye debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid ""
"#define errExit(msg)    do { perror(msg); exit(EXIT_FAILURE); \\e\n"
"                        } while (0)\n"
msgstr ""
"#define errExit(Nachricht)    do { perror(Nachricht); exit(EXIT_FAILURE); \\e\n"
"                        } while (0)\n"

#. type: Plain text
#: debian-bullseye opensuse-leap-15-5
#, no-wrap
msgid "    /* Change hostname in UTS namespace of child */\n"
msgstr "    /* Rechnername im UTS-Namensraum des Kindprozesses ändern */\n"

#. type: Plain text
#: debian-bullseye debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid ""
"    if (sethostname(arg, strlen(arg)) == -1)\n"
"        errExit(\"sethostname\");\n"
msgstr ""
"    if (sethostname(arg, strlen(arg)) == -1)\n"
"        errExit(\"sethostname\");\n"

#. type: Plain text
#: debian-bullseye opensuse-leap-15-5
#, no-wrap
msgid "    /* Retrieve and display hostname */\n"
msgstr "    /* Rechnernamen abfragen und anzeigen */\n"

#. type: Plain text
#: debian-bullseye debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid ""
"    if (uname(&uts) == -1)\n"
"        errExit(\"uname\");\n"
"    printf(\"uts.nodename in child:  %s\\en\", uts.nodename);\n"
msgstr ""
"    if (uname(&uts) == -1)\n"
"        errExit(\"uname\");\n"
"    printf(\"uts.nodename im Kindprozess:  %s\\en\", uts.nodename);\n"

#. type: Plain text
#: debian-bullseye debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid ""
"int\n"
"main(int argc, char *argv[])\n"
"{\n"
"    char *stack;                    /* Start of stack buffer */\n"
"    char *stackTop;                 /* End of stack buffer */\n"
"    pid_t pid;\n"
"    struct utsname uts;\n"
msgstr ""
"int\n"
"main(int argc, char *argv[])\n"
"{\n"
"    char *stack;                    /* Start des Stapelspeicherpuffers */\n"
"    char *stackTop;                 /* Ende des Stapelspeicherpuffers */\n"
"    pid_t pid;\n"
"    struct utsname uts;\n"

#. type: Plain text
#: debian-bullseye
#, no-wrap
msgid "    /* Allocate memory to be used for the stack of the child */\n"
msgstr "    /* Speicher für den Stapel des Kindprozess reservieren */\n"

#. type: Plain text
#: debian-bullseye debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-tumbleweed
#, no-wrap
msgid ""
"    stack = mmap(NULL, STACK_SIZE, PROT_READ | PROT_WRITE,\n"
"                 MAP_PRIVATE | MAP_ANONYMOUS | MAP_STACK, -1, 0);\n"
"    if (stack == MAP_FAILED)\n"
"        errExit(\"mmap\");\n"
msgstr ""
"    stack = mmap(NULL, STACK_SIZE, PROT_READ | PROT_WRITE,\n"
"                 MAP_PRIVATE | MAP_ANONYMOUS | MAP_STACK, -1, 0);\n"
"    if (stack == MAP_FAILED)\n"
"        errExit(\"mmap\");\n"

#. type: Plain text
#: debian-bullseye opensuse-leap-15-5
#, no-wrap
msgid ""
"    /* Create child that has its own UTS namespace;\n"
"       child commences execution in childFunc() */\n"
msgstr ""
"    /* Es wird ein Kindprozess erzeugt, der seinen eigenen Namensraum hat.\n"
"       Der Kindprozess beginnt die Ausführung in childFunc() */\n"

#. type: Plain text
#: debian-bullseye debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-tumbleweed
#, no-wrap
msgid ""
"    pid = clone(childFunc, stackTop, CLONE_NEWUTS | SIGCHLD, argv[1]);\n"
"    if (pid == -1)\n"
"        errExit(\"clone\");\n"
"    printf(\"clone() returned %jd\\en\", (intmax_t) pid);\n"
msgstr ""
"    pid = clone(childFunc, stackTop, CLONE_NEWUTS | SIGCHLD, argv[1]);\n"
"    if (pid == -1)\n"
"        errExit(\"clone\");\n"
"    printf(\"clone() gab %jd zurück\\en\", (intmax_t) pid);\n"

#. type: Plain text
#: debian-bullseye debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid ""
"    if (uname(&uts) == -1)\n"
"        errExit(\"uname\");\n"
"    printf(\"uts.nodename in parent: %s\\en\", uts.nodename);\n"
msgstr ""
"    if (uname(&uts) == -1)\n"
"        errExit(\"uname\");\n"
"    printf(\"uts.nodename im Elternprozess: %s\\en\", uts.nodename);\n"

#. type: Plain text
#: debian-bullseye debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-leap-15-5 opensuse-tumbleweed
#, no-wrap
msgid ""
"    if (waitpid(pid, NULL, 0) == -1)    /* Wait for child */\n"
"        errExit(\"waitpid\");\n"
"    printf(\"child has terminated\\en\");\n"
msgstr ""
"    if (waitpid(pid, NULL, 0) == -1)    /* Warten auf Kindprozess */\n"
"        errExit(\"waitpid\");\n"
"    printf(\"Kindprozess wurde beendet\\en\");\n"

#. type: SH
#: debian-bullseye debian-unstable fedora-37 fedora-rawhide mageia-cauldron
#: opensuse-leap-15-5
#, no-wrap
msgid "COLOPHON"
msgstr "KOLOPHON"

#. type: Plain text
#: debian-bullseye
msgid ""
"This page is part of release 5.10 of the Linux I<man-pages> project.  A "
"description of the project, information about reporting bugs, and the latest "
"version of this page, can be found at \\%https://www.kernel.org/doc/man-"
"pages/."
msgstr ""
"Diese Seite ist Teil der Veröffentlichung 5.10 des Projekts Linux-I<man-"
"pages>. Eine Beschreibung des Projekts, Informationen, wie Fehler gemeldet "
"werden können sowie die aktuelle Version dieser Seite finden sich unter \\"
"%https://www.kernel.org/doc/man-pages/."

#. type: TH
#: debian-unstable fedora-37 fedora-rawhide mageia-cauldron opensuse-tumbleweed
#, no-wrap
msgid "2021-03-22"
msgstr "22. März 2021"

#. type: Plain text
#: debian-unstable fedora-37 fedora-rawhide mageia-cauldron
msgid ""
"This page is part of release 5.13 of the Linux I<man-pages> project.  A "
"description of the project, information about reporting bugs, and the latest "
"version of this page, can be found at \\%https://www.kernel.org/doc/man-"
"pages/."
msgstr ""
"Diese Seite ist Teil der Veröffentlichung 5.13 des Projekts Linux-I<man-"
"pages>. Eine Beschreibung des Projekts, Informationen, wie Fehler gemeldet "
"werden können sowie die aktuelle Version dieser Seite finden sich unter \\"
"%https://www.kernel.org/doc/man-pages/."

#. type: TH
#: opensuse-leap-15-5
#, no-wrap
msgid "2017-09-15"
msgstr "15. September 2017"

#. type: Plain text
#: opensuse-leap-15-5
msgid "clone, __clone2 - create a child process"
msgstr "clone, __clone2 - erzeugt einen Kindprozess"

#. type: Plain text
#: opensuse-leap-15-5
#, no-wrap
msgid ""
"B<int clone(int (*>I<fn>B<)(void *), void *>I<child_stack>B<,>\n"
"B<          int >I<flags>B<, void *>I<arg>B<, ... >\n"
"B<          /* pid_t *>I<ptid>B<, void *>I<newtls>B<, pid_t *>I<ctid>B< */ );>\n"
msgstr ""
"B<int clone(int (*>I<fn>B<)(void *), void *>I<child_stack>B<,>\n"
"B<          int >I<Schalter>B<, void *>I<arg>B<, … >\n"
"B<          /* pid_t *>I<ptid>B<, void *>I<newtls>B<, pid_t *>I<ctid>B< */ );>\n"

#. type: Plain text
#: opensuse-leap-15-5
#, no-wrap
msgid "/* For the prototype of the raw system call, see NOTES */\n"
msgstr "/* Für den Prototyp des rohen Systemaufrufs siehe ANMERKUNGEN */\n"

#. type: Plain text
#: opensuse-leap-15-5
msgid "B<clone>()  creates a new process, in a manner similar to B<fork>(2)."
msgstr ""
"B<clone>() erzeugt auf eine ähnliche Weise wie B<fork>(2) einen neuen "
"Prozess."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"This page describes both the glibc B<clone>()  wrapper function and the "
"underlying system call on which it is based.  The main text describes the "
"wrapper function; the differences for the raw system call are described "
"toward the end of this page."
msgstr ""
"Diese Seite beschreibt die B<clone>()-Wrapper-Funktion von Glibc als auch "
"den darunterliegenden Systemaufruf, auf dem sie basiert. Der Haupttext "
"erklärt die Wrapper-Funktion. Die Unterschiede zum rohen Systemaufruf werden "
"gegen Ende dieser Seite erläutert."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"Unlike B<fork>(2), B<clone>()  allows the child process to share parts of "
"its execution context with the calling process, such as the virtual address "
"space, the table of file descriptors, and the table of signal handlers.  "
"(Note that on this manual page, \"calling process\" normally corresponds to "
"\"parent process\".  But see the description of B<CLONE_PARENT> below.)"
msgstr ""
"Anders als B<fork>(2) erlaubt B<clone>() es dem Kindprozess, einen Teil "
"seines Ausführungskontextes zusammen mit dem aufrufenden Prozess zu "
"verwenden, wie beispielsweise virtuellen Adressraum, die Tabelle der "
"Dateideskriptoren und die Tabelle der Signal-Handler. (Beachten Sie, dass in "
"dieser Handbuchseite der »aufrufende Prozess« normalerweise dem "
"»Elternprozess« entspricht. Siehe aber die nachfolgende Beschreibung von "
"B<CLONE_PARENT>)."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"One use of B<clone>()  is to implement threads: multiple flows of control in "
"a program that run concurrently in a shared address space."
msgstr ""
"B<clone>() wird benutzt, um Threads zu implementieren: mehrere Steuerflüsse "
"in einem Programm, die gleichzeitig in einem gemeinsamen Speicherbereich "
"ausgeführt werden."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"When the child process is created with B<clone>(), it commences execution by "
"calling the function pointed to by the argument I<fn>.  (This differs from "
"B<fork>(2), where execution continues in the child from the point of the "
"B<fork>(2)  call.)  The I<arg> argument is passed as the argument of the "
"function I<fn>."
msgstr ""
"Wird mit B<clone>() ein Kindprozess erzeugt, beginnt es die Ausführung durch "
"Aufruf der Funktion, auf die das Argument I<fn> zeigt. (Dies ist ein "
"Unterschied zu B<fork>(2), wo die Ausführung im Kindprozess vom Punkt des "
"B<fork>(2)-Aufrufs fortfährt.) Das Argument I<arg> wird als Argument der "
"Funktion I<fn> übergeben."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"The I<child_stack> argument specifies the location of the stack used by the "
"child process.  Since the child and calling process may share memory, it is "
"not possible for the child process to execute in the same stack as the "
"calling process.  The calling process must therefore set up memory space for "
"the child stack and pass a pointer to this space to B<clone>().  Stacks grow "
"downward on all processors that run Linux (except the HP PA processors), so "
"I<child_stack> usually points to the topmost address of the memory space set "
"up for the child stack."
msgstr ""
"Das Argument I<Kindstapel> bestimmt den Ort des Stapelspeichers, der vom "
"Kindprozess verwendet wird. Da der aufrufende und der Kindprozess sich "
"Speicherbereiche teilen können, kann der Kindprozess nicht auf dem selben "
"Stapelspeicher wie der aufrufende Prozess laufen. Der aufrufende Prozess "
"muss daher einen Speicherbereich als Stapelspeicher für den Kindprozess "
"bereithalten und per B<clone> einen Zeiger darauf an den Kindprozess "
"übergeben. Der Stapelspeicher wächst (mit Ausnahme der PA-Prozessoren von "
"HP) auf allen von Linux unterstützten Prozessoren nach unten, so dass "
"I<Kindstapel> für gewöhnlich auf die oberste Adresse im bereitgehaltenen "
"Speicherbereich zeigt."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"The low byte of I<flags> contains the number of the I<termination signal> "
"sent to the parent when the child dies.  If this signal is specified as "
"anything other than B<SIGCHLD>, then the parent process must specify the "
"B<__WALL> or B<__WCLONE> options when waiting for the child with "
"B<wait>(2).  If no signal is specified, then the parent process is not "
"signaled when the child terminates."
msgstr ""
"Das niedrige Byte von I<Schalter> enthält die Anzahl der an den "
"Elternprozess gesandten I<Beendigungssignale>, wenn der Kindprozess stirbt. "
"Falls dieses Signal als etwas anderes als B<SIGCHLD> angegeben wurde, dann "
"muss der Elternprozess die Optionen B<__WALL> oder B<__WCLONE> angeben, wenn "
"er mit B<wait>(2) auf den Kindprozess wartet. Falls kein Signal angegeben "
"wurde, wird dem Elternprozess nicht signalisiert, wenn der Kindprozess endet."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"I<flags> may also be bitwise-ORed with zero or more of the following "
"constants, in order to specify what is shared between the calling process "
"and the child process:"
msgstr ""
"I<Schalter> können auch bitweise-ODER-verknüpft mit keinem oder mehreren der "
"folgenden Konstanten werden, um festzulegen, was zwischen dem aufrufenden "
"Prozess und dem Kindprozess gemeinsam benutzt wird:"

# http://de.wikipedia.org/wiki/Native_POSIX_Thread_Library
#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"Clear (zero) the child thread ID at the location I<ctid> in child memory "
"when the child exits, and do a wakeup on the futex at that address.  The "
"address involved may be changed by the B<set_tid_address>(2)  system call.  "
"This is used by threading libraries."
msgstr ""
"Die Kind-Thread-Kennung an der durch I<ctid> im Kindspeicher bereinigen "
"(nullen), wenn das Kind sich beendet und beim Futex (»fast userspace mutual "
"exclusion«/schneller gegenseitiger Ausschluss im Userspace) an dieser "
"Adresse aufwachen lassen. Die betroffene Adresse könnte durch den "
"Systemaufruf B<set_tid_address>(2) geändert werden. Dies wird von Threading-"
"Bibliotheken benutzt."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"Store the child thread ID at the location I<ctid> in the child's memory.  "
"The store operation completes before B<clone>()  returns control to user "
"space."
msgstr ""
"Die Kindprozess-Thread-Kennung an der Stelle I<ctid> im Kindspeicher "
"ablegen. Die Speicheraktion wird abgeschlossen, bevor B<clone>() die "
"Steuerung an den Benutzerraum zurückgibt."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"If B<CLONE_FILES> is not set, the child process inherits a copy of all file "
"descriptors opened in the calling process at the time of B<clone>().  "
"Subsequent operations that open or close file descriptors, or change file "
"descriptor flags, performed by either the calling process or the child "
"process do not affect the other process.  Note, however, that the duplicated "
"file descriptors in the child refer to the same open file descriptions as "
"the corresponding file descriptors in the calling process, and thus share "
"file offsets and file status flags (see B<open>(2))."
msgstr ""
"Ist B<CLONE_FILES> nicht gesetzt, erbt der Kindprozess zur Ausführungszeit "
"von B<clone>() eine Kopie der aktuell geöffneten Dateideskriptoren. "
"Anschließende Aktionen, die Dateideskriptoren öffnen oder schließen bzw. "
"deren Schalter ändern, werden entweder vom aufrufenden Prozess oder dem "
"Kindprozess durchgeführt und betreffen nicht den jeweils anderen Prozess. "
"Beachten Sie aber, dass sich die duplizierten Dateideskriptoren im Kind auf "
"die gleiche offene Dateideskription wie der korrespondierende "
"Dateideskriptor im aufrufenden Prozess bezieht und sich daher den "
"Dateiversatz und die Dateistatusschalter mit diesem teilt (siehe B<open>(2))."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"If B<CLONE_FS> is not set, the child process works on a copy of the "
"filesystem information of the calling process at the time of the B<clone>()  "
"call.  Calls to B<chroot>(2), B<chdir>(2), or B<umask>(2)  performed later "
"by one of the processes do not affect the other process."
msgstr ""
"Ist B<CLONE_FS> nicht gesetzt, arbeitet der Kindprozess mit einer Kopie der "
"Dateisysteminformationen des aufrufenden Prozesses zur Zeit des B<clone>()-"
"Aufrufs. Spätere Aufrufe von B<chroot>(2), B<chdir>(2) oder B<umask>(2) "
"beeinflussen den anderen Prozess nicht."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"Create the process in a new cgroup namespace.  If this flag is not set, then "
"(as with B<fork>(2))  the process is created in the same cgroup namespaces "
"as the calling process.  This flag is intended for the implementation of "
"containers."
msgstr ""
"Der Prozess wird in einem neuen cgroup-Namensraum erstellt. Falls dieser "
"Schalter nicht gesetzt ist, dann wird der Prozess (wie mit B<fork>(2)) im "
"gleichen cgroup-Namensraum wie der aufrufende Prozess erstellt. Dieser "
"Schalter ist für die Implementierung von Containern gedacht."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"If B<CLONE_NEWIPC> is set, then create the process in a new IPC namespace.  "
"If this flag is not set, then (as with B<fork>(2)), the process is created "
"in the same IPC namespace as the calling process.  This flag is intended for "
"the implementation of containers."
msgstr ""
"Wenn B<CLONE_NEWIPC> gesetzt ist, dann wird der Prozess in einem neuen IPC-"
"Namensraum erstellt. Falls dieser Schalter nicht gesetzt ist, dann wird der "
"Prozess (wie mit B<fork>(2)) im gleichen IPC-Namensraum wie der aufrufende "
"Prozess erstellt. Dieser Schalter ist für die Implementierung von Containern "
"gedacht."

#.  commit 7eafd7c74c3f2e67c27621b987b28397110d643f
#.  https://lwn.net/Articles/312232/
#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"An IPC namespace provides an isolated view of System\\ V IPC objects (see "
"B<svipc>(7))  and (since Linux 2.6.30)  POSIX message queues (see "
"B<mq_overview>(7)).  The common characteristic of these IPC mechanisms is "
"that IPC objects are identified by mechanisms other than filesystem "
"pathnames."
msgstr ""
"Ein IPC-Namensraum stellt einen isolierten Blick auf die System-V-IPC-"
"Objekte (siehe B<svipc>(7)) und (seit Linux 2.6.30) POSIX-"
"Nachrichtenwarteschlangen (siehe B<mq_overview>(7)) bereit. Die gemeinsame "
"Eigenschaft dieser IPC-Mechanismen besteht darin, dass IPC-Objekte durch "
"Mechanismen, die sich von Dateisystempfadnamen unterscheiden, identifiziert "
"werden."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"Objects created in an IPC namespace are visible to all other processes that "
"are members of that namespace, but are not visible to processes in other IPC "
"namespaces."
msgstr ""
"In einem IPC-Namensraum erstellte Objekte sind für alle anderen Prozesse, "
"die Mitglied in diesem Namensraum sind, sichtbar, aber nicht für Prozesse in "
"anderen IPC-Namensräumen."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"When an IPC namespace is destroyed (i.e., when the last process that is a "
"member of the namespace terminates), all IPC objects in the namespace are "
"automatically destroyed."
msgstr ""
"Wenn ein IPC-Namensraum zerstört wird (d.h. wenn der letzte Prozess, der "
"Mitglied in einem Namensraum ist, sich beendet), dann werden alle IPC-"
"Objekte in diesem Namensraum automatisch zerstört."

#. type: Plain text
#: opensuse-leap-15-5
msgid "For further information on IPC namespaces, see B<namespaces>(7)."
msgstr ""
"Weitere Informationen zu IPC-Namensräumen finden Sie in B<namespaces>(7)."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"If B<CLONE_NEWNET> is set, then create the process in a new network "
"namespace.  If this flag is not set, then (as with B<fork>(2))  the process "
"is created in the same network namespace as the calling process.  This flag "
"is intended for the implementation of containers."
msgstr ""
"Wenn B<CLONE_NEWNET> gesetzt ist, dann wird der Prozess in einem neuen "
"Netzwerk-Namensraum erstellt. Falls dieser Schalter nicht gesetzt ist, dann "
"wird der Prozess (wie mit B<fork>(2)) im gleichen Netzwerk-Namensraum wie "
"der aufrufende Prozess erstellt. Dieser Schalter ist für die Implementierung "
"von Containern gedacht."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"A network namespace provides an isolated view of the networking stack "
"(network device interfaces, IPv4 and IPv6 protocol stacks, IP routing "
"tables, firewall rules, the I</proc/net> and I</sys/class/net> directory "
"trees, sockets, etc.).  A physical network device can live in exactly one "
"network namespace.  A virtual network (B<veth>(4))  device pair provides a "
"pipe-like abstraction that can be used to create tunnels between network "
"namespaces, and can be used to create a bridge to a physical network device "
"in another namespace."
msgstr ""
"Ein Netzwerknamensraum stellt einen isolierten Blick auf den Netzwerk-Stapel "
"(Netzwerkgeräteschnittstelle, IPv4- und IPv6-Prokollstapel, IP-Routing-"
"Tabellen, Firewall-Regeln, die Verzeichnisbäume I</proc/net> und I</sys/"
"class/net>, Sockets usw.) bereit. Ein physisches Netzwerkgerät kann in genau "
"einem Netzwerknamensraum leben. Ein Gerätepaar für ein virtuelles Netzwerk "
"(B<veth>(4)) stellt eine Pipe-artige Abstraktion bereit, die zum Erzeugen "
"von Tunneln zwischen Netzwerknamensräumen und zum Überbrücken zu einem "
"physischen Netzwerkgerät in einem anderen Namensraum verwandt werden kann."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"When a network namespace is freed (i.e., when the last process in the "
"namespace terminates), its physical network devices are moved back to the "
"initial network namespace (not to the parent of the process).  For further "
"information on network namespaces, see B<namespaces>(7)."
msgstr ""
"Wenn ein Netzwerknamensraum freigegeben wird (d.h. wenn sich der letzte "
"Prozess in dem Namensraum beendet), wird sein physisches Netzwerkgerät "
"zurück in den anfänglichen Netzwerknamensraum geschoben (nicht zum "
"Elternprozess). Für weitere Informationen über Netzwerknamensräume, siehe "
"B<namespaces>(7)."

#.  See https://lwn.net/Articles/543273/
#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"Only a privileged process (B<CAP_SYS_ADMIN>)  can employ B<CLONE_NEWNS>.  It "
"is not permitted to specify both B<CLONE_NEWNS> and B<CLONE_FS> in the same "
"B<clone>()  call."
msgstr ""
"Nur ein privilegierter Prozess (einer der die Fähigkeit B<CAP_SYS_ADMIN> "
"hat) kann den Schalter B<CLONE_NEWNS> angeben. Es ist nicht erlaubt, sowohl "
"B<CLONE_NEWNS> als auch B<CLONE_FS> im gleichen Aufruf von B<clone>() "
"anzugeben."

#.  This explanation draws a lot of details from
#.  http://lwn.net/Articles/259217/
#.  Authors: Pavel Emelyanov <xemul@openvz.org>
#.  and Kir Kolyshkin <kir@openvz.org>
#.  The primary kernel commit is 30e49c263e36341b60b735cbef5ca37912549264
#.  Author: Pavel Emelyanov <xemul@openvz.org>
#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"If B<CLONE_NEWPID> is set, then create the process in a new PID namespace.  "
"If this flag is not set, then (as with B<fork>(2))  the process is created "
"in the same PID namespace as the calling process.  This flag is intended for "
"the implementation of containers."
msgstr ""
"Wenn B<CLONE_NEWPID> gesetzt ist, dann wird der Prozess in einem neuen PID-"
"Namensraum erstellt. Falls dieser Schalter nicht gesetzt ist, dann wird der "
"Prozess (wie mit B<fork>(2)) im gleichen PID-Namensraum wie der aufrufende "
"Prozess erstellt. Dieser Schalter ist für die Implementierung von Containern "
"gedacht."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"If B<CLONE_NEWUTS> is set, then create the process in a new UTS namespace, "
"whose identifiers are initialized by duplicating the identifiers from the "
"UTS namespace of the calling process.  If this flag is not set, then (as "
"with B<fork>(2))  the process is created in the same UTS namespace as the "
"calling process.  This flag is intended for the implementation of containers."
msgstr ""
"Falls B<CLONE_NEWUTS> gesetzt ist, erzeugt der Prozess einen neuen UTS-"
"Namensraum, dessen Bezeichner durch Duplizieren der Bezeichner aus dem UTS-"
"Namensraum des aufrufenden Prozesses initialisiert werden. Wenn dieser "
"Schalter nicht gesetzt ist (wie mit B<fork>(2)), dann wird der Prozess im "
"gleichen UTS-Namensraum wie der aufrufende Prozess erzeugt. Dieser Schalter "
"ist für die Implementierung von Containern gedacht."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"A UTS namespace is the set of identifiers returned by B<uname>(2); among "
"these, the domain name and the hostname can be modified by "
"B<setdomainname>(2)  and B<sethostname>(2), respectively.  Changes made to "
"the identifiers in a UTS namespace are visible to all other processes in the "
"same namespace, but are not visible to processes in other UTS namespaces."
msgstr ""
"Ein UTS-Namensraum ist die Menge der von B<uname>(2) zurückgelieferten "
"Kennzeichner, unter diesen können der Domain-Name und der Rechnername mit "
"B<setdomainname>(2) bzw. B<sethostname>(2) verändert werden. Änderungen in "
"einem UTS-Namensraum an diesen Kennzeichnern sind für alle anderen Prozesse "
"in dem gleichen Namensraum sichtbar, aber nicht für Prozesse in anderen UTS-"
"Namensräumen."

#. type: Plain text
#: opensuse-leap-15-5
msgid "For further information on UTS namespaces, see B<namespaces>(7)."
msgstr ""
"Weitere Informationen zu UTS-Namensräumen finden Sie in B<namespaces>(7)."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"Store the child thread ID at the location I<ptid> in the parent's memory.  "
"(In Linux 2.5.32-2.5.48 there was a flag B<CLONE_SETTID> that did this.)  "
"The store operation completes before B<clone>()  returns control to user "
"space."
msgstr ""
"Die Kindprozess-Thread-Kennung an der Stelle I<ptid> im Elternspeicher "
"ablegen. (In Linux 2.5.32-2.5.48 gab es einen Schalter B<CLONE_SETTID>, der "
"das tat.) Die Speicheraktion wird abgeschlossen, bevor der B<clone>()-Aufruf "
"die Steuerung an den Benutzerraum zurückgibt."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"If B<CLONE_PID> is set, the child process is created with the same process "
"ID as the calling process.  This is good for hacking the system, but "
"otherwise of not much use.  From Linux 2.3.21 onward, this flag could be "
"specified only by the system boot process (PID 0).  The flag disappeared "
"completely from the kernel sources in Linux 2.5.16.  Since then, the kernel "
"silently ignores this bit if it is specified in I<flags>."
msgstr ""
"Falls B<CLONE_PID> gesetzt ist, wird der Kindprozess mit der gleichen "
"Prozesskennung wie der aufrufende Prozess erstellt. Dies ist gut, um das "
"System zu hacken, aber andererseits zu nicht viel mehr zu gebrauchen. Seit "
"Linux 2.3.21 konnte dieser Schalter nur durch den Boot-Prozess festgelegt "
"werden (PID 0). Dieser Schalter verschwand in Linux 2.5.16 komplett aus den "
"Kernelquellen. Seitdem ignorierte der Kernel dieses Bit, falls es in "
"I<Schalter> angegeben wurde."

#. type: Plain text
#: opensuse-leap-15-5
msgid "The TLS (Thread Local Storage) descriptor is set to I<newtls>."
msgstr "Der TLS (Thread Local Storage)-Deskriptor ist auf I<newtls> gesetzt."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"The interpretation of I<newtls> and the resulting effect is architecture "
"dependent.  On x86, I<newtls> is interpreted as a I<struct user_desc\\ *> "
"(see B<set_thread_area>(2)).  On x86-64 it is the new value to be set for "
"the %fs base register (see the B<ARCH_SET_FS> argument to "
"B<arch_prctl>(2)).  On architectures with a dedicated TLS register, it is "
"the new value of that register."
msgstr ""
"Die Interpretation von I<newtls> und der resultierende Effekt ist "
"architekturabhängig. Auf X86 ist I<newtls> als ein I<struct user_desc\\ *> "
"interpretiert (siehe B<set_thread_area>(2)). Auf X86-64 ist es der neue für "
"das Basisregister %fs zu setzende Wert (siehe das Argument B<ARCH_SET_FS> "
"von B<arch_prctl>(2)). Auf Architekturen mit einem dedizierten TLS-Register "
"ist es der neue Wert dieses Registers."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"If B<CLONE_SIGHAND> is not set, the child process inherits a copy of the "
"signal handlers of the calling process at the time B<clone>()  is called.  "
"Calls to B<sigaction>(2)  performed later by one of the processes have no "
"effect on the other process."
msgstr ""
"Ist B<CLONE_SIGHAND> nicht gesetzt, erbt der Kindprozess zum Zeitpunkt des "
"Aufrufs von B<clone>() eine Kopie des Signal-Handlers vom aufrufenden "
"Prozess. Spätere Aufrufe von B<sigaction>(2) durch einen der Prozesse hat "
"dann keine Auswirkung auf den anderen Prozess."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"Since Linux 2.6.0-test6, I<flags> must also include B<CLONE_VM> if "
"B<CLONE_SIGHAND> is specified"
msgstr ""
"Seit Linux 2.6.0-test6 muss I<Schalter> außerdem B<CLONE_VM> enthalten, "
"falls B<CLONE_SIGHAND> angegeben wurde."

#. type: TP
#: opensuse-leap-15-5
#, no-wrap
msgid "B<CLONE_STOPPED> (since Linux 2.6.0-test2)"
msgstr "B<CLONE_STOPPED> (seit Linux 2.6.0-test2)"

#. type: TP
#: opensuse-leap-15-5
#, no-wrap
msgid "B<CLONE_THREAD> (since Linux 2.4.0-test8)"
msgstr "B<CLONE_THREAD> (seit Linux 2.4.0-test8)"

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"The threads within a group can be distinguished by their (system-wide)  "
"unique thread IDs (TID).  A new thread's TID is available as the function "
"result returned to the caller of B<clone>(), and a thread can obtain its own "
"TID using B<gettid>(2)."
msgstr ""
"Die Threads innerhalb einer Gruppe können durch ihre (systemweit) "
"einheitliche Thread-Kennung (TID) unterschieden werden. Die TID eines neuen "
"Threads ist als Funktionsergebnis verfügbar, das an den Aufrufenden von "
"B<clone>() zurückgegeben wird. Ein Thread kann durch Benutzen von "
"B<gettid>(2) seine eigene TID erhalten."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"When a call is made to B<clone>()  without specifying B<CLONE_THREAD>, then "
"the resulting thread is placed in a new thread group whose TGID is the same "
"as the thread's TID.  This thread is the I<leader> of the new thread group."
msgstr ""
"Wenn B<clone>() ohne Angabe von B<CLONE_THREAD> aufgerufen wurde, dann wird "
"der resultierende Thread in eine neue Thread-Gruppe platziert, deren TGID "
"der TID des Threads entspricht. Dieser Thread ist der I<Führer> der neuen "
"Thread-Gruppe."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"A new thread created with B<CLONE_THREAD> has the same parent process as the "
"caller of B<clone>()  (i.e., like B<CLONE_PARENT>), so that calls to "
"B<getppid>(2)  return the same value for all of the threads in a thread "
"group.  When a B<CLONE_THREAD> thread terminates, the thread that created it "
"using B<clone>()  is not sent a B<SIGCHLD> (or other termination) signal; "
"nor can the status of such a thread be obtained using B<wait>(2).  (The "
"thread is said to be I<detached>.)"
msgstr ""
"Ein neuer mit B<CLONE_THREAD> erzeugter Thread hat den gleichen "
"Elternprozess wie Aufrufende von B<clone>() (d.h. wie B<CLONE_PARENT>), so "
"dass Aufrufe von B<getppid>(2) den gleichen Wert für alle Threads in der "
"Thread-Gruppe zurückliefern. Wenn ein B<CLONE_THREAD>-Thread endet, wird dem "
"Thread, der ihn mittels B<clone>() erstellt hat, weder ein B<SIGCHLD>-Signal "
"(oder ein anderes Ende-Signal) gesandt, noch kann der Status eines solchen "
"Threads per B<wait>(2) abgefragt werden. (Der Thread wird als I<losgelöst> "
"bezeichnet.)"

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"Since Linux 2.5.35, I<flags> must also include B<CLONE_SIGHAND> if "
"B<CLONE_THREAD> is specified (and note that, since Linux 2.6.0-test6, "
"B<CLONE_SIGHAND> also requires B<CLONE_VM> to be included)."
msgstr ""
"Seit Linux 2.5.35 muss I<Schalter> auch B<CLONE_SIGHAND> enthalten, wenn "
"B<CLONE_THREAD> angegeben wurde. Beachten Sie auch, dass seit Linux 2.6.0-"
"test6 B<CLONE_SIGHAND> auch B<CLONE_VM> enthalten muss."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"Signals may be sent to a thread group as a whole (i.e., a TGID) using "
"B<kill>(2), or to a specific thread (i.e., TID) using B<tgkill>(2)."
msgstr ""
"Signale können an eine Thread-Gruppe als ganzes (d.h. einer TGID) mittels "
"B<kill>(2) oder zu einem bestimmten Thread (d.h. TID) mittels B<tgkill>(2) "
"gesandt werden."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"Each thread has its own signal mask, as set by B<sigprocmask>(2), but "
"signals can be pending either: for the whole process (i.e., deliverable to "
"any member of the thread group), when sent with B<kill>(2); or for an "
"individual thread, when sent with B<tgkill>(2).  A call to B<sigpending>(2)  "
"returns a signal set that is the union of the signals pending for the whole "
"process and the signals that are pending for the calling thread."
msgstr ""
"Jeder Thread hat seine eigene, durch B<sigprocmask>(2) gesetzte Signalmaske, "
"aber Signale können entweder für den gesamten Prozess (d.h. Auslieferung an "
"ein Mitglied der Thread-Gruppe) anhängig sein, wenn sie mit B<kill>(2) "
"gesandt werden oder für einen individuellen Thread, wenn sie mit "
"B<tgkill>(2) gesandt werden. Ein Aufruf von B<sigpending>(2) liefert eine "
"Signalmenge, die die Vereinigung der anhängenden Signale für den gesamten "
"Prozess und der für den aufrufenden Thread anhängenden Signale ist."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"If B<kill>(2)  is used to send a signal to a thread group, and the thread "
"group has installed a handler for the signal, then the handler will be "
"invoked in exactly one, arbitrarily selected member of the thread group that "
"has not blocked the signal.  If multiple threads in a group are waiting to "
"accept the same signal using B<sigwaitinfo>(2), the kernel will arbitrarily "
"select one of these threads to receive a signal sent using B<kill>(2)."
msgstr ""
"Falls B<kill>(2) zum Senden eines Signals an eine Thread-Gruppe verwandt "
"wird und die Thread-Gruppe einen Handler für dieses Signal installiert hat, "
"dann dann wird der Handler in exakt einem willkürlich ausgewählten Mitglied "
"der Thread-Gruppe aufrufen, das das Signal nicht blockiert hat. Falls "
"mehrere Threads in einer Gruppe darauf warten das gleiche Signal per "
"B<sigwaitinfo>(2) zu akzeptieren, wird der Kernel einen dieser Threads "
"willkürlich auswählen, um ein Signal zu empfangen, das mittels B<kill>(2) "
"gesandt wurde."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"If B<CLONE_VM> is not set, the child process runs in a separate copy of the "
"memory space of the calling process at the time of B<clone>().  Memory "
"writes or file mappings/unmappings performed by one of the processes do not "
"affect the other, as with B<fork>(2)."
msgstr ""
"Ist B<CLONE_VM> nicht gesetzt, erhält der Kindprozess eine eigene Kopie des "
"Speicherbereichs des aufrufenden Prozesses zum Zeitpunkt des Aufrufs von "
"B<clone>(). Führt ein Prozess Schreibzugriffe auf den Speicher oder "
"Änderungen am Dateispeicher-Mapping aus, beeinflussen diese Operationen "
"nicht den jeweils anderen, wie bei B<fork>(2)."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"Note that the glibc B<clone>()  wrapper function makes some changes in the "
"memory pointed to by I<child_stack> (changes required to set the stack up "
"correctly for the child)  I<before> invoking the B<clone>()  system call.  "
"So, in cases where B<clone>()  is used to recursively create children, do "
"not use the buffer employed for the parent's stack as the stack of the child."
msgstr ""
"Beachten Sie, dass die Glibc-Wrapperfunktion B<clone>() einige Änderungen am "
"Speicher, auf den I<Kindstapel> zeigt, vornimmt (Änderungen, um den Stapel "
"korrekt für das Kind einzurichten), I<bevor> der Systemaufruf B<clone>() "
"ausgelöst wird. Verwenden Sie daher in Fällen, in denen B<clone>() zur "
"rekursiven Erstellung von Kindern verwandt wird, nicht den Puffer, der für "
"den Stapel der Eltern eingesetzt wird, als Stapel der Kinder."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"Another difference for the raw B<clone>()  system call is that the "
"I<child_stack> argument may be NULL, in which case the child uses a "
"duplicate of the parent's stack.  (Copy-on-write semantics ensure that the "
"child gets separate copies of stack pages when either process modifies the "
"stack.)  In this case, for correct operation, the B<CLONE_VM> option should "
"not be specified.  (If the child I<shares> the parent's memory because of "
"the use of the B<CLONE_VM> flag, then no copy-on-write duplication occurs "
"and chaos is likely to result.)"
msgstr ""
"Ein anderer Unterschied zum rohen Systemaufruf B<clone>() besteht darin, "
"dass das Argument I<Kindstapel> NULL sein darf. In diesem Fall verwendet das "
"Kind eine Dublette des Stapels des Elternprozesses. (»Copy-on-write«-"
"Semantik stellt sicher, dass der Kindprozess getrennte Kopien des "
"Stapelspeichers erhält, wenn einer der beiden Prozesse den Stapelspeicher "
"verändert.) In diesem Fall sollte die Option B<CLONE_VM> nicht angegeben "
"werden, damit es korrekt funktioniert. (Falls das Kind sich aufgrund des "
"Schalters B<CLONE_VM> mit dem Elternprozess den Speicher I<teilt>, dann "
"tritt keine copy-on-write-Duplizierung auf und wahrscheinlich tritt Chaos "
"ein."

#. type: Plain text
#: opensuse-leap-15-5
#, no-wrap
msgid ""
"B<long clone(unsigned long >I<flags>B<, void *>I<child_stack>B<,>\n"
"B<           int *>I<ptid>B<, int *>I<ctid>B<,>\n"
"B<           unsigned long >I<newtls>B<);>\n"
msgstr ""
"B<long clone(unsigned long >I<Schalter>B<, void *>I<Kindstapel>B<,>\n"
"B<           int *>I<ptid>B<, int *>I<ctid>B<,>\n"
"B<           unsigned long >I<newtls>B<);>\n"

#. type: Plain text
#: opensuse-leap-15-5
#, no-wrap
msgid ""
"B<long clone(unsigned long >I<flags>B<, void *>I<child_stack>B<,>\n"
"B<          int *>I<ptid>B<, unsigned long >I<newtls>B<,>\n"
"B<          int *>I<ctid>B<);>\n"
msgstr ""
"B<long clone(unsigned long >I<Schalter>B<, void *>I<Kindstapel>B<,>\n"
"B<          int *>I<ptid>B<, unsigned long >I<newtls>B<,>\n"
"B<          int *>I<ctid>B<);>\n"

#. type: Plain text
#: opensuse-leap-15-5
#, no-wrap
msgid ""
"B<long clone(void *>I<child_stack>B<, unsigned long >I<flags>B<,>\n"
"B<           int *>I<ptid>B<, int *>I<ctid>B<,>\n"
"B<           unsigned long >I<newtls>B<);>\n"
msgstr ""
"B<long clone(void *>I<Kindstapel>B<, unsigned long >I<Schalter>B<,>\n"
"B<           int *>I<ptid>B<, int *>I<ctid>B<,>\n"
"B<           unsigned long >I<newtls>B<);>\n"

#. type: Plain text
#: opensuse-leap-15-5
#, no-wrap
msgid ""
"B<long clone(unsigned long >I<flags>B<, void *>I<child_stack>B<,>\n"
"B<           int >I<stack_size>B<,>         /* Size of stack */\n"
"B<           int *>I<ptid>B<, int *>I<ctid>B<,>\n"
"B<           unsigned long >I<newtls>B<);>\n"
msgstr ""
"B<long clone(unsigned long >I<Schalter>B<, void *>I<Kindstapel>B<,>\n"
"B<           int >I<Stapelgröße>B<,>         /* Größe des Stapels */\n"
"B<           int *>I<ptid>B<, int *>I<ctid>B<,>\n"
"B<           unsigned long >I<newtls>B<);>\n"

#. type: Plain text
#: opensuse-leap-15-5
#, no-wrap
msgid ""
"B<int __clone2(int (*>I<fn>B<)(void *), >\n"
"B<             void *>I<child_stack_base>B<, size_t >I<stack_size>B<,>\n"
"B<             int >I<flags>B<, void *>I<arg>B<, ... >\n"
"B<          /* pid_t *>I<ptid>B<, struct user_desc *>I<tls>B<, pid_t *>I<ctid>B< */ );>\n"
msgstr ""
"B<int __clone2(int (*>I<fn>B<)(void *), >\n"
"B<             void *>I<Kindstapelbasis>B<, size_t >I<Stapelgröße>B<,>\n"
"B<             int >I<Schalter>B<, void *>I<arg>B<, … >\n"
"B<          /* pid_t *>I<ptid>B<, struct user_desc *>I<tls>B<, pid_t *>I<ctid>B< */ );>\n"

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"The prototype shown above is for the glibc wrapper function; the raw system "
"call interface has no I<fn> or I<arg> argument, and changes the order of the "
"arguments so that I<flags> is the first argument, and I<tls> is the last "
"argument."
msgstr ""
"Der oben gezeigte Prototyp ist für die Glibc-Wrapper-Funktion; der rohe "
"Systemaufruf verfügt nicht über das Argument I<fn> und I<arg> und die "
"Reihenfolge der Argumente ist anders, so dass I<Schalter> das erste Argument "
"ist und I<tls> das letzte."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"B<__clone2>()  operates in the same way as B<clone>(), except that "
"I<child_stack_base> points to the lowest address of the child's stack area, "
"and I<stack_size> specifies the size of the stack pointed to by "
"I<child_stack_base>."
msgstr ""
"B<__clone2>() arbeitet auf die gleiche Weise wie B<clone>(), außer dass "
"I<Kindstapelbasis> auf die niedrigste Adresse im Stapelspeicherbereich des "
"Kindprozesses zeigt und I<Stapelgröße> die Größe des Stapelspeichers angibt, "
"auf die I<Kindstapelbasis> zeigt."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"In Linux 2.4 and earlier, B<clone>()  does not take arguments I<ptid>, "
"I<tls>, and I<ctid>."
msgstr ""
"Unter Linux 2.4 und früher gab es die Argumente I<ptid>, I<tls> und I<ctid> "
"noch nicht."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"B<CLONE_SIGHAND> was specified, but B<CLONE_VM> was not.  (Since Linux 2.6.0-"
"test6.)"
msgstr ""
"B<CLONE_SIGHAND> wurde festgelegt, aber nicht B<CLONE_VM>. (Seit Linux 2.6.0-"
"test6.)"

#.  .TP
#.  .B EINVAL
#.  Precisely one of
#.  .B CLONE_DETACHED
#.  and
#.  .B CLONE_THREAD
#.  was specified.
#.  (Since Linux 2.6.0-test6.)
#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"B<CLONE_THREAD> was specified, but B<CLONE_SIGHAND> was not.  (Since Linux "
"2.5.35.)"
msgstr ""
"B<CLONE_THREAD> wurde festgelegt, aber nicht B<CLONE_SIGHAND>. (Seit Linux "
"2.5.35.)"

#.  commit e66eded8309ebf679d3d3c1f5820d1f2ca332c71
#. type: Plain text
#: opensuse-leap-15-5
msgid "Both B<CLONE_FS> and B<CLONE_NEWNS> were specified in I<flags>."
msgstr ""
"In I<Schalter> wurden sowohl B<CLONE_FS> als auch B<CLONE_NEWNS> festgelegt."

#. type: Plain text
#: opensuse-leap-15-5
msgid "Both B<CLONE_NEWUSER> and B<CLONE_FS> were specified in I<flags>."
msgstr ""
"In I<Schalter> wurden sowohl B<CLONE_NEWUSER> als auch B<CLONE_FS> "
"festgelegt."

#. type: Plain text
#: opensuse-leap-15-5
msgid "Both B<CLONE_NEWIPC> and B<CLONE_SYSVSEM> were specified in I<flags>."
msgstr ""
"In I<Schalter> wurden sowohl B<CLONE_NEWIPC> als auch B<CLONE_SYSVSEM> "
"festgelegt."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"One (or both) of B<CLONE_NEWPID> or B<CLONE_NEWUSER> and one (or both) of "
"B<CLONE_THREAD> or B<CLONE_PARENT> were specified in I<flags>."
msgstr ""
"Eines (oder beides) von B<CLONE_NEWPID> oder B<CLONE_NEWUSER> und eines "
"(oder beides) von B<CLONE_THREAD> oder B<CLONE_PARENT> wurde in I<Schalter> "
"festgelegt."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"Returned by the glibc B<clone>()  wrapper function when I<fn> or "
"I<child_stack> is specified as NULL."
msgstr ""
"Wird von der Glibc-Wrapper-Funktion B<clone>() zurückgegeben, wenn ein Wert "
"von NULL für I<fn> oder I<Kindstapel> festgelegt wurde."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"B<CLONE_NEWIPC> was specified in I<flags>, but the kernel was not configured "
"with the B<CONFIG_SYSVIPC> and B<CONFIG_IPC_NS> options."
msgstr ""
"B<CLONE_NEWIPC> wurde in I<Schalter> festgelegt, aber der Kernel ist nicht "
"mit den Optionen B<CONFIG_SYSVIPC> und B<CONFIG_IPC_NS> konfiguriert."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"B<CLONE_NEWNET> was specified in I<flags>, but the kernel was not configured "
"with the B<CONFIG_NET_NS> option."
msgstr ""
"B<CLONE_NEWNET> wurde in I<Schalter> festgelegt, aber der Kernel ist nicht "
"mit der Option B<CONFIG_NET_NS> konfiguriert."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"B<CLONE_NEWPID> was specified in I<flags>, but the kernel was not configured "
"with the B<CONFIG_PID_NS> option."
msgstr ""
"B<CLONE_NEWPID> wurde in I<Schalter> festgelegt, aber der Kernel ist nicht "
"mit der Option B<CONFIG_PID_NS> konfiguriert."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"B<CLONE_NEWUTS> was specified in I<flags>, but the kernel was not configured "
"with the B<CONFIG_UTS> option."
msgstr ""
"B<CLONE_NEWUTS> wurde in I<Schalter> festgelegt, aber der Kernel ist nicht "
"mit der Option B<CONFIG_UTS_NS> konfiguriert."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"I<child_stack> is not aligned to a suitable boundary for this architecture.  "
"For example, on aarch64, I<child_stack> must be a multiple of 16."
msgstr ""
"I<Kindstapel> ist nicht an einer geeigneten Grenze für diese Architektur "
"ausgerichtet. Beispielsweise muss I<Kindstapel> auf Aarch64 ein Vielfaches "
"von 16 sein."

#.  commit f2302505775fd13ba93f034206f1e2a587017929
#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"B<CLONE_NEWPID> was specified in flags, but the limit on the nesting depth "
"of PID namespaces would have been exceeded; see B<pid_namespaces>(7)."
msgstr ""
"B<CLONE_NEWPID> wurde in den Schalteren festgelegt, aber die Begrenzung der "
"Verschachtelungstiefe von PID-Namensräumen würde überschritten; siehe "
"B<pid_namespaces>(7)."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"B<CLONE_NEWUSER> was specified in I<flags>, and the call would cause the "
"limit on the number of nested user namespaces to be exceeded.  See "
"B<user_namespaces>(7)."
msgstr ""
"B<CLONE_NEWUSER> wurde in I<Schalter> festgelegt und der Aufruf würde zu "
"einer Überschreitung der Begrenzung für die Anzahl von verschachtelten "
"Benutzernamensräumen führen. Siehe B<user_namespaces>(7)."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"One of the values in I<flags> specified the creation of a new user "
"namespace, but doing so would have caused the limit defined by the "
"corresponding file in I</proc/sys/user> to be exceeded.  For further "
"details, see B<namespaces>(7)."
msgstr ""
"Einer der Werte in I<Schalter> legte die Erstellung eines neuen Benutzer-"
"Namensraums fest, dadurch würde aber die in der entsprechenden Datei in I</"
"proc/sys/user> festgelegte Begrenzung überschritten. Für weitere Details "
"siehe B<namespaces>(7)."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"B<CLONE_NEWUSER> was specified in I<flags>, but either the effective user ID "
"or the effective group ID of the caller does not have a mapping in the "
"parent namespace (see B<user_namespaces>(7))."
msgstr ""
"B<CLONE_NEWUSER> wurde in I<Schalter> festgelegt, aber weder die effektive "
"Benutzerkennung noch die effektive Gruppenkennung des Aufrufenden hat eine "
"Abbildung in den Namensraum der Eltern (siehe B<user_namespaces>(7))."

#.  commit 3151527ee007b73a0ebd296010f1c0454a919c7d
#.  FIXME What is the rationale for this restriction?
#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"B<CLONE_NEWUSER> was specified in I<flags> and the caller is in a chroot "
"environment (i.e., the caller's root directory does not match the root "
"directory of the mount namespace in which it resides)."
msgstr ""
"B<CLONE_NEWUSER> wurde in I<Schalter> festgelegt und der Aufrufende ist in "
"einer Chroot-Umgebung (d.h. das Wurzelverzeichnis des Aufrufenden passt "
"nicht zum Wurzelverzeichnis des Einhängenamensraums, in dem er sich "
"befindet)."

#.  .SH VERSIONS
#.  There is no entry for
#.  .BR clone ()
#.  in libc5.
#.  glibc2 provides
#.  .BR clone ()
#.  as described in this manual page.
#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"B<CLONE_NEWUSER> was specified in I<flags>, and the limit on the number of "
"nested user namespaces would be exceeded.  See the discussion of the "
"B<ENOSPC> error above."
msgstr ""
"B<CLONE_NEWUSER> wurde in I<Schalter> festgelegt und die Begrenzung für die "
"Anzahl von verschachtelten Benutzernamensräumen würde überschritten. Siehe "
"die Diskussion des Fehlers B<ENOSPC> oben."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"B<clone>()  is Linux-specific and should not be used in programs intended to "
"be portable."
msgstr ""
"B<clone>() ist Linux-spezifisch und sollte nicht in portierbaren Programmen "
"benutzt werden."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"Handlers registered using B<pthread_atfork>(3)  are not executed during a "
"call to B<clone>()."
msgstr ""
"Handler, die mittels B<pthread_atfork>(3) registriert sind, werden während "
"eines Aufrufs von B<clone>() nicht ausgeführt."

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"For a while there was B<CLONE_DETACHED> (introduced in 2.5.32): parent wants "
"no child-exit signal.  In Linux 2.6.2, the need to give this flag together "
"with B<CLONE_THREAD> disappeared.  This flag is still defined, but has no "
"effect."
msgstr ""
"Eine Zeitlang gab es B<CLONE_DETACHED> (eingeführt in 2.5.32): der "
"Elternprozess möchte kein Child-Exit-Signal. In Linux 2.6.2 verschwand die "
"Notwendigkeit, diesen Schalter anzugeben zusammen mit B<CLONE_THREAD>. Der "
"Schalter ist weiterhin definiert, hat aber keine Wirkung."

#. type: SH
#: opensuse-leap-15-5
#, no-wrap
msgid "EXAMPLE"
msgstr "BEISPIEL"

#. type: Plain text
#: opensuse-leap-15-5
#, no-wrap
msgid ""
"#define _GNU_SOURCE\n"
"#include E<lt>sys/wait.hE<gt>\n"
"#include E<lt>sys/utsname.hE<gt>\n"
"#include E<lt>sched.hE<gt>\n"
"#include E<lt>string.hE<gt>\n"
"#include E<lt>stdio.hE<gt>\n"
"#include E<lt>stdlib.hE<gt>\n"
"#include E<lt>unistd.hE<gt>\n"
msgstr ""
"#define _GNU_SOURCE\n"
"#include E<lt>sys/wait.hE<gt>\n"
"#include E<lt>sys/utsname.hE<gt>\n"
"#include E<lt>sched.hE<gt>\n"
"#include E<lt>string.hE<gt>\n"
"#include E<lt>stdio.hE<gt>\n"
"#include E<lt>stdlib.hE<gt>\n"
"#include E<lt>unistd.hE<gt>\n"

#. type: Plain text
#: opensuse-leap-15-5
#, no-wrap
msgid "    /* Allocate stack for child */\n"
msgstr "    /* Stapelspeicher für den Kindprozess reservieren */\n"

#. type: Plain text
#: opensuse-leap-15-5
#, no-wrap
msgid ""
"    stack = malloc(STACK_SIZE);\n"
"    if (stack == NULL)\n"
"        errExit(\"malloc\");\n"
"    stackTop = stack + STACK_SIZE;  /* Assume stack grows downward */\n"
msgstr ""
"    stack = malloc(STACK_SIZE);\n"
"    if (stack == NULL)\n"
"        errExit(\"malloc\");\n"
"    stackTop = stack + STACK_SIZE;  /* Annahme, dass Stapelspeicher nach */\n"
"                                       unten wächst */\n"

#. type: Plain text
#: opensuse-leap-15-5
#, no-wrap
msgid ""
"    pid = clone(childFunc, stackTop, CLONE_NEWUTS | SIGCHLD, argv[1]);\n"
"    if (pid == -1)\n"
"        errExit(\"clone\");\n"
"    printf(\"clone() returned %ld\\en\", (long) pid);\n"
msgstr ""
"    pid = clone(childFunc, stackTop, CLONE_NEWUTS | SIGCHLD, argv[1]);\n"
"    if (pid == -1)\n"
"        errExit(\"clone\");\n"
"    printf(\"clone() gab %ld zurück\\en\", (long) pid);\n"

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"B<fork>(2), B<futex>(2), B<getpid>(2), B<gettid>(2), B<kcmp>(2), "
"B<set_thread_area>(2), B<set_tid_address>(2), B<setns>(2), B<tkill>(2), "
"B<unshare>(2), B<wait>(2), B<capabilities>(7), B<namespaces>(7), "
"B<pthreads>(7)"
msgstr ""
"B<fork>(2), B<futex>(2), B<getpid>(2), B<gettid>(2), B<kcmp>(2), "
"B<set_thread_area>(2), B<set_tid_address>(2), B<setns>(2), B<tkill>(2), "
"B<unshare>(2), B<wait>(2), B<capabilities>(7), B<namespaces>(7), "
"B<pthreads>(7)"

#. type: Plain text
#: opensuse-leap-15-5
msgid ""
"This page is part of release 4.16 of the Linux I<man-pages> project.  A "
"description of the project, information about reporting bugs, and the latest "
"version of this page, can be found at \\%https://www.kernel.org/doc/man-"
"pages/."
msgstr ""
"Diese Seite ist Teil der Veröffentlichung 4.16 des Projekts Linux-I<man-"
"pages>. Eine Beschreibung des Projekts, Informationen, wie Fehler gemeldet "
"werden können sowie die aktuelle Version dieser Seite finden sich unter \\"
"%https://www.kernel.org/doc/man-pages/."
