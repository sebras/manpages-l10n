.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.42)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "ICEWM-KEYS 5"
.TH ICEWM-KEYS 5 "2022-08-05" "icewm\ 2.9.9" "Standards, Environments and Macros"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SS "\s-1NAME\s0"
.IX Subsection "NAME"
.Vb 1
\& icewm\-keys \- icewm keys configuration file
.Ve
.SS "\s-1SYNOPSIS\s0"
.IX Subsection "SYNOPSIS"
.Vb 5
\& $ICEWM_PRIVCFG/keys
\& $XDG_CONFIG_HOME/icewm/keys
\& $HOME/.icewm/keys
\& /etc/X11/icewm/keys
\& /usr/share/icewm/keys
.Ve
.SS "\s-1DESCRIPTION\s0"
.IX Subsection "DESCRIPTION"
Global keybindings to launch applications, which need not be window
manager related. If you are looking for ways to disable icewm's grabbing
of default key combinations, please read \fBicewm\-preferences\fR\|(5)
instead.
.PP
Each non-empty line starts with the word \f(CW\*(C`key\*(C'\fR.
After one or more spaces follows a double-quoted string of the bound X11
key combination like \f(CW\*(C`Alt+Ctrl+Shift+X\*(C'\fR.  Then after at least one space
follows a shell command line which will be executed by \fBicewm\fR whenever
this key combination is pressed.  For example, the following line
creates a hotkey to reload the \fBicewm\fR configuration:
.PP
.Vb 1
\&    key "Ctrl+Shift+r"      icesh restart
.Ve
.PP
See the output of \f(CW\*(C`xmodmap \-pk\*(C'\fR for a list of keystroke names.
To bind the mouse use \f(CW\*(C`Pointer_Button1\*(C'\fR for button 1, and so on.
The command \f(CW\*(C`icesh keys\*(C'\fR instructs icewm to reload this file.
.SS "\s-1FORMAT\s0"
.IX Subsection "FORMAT"
The syntax of the \fIkeys\fR file is as follows:
.RS 4
.ie n .IP "\fBkey\fR \fB""\fR\fIkey_combination\fR\fB""\fR \fIprogram\fR \fIoptions\fR" 4
.el .IP "\fBkey\fR \fB``\fR\fIkey_combination\fR\fB''\fR \fIprogram\fR \fIoptions\fR" 4
.IX Item "key ""key_combination"" program options"
.RE
.RS 4
.RE
.PP
Where,
.IP "\fBkey\fR" 4
.IX Item "key"
The literal string keyword.
.IP "\fBswitchkey\fR" 4
.IX Item "switchkey"
The literal string keyword, instead of \f(CW\*(C`key\*(C'\fR, to build popup menus.
The output of \fIprogram\fR should conform to \fBicewm\-menu\fR\|(1).
.IP "\fIkey_combination\fR" 4
.IX Item "key_combination"
A combination of modifiers and a key separated by a plus-sign (\f(CW\*(C`+\*(C'\fR),
like \f(CW\*(C`Ctrl+Alt+Delete\*(C'\fR. Mouse pointer buttons can be specified by
\&\f(CW\*(C`Pointer_Button1\*(C'\fR and up.
.IP "\fIprogram\fR \fIoptions\fR" 4
.IX Item "program options"
\&\fIprogram\fR is the name of the executable or full path to the executable
file that will be run in response to selecting the menu item.  When used
with the \fBswitchkey\fR keyword, the \fIprogram\fR must print on standard
output the contents of the popup like it would be used for dynamic menus.
.Sp
\&\fIoptions\fR are the options and arguments passed to the \fIprogram\fR.
.SS "\s-1EXAMPLES\s0"
.IX Subsection "EXAMPLES"
Following is the example \fIkeys\fR file that ships with \fBicewm\fR\|(1):
.PP
.Vb 11
\&    # This is an example for IceWM\*(Aqs hotkey definition file.
\&    #
\&    # A list of all valid keyboard symbols can be found in
\&    # /usr/include/X11/keysym.h, keysymdefs.h, XF86keysym.h,
\&    # ...  You\*(Aqll have to omit XK_ prefixs and to replace
\&    # XF86XK_ prefixes by XF86. Valid modifiers are Alt,
\&    # Ctrl, Shift, Meta, Super and Hyper.
\&    #
\&    key "Alt+Ctrl+t" xterm
\&    key "Alt+Ctrl+b" xdg\-open about:blank
\&    key "Alt+Ctrl+s" xdg\-open https://www.google.com
\&
\&    key "Super+KP_Subtract" amixer sset PCM 5%\-
\&    key "Super+KP_Add" amixer sset PCM 5%+
\&
\&    # "Multimedia key" bindings for XFree86. Gather the
\&    # keycodes of your advanced function keys by watching the
\&    # output of the xev command whilst pressing those keys
\&    # and map those symbols by using xmodmap.
\&
\&    key "XF86AudioLowerVolume" amixer sset PCM 5%\-
\&    key "XF86AudioRaiseVolume" amixer sset PCM 5%+
\&    key "XF86AudioMute" amixer sset PCM 0%
\&    key "XF86HomePage" xdg\-open about:blank
\&    key "XF86Search" xdg\-open https://www.google.com
\&    key "XF86Eject" eject
\&
\&    # display and select monitor setup configurations
\&    switchkey "Super+p" icewm\-menu\-xrandr
.Ve
.PP
Following shows how to add mouse button bindings on the root window to
change the current workspace rolling the mouse wheel on the desktop:
.PP
.Vb 2
\&    key "Pointer_Button4"   icesh goto prev
\&    key "Pointer_Button5"   icesh goto next
.Ve
.PP
These are key bindings for single window tile operations to replace the
\&\fIKeyWinArrange\fR key bindings from the \fIpreferences\fR file:
.PP
.Vb 9
\&    key "Ctrl+Alt+KP_Home"  icesh \-f sizeto 49% 49% top left
\&    key "Ctrl+Alt+KP_Up"    icesh \-f sizeto 100% 49% top left
\&    key "Ctrl+Alt+KP_Prior" icesh \-f sizeto 49% 49% top right
\&    key "Ctrl+Alt+KP_Right" icesh \-f sizeto 49% 100% top right
\&    key "Ctrl+Alt+KP_Next"  icesh \-f sizeto 49% 49% bottom right
\&    key "Ctrl+Alt+KP_Down"  icesh \-f sizeto 100% 49% bottom left
\&    key "Ctrl+Alt+KP_End"   icesh \-f sizeto 49% 49% bottom left
\&    key "Ctrl+Alt+KP_Left"  icesh \-f sizeto 49% 100% top left
\&    key "Ctrl+Alt+KP_Begin" icesh \-f sizeto 49% 49% center
.Ve
.SS "\s-1FILES\s0"
.IX Subsection "FILES"
Locations for the \fIkeys\fR file are as follows:
.PP
.Vb 5
\& $ICEWM_PRIVCFG/keys
\& $XDG_CONFIG_HOME/icewm/keys
\& $HOME/.icewm/keys
\& /etc/X11/icewm/keys
\& /usr/share/icewm/keys
.Ve
.PP
The locations are searched in the order listed; the first file found is
read and the remainder ignored.
.SS "\s-1SEE ALSO\s0"
.IX Subsection "SEE ALSO"
\&\fBicewm\fR\|(1).
.SS "\s-1AUTHOR\s0"
.IX Subsection "AUTHOR"
Brian Bidulock <mailto:bidulock@openss7.org>.
.SS "\s-1LICENSE\s0"
.IX Subsection "LICENSE"
\&\fBIceWM\fR is licensed under the \s-1GNU\s0 Library General Public License.
See the \fI\s-1COPYING\s0\fR file in the distribution.
