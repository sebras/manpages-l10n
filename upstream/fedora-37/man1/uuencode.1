.de1 NOP
.  it 1 an-trap
.  if \\n[.$] \,\\$*\/
..
.ie t \
.ds B-Font [CB]
.ds I-Font [CI]
.ds R-Font [CR]
.el \
.ds B-Font B
.ds I-Font I
.ds R-Font R
.TH uuencode 1 "30 May 2015" "GNU sharutils (4.15.2)" "User Commands"
.\"
.\" DO NOT EDIT THIS FILE (in-mem file)
.\"
.\" It has been AutoGen-ed
.\" From the definitions uuencode-opts.def
.\" and the template file agman-cmd.tpl
.SH NAME
\f\*[B-Font]uuencode\fP
\- encode a file into email friendly text
.SH SYNOPSIS
\f\*[B-Font]uuencode\fP
.\" Mixture of short (flag) options and long options
[\f\*[B-Font]\-flags\f[]]
[\f\*[B-Font]\-flag\f[] [\f\*[I-Font]value\f[]]]
[\f\*[B-Font]\-\-option-name\f[][[=| ]\f\*[I-Font]value\f[]]]
[<in-file>] <output-name>
.sp \n(Ppu
.ne 2

.SH "DESCRIPTION"
\fIuuencode\fP is used to create an ASCII representation of a file
that can be sent over channels that may otherwise corrupt the data.
Specifically, email cannot handle binary data and will often even
insert a character when the six character sequence "\nFrom " is seen.
.sp
\fIuuencode\fP will read \fIin-file\fP if provided and otherwise
read data from standard in and write the encoded form to standard out.
The output will begin with a header line for use by \fIuudecode\fP
giving it the resulting suggested file \fIoutput-name\fP and access
mode.  If the \fIoutput-name\fP is specifically \fI/dev/stdout\fP,
then \fIuudecode\fP will emit the decoded file to standard out.
.sp
\fBNote\fP: \fIuuencode\fP uses buffered input and assumes that it
is not hand typed from a tty.  The consequence is that at a tty, you
may need to hit Ctl-D several times to terminate input.
.SH "OPTIONS"
.TP
.NOP \f\*[B-Font]\-m\f[], \f\*[B-Font]\-\-base64\f[]
convert using base64.
.sp
By default, \fIuuencode\fP will encode using the traditional
conversion.  It is slower and less compact than base64.
The encoded form of the file is expanded by 37% for UU encoding
and by 35% for base64 encoding (3 bytes become 4 plus control
information).
.TP
.NOP \f\*[B-Font]\-e\f[], \f\*[B-Font]\-\-encode\-file\-name\f[]
encode the output file name.
.sp
Since output file names may contain characters that are not
handled well by various transmission modes, you may specify
that the \fIoutput-name\fP be base64 encoded as well.
(Traditional uuencoding of the file name is not supported.)
.TP
.NOP \f\*[B-Font]\-h\f[], \f\*[B-Font]\-\-help\f[]
Display usage information and exit.
.TP
.NOP \f\*[B-Font]\-\&!\f[], \f\*[B-Font]\-\-more-help\f[]
Pass the extended usage information through a pager.
.TP
.NOP \f\*[B-Font]\-R\f[] [\f\*[I-Font]cfgfile\f[]], \f\*[B-Font]\-\-save-opts\f[] [=\f\*[I-Font]cfgfile\f[]]
Save the option state to \fIcfgfile\fP.  The default is the \fIlast\fP
configuration file listed in the \fBOPTION PRESETS\fP section, below.
The command will exit after updating the config file.
.TP
.NOP \f\*[B-Font]\-r\f[] \f\*[I-Font]cfgfile\f[], \f\*[B-Font]\-\-load-opts\f[]=\f\*[I-Font]cfgfile\f[], \f\*[B-Font]\-\-no-load-opts\f[]
Load options from \fIcfgfile\fP.
The \fIno-load-opts\fP form will disable the loading
of earlier config/rc/ini files.  \fI\-\-no-load-opts\fP is handled early,
out of order.
.TP
.NOP \f\*[B-Font]\-v\f[] [{\f\*[I-Font]v|c|n\f[] \f\*[B-Font]\-\-version\f[] [{\f\*[I-Font]v|c|n\f[]}]}]
Output version of program and exit.  The default mode is `v', a simple
version.  The `c' mode will print copyright information and `n' will
print the full copyright notice.
.PP
.SH "OPTION PRESETS"
Any option that is not marked as \fInot presettable\fP may be preset
by loading values from configuration ("RC" or ".INI") file(s).
The file "\fI$HOME/.sharrc\fP" will be used, if present.
.SH STANDARDS
This implementation is compliant with P1003.2b/D11.
.SH "FILES"
See \fBOPTION PRESETS\fP for configuration files.
.SH "EXIT STATUS"
One of the following exit values will be returned:
.TP
.NOP 0 " (EXIT_SUCCESS)"
Successful program execution.
.TP
.NOP 1 " (EXIT_FAILURE)"
The operation failed or the command syntax was not valid.
.TP
.NOP 66 " (EX_NOINPUT)"
A specified configuration file could not be loaded.
.TP
.NOP 70 " (EX_SOFTWARE)"
libopts had an internal operational error.  Please report
it to autogen-users@lists.sourceforge.net.  Thank you.
.PP
.SH "SEE ALSO"
uudecode(1), uuencode(5)
.SH HISTORY
The \fBuuencode\fP command first appeared in BSD 4.0.
.SH "AUTHORS"
Free Software Foundation, Inc.
.SH "COPYRIGHT"
Copyright (C) 1994-2015 Free Software Foundation, Inc. all rights reserved.
This program is released under the terms of the GNU General Public License, version 3 or later.
.SH BUGS
Please put \fBsharutils\fP in the subject line for emailed bug
reports.  It helps to spot the message.
.sp \n(Ppu
.ne 2

Please send bug reports to: bug-gnu-utils@gnu.org
.SH "NOTES"
This manual page was \fIAutoGen\fP-erated from the \fBuuencode\fP
option definitions.
