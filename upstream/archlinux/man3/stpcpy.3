.\" Copyright 1995 James R. Van Zandt <jrv@vanzandt.mv.com>
.\"
.\" SPDX-License-Identifier: Linux-man-pages-copyleft
.\"
.TH STPCPY 3 2022-10-09 "Linux man-pages 6.01"
.SH NAME
stpcpy \- copy a string returning a pointer to its end
.SH LIBRARY
Standard C library
.RI ( libc ", " \-lc )
.SH SYNOPSIS
.nf
.B #include <string.h>
.PP
.BI "char *stpcpy(char *restrict " dest ", const char *restrict " src );
.fi
.PP
.RS -4
Feature Test Macro Requirements for glibc (see
.BR feature_test_macros (7)):
.RE
.PP
.BR stpcpy ():
.nf
    Since glibc 2.10:
        _POSIX_C_SOURCE >= 200809L
    Before glibc 2.10:
        _GNU_SOURCE
.fi
.SH DESCRIPTION
The
.BR stpcpy ()
function copies the string pointed to by
.I src
(including the terminating null byte (\(aq\e0\(aq)) to the array pointed to by
.IR dest .
The strings may not overlap, and the destination string
.I dest
must be large enough to receive the copy.
.SH RETURN VALUE
.BR stpcpy ()
returns a pointer to the
.B end
of the string
.I dest
(that is, the address of the terminating null byte)
rather than the beginning.
.SH ATTRIBUTES
For an explanation of the terms used in this section, see
.BR attributes (7).
.ad l
.nh
.TS
allbox;
lbx lb lb
l l l.
Interface	Attribute	Value
T{
.BR stpcpy ()
T}	Thread safety	MT-Safe
.TE
.hy
.ad
.sp 1
.SH STANDARDS
This function was added to POSIX.1-2008.
Before that, it was not part of
the C or POSIX.1 standards, nor customary on UNIX systems.
It first appeared at least as early as 1986,
in the Lattice C AmigaDOS compiler,
then in the GNU fileutils and GNU textutils in 1989,
and in the GNU C library by 1992.
It is also present on the BSDs.
.SH BUGS
This function may overrun the buffer
.IR dest .
.SH EXAMPLES
For example, this program uses
.BR stpcpy ()
to concatenate
.B foo
and
.B bar
to produce
.BR foobar ,
which it then prints.
.PP
.\" SRC BEGIN (stpcpy.c)
.EX
#define _GNU_SOURCE
#include <stdio.h>
#include <string.h>

int
main(void)
{
    char buffer[20];
    char *to = buffer;

    to = stpcpy(to, "foo");
    to = stpcpy(to, "bar");
    printf("%s\en", buffer);
}
.EE
.\" SRC END
.SH SEE ALSO
.BR bcopy (3),
.BR memccpy (3),
.BR memcpy (3),
.BR memmove (3),
.BR stpncpy (3),
.BR strcpy (3),
.BR string (3),
.BR wcpcpy (3)
